	.def	 _transaction_52;
	.scl	2;
	.type	32;
	.endef
	.text
	.globl	_transaction_52
	.align	16, 0x90
_transaction_52:                        # @_transaction_52
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	4624(%rcx), %r14
	cmpl	$0, 4640(%rcx)
	je	.LBB0_2
# BB#1:
	addq	$4488, %rcx             # imm = 0x1188
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB0_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB0_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB0_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_53;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_53
	.align	16, 0x90
_transaction_53:                        # @_transaction_53
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	5048(%r14), %r15
	cmpl	$0, 5080(%r14)
	je	.LBB1_2
# BB#1:
	leaq	4912(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB1_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB1_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB1_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_5
# BB#145:
	leaq	49454856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_7
# BB#146:
	leaq	49449448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_9
# BB#147:
	leaq	49444040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_11
# BB#148:
	leaq	49438632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_13
# BB#149:
	leaq	49638728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_15
# BB#150:
	leaq	49633320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_17
# BB#151:
	leaq	49627912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_19
# BB#152:
	leaq	49622504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_21
# BB#153:
	leaq	49281800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_23
# BB#154:
	leaq	49276392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_25
# BB#155:
	leaq	49270984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_27
# BB#156:
	leaq	49265576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_29
# BB#157:
	leaq	49303432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_31
# BB#158:
	leaq	49298024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_33
# BB#159:
	leaq	49292616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_35
# BB#160:
	leaq	49287208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_37
# BB#161:
	leaq	49325064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_39
# BB#162:
	leaq	49319656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_41
# BB#163:
	leaq	49314248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_43
# BB#164:
	leaq	49308840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_45
# BB#165:
	leaq	49346696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_47
# BB#166:
	leaq	49341288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_49
# BB#167:
	leaq	49335880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_51
# BB#168:
	leaq	49330472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_53
# BB#169:
	leaq	49368328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_55
# BB#170:
	leaq	49362920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_57
# BB#171:
	leaq	49357512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_59
# BB#172:
	leaq	49352104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_61
# BB#173:
	leaq	49389960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_63
# BB#174:
	leaq	49384552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_65
# BB#175:
	leaq	49379144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_67
# BB#176:
	leaq	49373736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_69
# BB#177:
	leaq	49411592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_71
# BB#178:
	leaq	49406184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_73
# BB#179:
	leaq	49400776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_75
# BB#180:
	leaq	49395368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_77
# BB#181:
	leaq	49433224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_79
# BB#182:
	leaq	49427816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_81
# BB#183:
	leaq	49422408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_83
# BB#184:
	leaq	49417000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_85
# BB#185:
	leaq	49476488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_87
# BB#186:
	leaq	49471080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_89
# BB#187:
	leaq	49465672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_91
# BB#188:
	leaq	49460264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_93
# BB#189:
	leaq	49498120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_95
# BB#190:
	leaq	49492712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_97
# BB#191:
	leaq	49487304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_99
# BB#192:
	leaq	49481896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_101
# BB#193:
	leaq	49519752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_103
# BB#194:
	leaq	49514344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_105
# BB#195:
	leaq	49508936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_107
# BB#196:
	leaq	49503528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_109
# BB#197:
	leaq	49541384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_111
# BB#198:
	leaq	49535976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_113
# BB#199:
	leaq	49530568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_115
# BB#200:
	leaq	49525160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_117
# BB#201:
	leaq	49563016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_119
# BB#202:
	leaq	49557608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_121
# BB#203:
	leaq	49552200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_123
# BB#204:
	leaq	49546792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_125
# BB#205:
	leaq	49584648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_127
# BB#206:
	leaq	49579240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_129
# BB#207:
	leaq	49573832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_131
# BB#208:
	leaq	49568424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_133
# BB#209:
	leaq	49606280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_135
# BB#210:
	leaq	49600872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_137
# BB#211:
	leaq	49595464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_139
# BB#212:
	leaq	49590056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_141
# BB#213:
	leaq	49617096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB1_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB1_143
# BB#214:
	addq	$49611688, %r14         # imm = 0x2F503A8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB1_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB1_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_54;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_54
	.align	16, 0x90
_transaction_54:                        # @_transaction_54
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	22600(%r14), %r15
	cmpl	$0, 22632(%r14)
	je	.LBB2_2
# BB#1:
	leaq	22464(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB2_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB2_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB2_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_5
# BB#145:
	leaq	52228936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_7
# BB#146:
	leaq	52223528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_9
# BB#147:
	leaq	52218120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_11
# BB#148:
	leaq	52212712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_13
# BB#149:
	leaq	52412808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_15
# BB#150:
	leaq	52407400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_17
# BB#151:
	leaq	52401992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_19
# BB#152:
	leaq	52396584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_21
# BB#153:
	leaq	52055880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_23
# BB#154:
	leaq	52050472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_25
# BB#155:
	leaq	52045064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_27
# BB#156:
	leaq	52039656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_29
# BB#157:
	leaq	52077512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_31
# BB#158:
	leaq	52072104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_33
# BB#159:
	leaq	52066696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_35
# BB#160:
	leaq	52061288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_37
# BB#161:
	leaq	52099144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_39
# BB#162:
	leaq	52093736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_41
# BB#163:
	leaq	52088328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_43
# BB#164:
	leaq	52082920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_45
# BB#165:
	leaq	52120776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_47
# BB#166:
	leaq	52115368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_49
# BB#167:
	leaq	52109960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_51
# BB#168:
	leaq	52104552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_53
# BB#169:
	leaq	52142408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_55
# BB#170:
	leaq	52137000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_57
# BB#171:
	leaq	52131592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_59
# BB#172:
	leaq	52126184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_61
# BB#173:
	leaq	52164040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_63
# BB#174:
	leaq	52158632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_65
# BB#175:
	leaq	52153224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_67
# BB#176:
	leaq	52147816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_69
# BB#177:
	leaq	52185672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_71
# BB#178:
	leaq	52180264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_73
# BB#179:
	leaq	52174856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_75
# BB#180:
	leaq	52169448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_77
# BB#181:
	leaq	52207304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_79
# BB#182:
	leaq	52201896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_81
# BB#183:
	leaq	52196488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_83
# BB#184:
	leaq	52191080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_85
# BB#185:
	leaq	52250568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_87
# BB#186:
	leaq	52245160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_89
# BB#187:
	leaq	52239752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_91
# BB#188:
	leaq	52234344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_93
# BB#189:
	leaq	52272200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_95
# BB#190:
	leaq	52266792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_97
# BB#191:
	leaq	52261384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_99
# BB#192:
	leaq	52255976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_101
# BB#193:
	leaq	52293832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_103
# BB#194:
	leaq	52288424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_105
# BB#195:
	leaq	52283016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_107
# BB#196:
	leaq	52277608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_109
# BB#197:
	leaq	52315464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_111
# BB#198:
	leaq	52310056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_113
# BB#199:
	leaq	52304648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_115
# BB#200:
	leaq	52299240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_117
# BB#201:
	leaq	52337096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_119
# BB#202:
	leaq	52331688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_121
# BB#203:
	leaq	52326280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_123
# BB#204:
	leaq	52320872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_125
# BB#205:
	leaq	52358728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_127
# BB#206:
	leaq	52353320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_129
# BB#207:
	leaq	52347912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_131
# BB#208:
	leaq	52342504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_133
# BB#209:
	leaq	52380360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_135
# BB#210:
	leaq	52374952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_137
# BB#211:
	leaq	52369544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_139
# BB#212:
	leaq	52364136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_141
# BB#213:
	leaq	52391176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB2_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB2_143
# BB#214:
	addq	$52385768, %r14         # imm = 0x31F57E8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB2_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB2_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_55;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_55
	.align	16, 0x90
_transaction_55:                        # @_transaction_55
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	40152(%r14), %r15
	cmpl	$0, 40184(%r14)
	je	.LBB3_2
# BB#1:
	leaq	40016(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB3_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB3_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB3_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_5
# BB#145:
	leaq	55003016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_7
# BB#146:
	leaq	54997608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_9
# BB#147:
	leaq	54992200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_11
# BB#148:
	leaq	54986792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_13
# BB#149:
	leaq	55186888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_15
# BB#150:
	leaq	55181480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_17
# BB#151:
	leaq	55176072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_19
# BB#152:
	leaq	55170664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_21
# BB#153:
	leaq	54829960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_23
# BB#154:
	leaq	54824552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_25
# BB#155:
	leaq	54819144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_27
# BB#156:
	leaq	54813736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_29
# BB#157:
	leaq	54851592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_31
# BB#158:
	leaq	54846184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_33
# BB#159:
	leaq	54840776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_35
# BB#160:
	leaq	54835368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_37
# BB#161:
	leaq	54873224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_39
# BB#162:
	leaq	54867816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_41
# BB#163:
	leaq	54862408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_43
# BB#164:
	leaq	54857000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_45
# BB#165:
	leaq	54894856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_47
# BB#166:
	leaq	54889448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_49
# BB#167:
	leaq	54884040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_51
# BB#168:
	leaq	54878632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_53
# BB#169:
	leaq	54916488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_55
# BB#170:
	leaq	54911080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_57
# BB#171:
	leaq	54905672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_59
# BB#172:
	leaq	54900264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_61
# BB#173:
	leaq	54938120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_63
# BB#174:
	leaq	54932712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_65
# BB#175:
	leaq	54927304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_67
# BB#176:
	leaq	54921896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_69
# BB#177:
	leaq	54959752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_71
# BB#178:
	leaq	54954344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_73
# BB#179:
	leaq	54948936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_75
# BB#180:
	leaq	54943528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_77
# BB#181:
	leaq	54981384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_79
# BB#182:
	leaq	54975976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_81
# BB#183:
	leaq	54970568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_83
# BB#184:
	leaq	54965160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_85
# BB#185:
	leaq	55024648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_87
# BB#186:
	leaq	55019240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_89
# BB#187:
	leaq	55013832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_91
# BB#188:
	leaq	55008424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_93
# BB#189:
	leaq	55046280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_95
# BB#190:
	leaq	55040872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_97
# BB#191:
	leaq	55035464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_99
# BB#192:
	leaq	55030056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_101
# BB#193:
	leaq	55067912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_103
# BB#194:
	leaq	55062504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_105
# BB#195:
	leaq	55057096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_107
# BB#196:
	leaq	55051688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_109
# BB#197:
	leaq	55089544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_111
# BB#198:
	leaq	55084136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_113
# BB#199:
	leaq	55078728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_115
# BB#200:
	leaq	55073320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_117
# BB#201:
	leaq	55111176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_119
# BB#202:
	leaq	55105768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_121
# BB#203:
	leaq	55100360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_123
# BB#204:
	leaq	55094952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_125
# BB#205:
	leaq	55132808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_127
# BB#206:
	leaq	55127400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_129
# BB#207:
	leaq	55121992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_131
# BB#208:
	leaq	55116584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_133
# BB#209:
	leaq	55154440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_135
# BB#210:
	leaq	55149032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_137
# BB#211:
	leaq	55143624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_139
# BB#212:
	leaq	55138216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_141
# BB#213:
	leaq	55165256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB3_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB3_143
# BB#214:
	addq	$55159848, %r14         # imm = 0x349AC28
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB3_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB3_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_56;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_56
	.align	16, 0x90
_transaction_56:                        # @_transaction_56
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	57704(%r14), %r15
	cmpl	$0, 57736(%r14)
	je	.LBB4_2
# BB#1:
	leaq	57568(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB4_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB4_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB4_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_5
# BB#145:
	leaq	57777096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_7
# BB#146:
	leaq	57771688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_9
# BB#147:
	leaq	57766280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_11
# BB#148:
	leaq	57760872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_13
# BB#149:
	leaq	57960968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_15
# BB#150:
	leaq	57955560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_17
# BB#151:
	leaq	57950152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_19
# BB#152:
	leaq	57944744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_21
# BB#153:
	leaq	57604040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_23
# BB#154:
	leaq	57598632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_25
# BB#155:
	leaq	57593224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_27
# BB#156:
	leaq	57587816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_29
# BB#157:
	leaq	57625672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_31
# BB#158:
	leaq	57620264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_33
# BB#159:
	leaq	57614856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_35
# BB#160:
	leaq	57609448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_37
# BB#161:
	leaq	57647304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_39
# BB#162:
	leaq	57641896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_41
# BB#163:
	leaq	57636488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_43
# BB#164:
	leaq	57631080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_45
# BB#165:
	leaq	57668936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_47
# BB#166:
	leaq	57663528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_49
# BB#167:
	leaq	57658120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_51
# BB#168:
	leaq	57652712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_53
# BB#169:
	leaq	57690568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_55
# BB#170:
	leaq	57685160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_57
# BB#171:
	leaq	57679752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_59
# BB#172:
	leaq	57674344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_61
# BB#173:
	leaq	57712200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_63
# BB#174:
	leaq	57706792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_65
# BB#175:
	leaq	57701384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_67
# BB#176:
	leaq	57695976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_69
# BB#177:
	leaq	57733832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_71
# BB#178:
	leaq	57728424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_73
# BB#179:
	leaq	57723016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_75
# BB#180:
	leaq	57717608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_77
# BB#181:
	leaq	57755464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_79
# BB#182:
	leaq	57750056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_81
# BB#183:
	leaq	57744648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_83
# BB#184:
	leaq	57739240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_85
# BB#185:
	leaq	57798728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_87
# BB#186:
	leaq	57793320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_89
# BB#187:
	leaq	57787912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_91
# BB#188:
	leaq	57782504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_93
# BB#189:
	leaq	57820360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_95
# BB#190:
	leaq	57814952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_97
# BB#191:
	leaq	57809544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_99
# BB#192:
	leaq	57804136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_101
# BB#193:
	leaq	57841992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_103
# BB#194:
	leaq	57836584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_105
# BB#195:
	leaq	57831176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_107
# BB#196:
	leaq	57825768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_109
# BB#197:
	leaq	57863624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_111
# BB#198:
	leaq	57858216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_113
# BB#199:
	leaq	57852808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_115
# BB#200:
	leaq	57847400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_117
# BB#201:
	leaq	57885256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_119
# BB#202:
	leaq	57879848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_121
# BB#203:
	leaq	57874440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_123
# BB#204:
	leaq	57869032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_125
# BB#205:
	leaq	57906888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_127
# BB#206:
	leaq	57901480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_129
# BB#207:
	leaq	57896072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_131
# BB#208:
	leaq	57890664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_133
# BB#209:
	leaq	57928520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_135
# BB#210:
	leaq	57923112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_137
# BB#211:
	leaq	57917704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_139
# BB#212:
	leaq	57912296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_141
# BB#213:
	leaq	57939336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB4_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB4_143
# BB#214:
	addq	$57933928, %r14         # imm = 0x3740068
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB4_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB4_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_57;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_57
	.align	16, 0x90
_transaction_57:                        # @_transaction_57
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	75256(%r14), %r15
	cmpl	$0, 75288(%r14)
	je	.LBB5_2
# BB#1:
	leaq	75120(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB5_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB5_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB5_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_5
# BB#145:
	leaq	60551176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_7
# BB#146:
	leaq	60545768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_9
# BB#147:
	leaq	60540360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_11
# BB#148:
	leaq	60534952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_13
# BB#149:
	leaq	60735048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_15
# BB#150:
	leaq	60729640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_17
# BB#151:
	leaq	60724232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_19
# BB#152:
	leaq	60718824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_21
# BB#153:
	leaq	60378120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_23
# BB#154:
	leaq	60372712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_25
# BB#155:
	leaq	60367304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_27
# BB#156:
	leaq	60361896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_29
# BB#157:
	leaq	60399752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_31
# BB#158:
	leaq	60394344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_33
# BB#159:
	leaq	60388936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_35
# BB#160:
	leaq	60383528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_37
# BB#161:
	leaq	60421384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_39
# BB#162:
	leaq	60415976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_41
# BB#163:
	leaq	60410568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_43
# BB#164:
	leaq	60405160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_45
# BB#165:
	leaq	60443016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_47
# BB#166:
	leaq	60437608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_49
# BB#167:
	leaq	60432200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_51
# BB#168:
	leaq	60426792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_53
# BB#169:
	leaq	60464648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_55
# BB#170:
	leaq	60459240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_57
# BB#171:
	leaq	60453832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_59
# BB#172:
	leaq	60448424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_61
# BB#173:
	leaq	60486280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_63
# BB#174:
	leaq	60480872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_65
# BB#175:
	leaq	60475464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_67
# BB#176:
	leaq	60470056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_69
# BB#177:
	leaq	60507912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_71
# BB#178:
	leaq	60502504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_73
# BB#179:
	leaq	60497096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_75
# BB#180:
	leaq	60491688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_77
# BB#181:
	leaq	60529544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_79
# BB#182:
	leaq	60524136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_81
# BB#183:
	leaq	60518728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_83
# BB#184:
	leaq	60513320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_85
# BB#185:
	leaq	60572808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_87
# BB#186:
	leaq	60567400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_89
# BB#187:
	leaq	60561992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_91
# BB#188:
	leaq	60556584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_93
# BB#189:
	leaq	60594440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_95
# BB#190:
	leaq	60589032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_97
# BB#191:
	leaq	60583624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_99
# BB#192:
	leaq	60578216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_101
# BB#193:
	leaq	60616072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_103
# BB#194:
	leaq	60610664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_105
# BB#195:
	leaq	60605256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_107
# BB#196:
	leaq	60599848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_109
# BB#197:
	leaq	60637704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_111
# BB#198:
	leaq	60632296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_113
# BB#199:
	leaq	60626888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_115
# BB#200:
	leaq	60621480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_117
# BB#201:
	leaq	60659336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_119
# BB#202:
	leaq	60653928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_121
# BB#203:
	leaq	60648520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_123
# BB#204:
	leaq	60643112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_125
# BB#205:
	leaq	60680968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_127
# BB#206:
	leaq	60675560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_129
# BB#207:
	leaq	60670152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_131
# BB#208:
	leaq	60664744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_133
# BB#209:
	leaq	60702600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_135
# BB#210:
	leaq	60697192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_137
# BB#211:
	leaq	60691784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_139
# BB#212:
	leaq	60686376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_141
# BB#213:
	leaq	60713416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB5_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB5_143
# BB#214:
	addq	$60708008, %r14         # imm = 0x39E54A8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB5_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB5_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_58;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_58
	.align	16, 0x90
_transaction_58:                        # @_transaction_58
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	92808(%r14), %r15
	cmpl	$0, 92840(%r14)
	je	.LBB6_2
# BB#1:
	leaq	92672(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB6_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB6_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB6_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_5
# BB#145:
	leaq	63325256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_7
# BB#146:
	leaq	63319848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_9
# BB#147:
	leaq	63314440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_11
# BB#148:
	leaq	63309032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_13
# BB#149:
	leaq	63509128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_15
# BB#150:
	leaq	63503720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_17
# BB#151:
	leaq	63498312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_19
# BB#152:
	leaq	63492904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_21
# BB#153:
	leaq	63152200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_23
# BB#154:
	leaq	63146792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_25
# BB#155:
	leaq	63141384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_27
# BB#156:
	leaq	63135976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_29
# BB#157:
	leaq	63173832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_31
# BB#158:
	leaq	63168424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_33
# BB#159:
	leaq	63163016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_35
# BB#160:
	leaq	63157608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_37
# BB#161:
	leaq	63195464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_39
# BB#162:
	leaq	63190056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_41
# BB#163:
	leaq	63184648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_43
# BB#164:
	leaq	63179240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_45
# BB#165:
	leaq	63217096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_47
# BB#166:
	leaq	63211688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_49
# BB#167:
	leaq	63206280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_51
# BB#168:
	leaq	63200872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_53
# BB#169:
	leaq	63238728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_55
# BB#170:
	leaq	63233320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_57
# BB#171:
	leaq	63227912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_59
# BB#172:
	leaq	63222504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_61
# BB#173:
	leaq	63260360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_63
# BB#174:
	leaq	63254952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_65
# BB#175:
	leaq	63249544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_67
# BB#176:
	leaq	63244136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_69
# BB#177:
	leaq	63281992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_71
# BB#178:
	leaq	63276584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_73
# BB#179:
	leaq	63271176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_75
# BB#180:
	leaq	63265768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_77
# BB#181:
	leaq	63303624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_79
# BB#182:
	leaq	63298216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_81
# BB#183:
	leaq	63292808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_83
# BB#184:
	leaq	63287400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_85
# BB#185:
	leaq	63346888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_87
# BB#186:
	leaq	63341480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_89
# BB#187:
	leaq	63336072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_91
# BB#188:
	leaq	63330664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_93
# BB#189:
	leaq	63368520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_95
# BB#190:
	leaq	63363112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_97
# BB#191:
	leaq	63357704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_99
# BB#192:
	leaq	63352296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_101
# BB#193:
	leaq	63390152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_103
# BB#194:
	leaq	63384744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_105
# BB#195:
	leaq	63379336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_107
# BB#196:
	leaq	63373928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_109
# BB#197:
	leaq	63411784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_111
# BB#198:
	leaq	63406376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_113
# BB#199:
	leaq	63400968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_115
# BB#200:
	leaq	63395560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_117
# BB#201:
	leaq	63433416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_119
# BB#202:
	leaq	63428008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_121
# BB#203:
	leaq	63422600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_123
# BB#204:
	leaq	63417192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_125
# BB#205:
	leaq	63455048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_127
# BB#206:
	leaq	63449640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_129
# BB#207:
	leaq	63444232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_131
# BB#208:
	leaq	63438824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_133
# BB#209:
	leaq	63476680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_135
# BB#210:
	leaq	63471272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_137
# BB#211:
	leaq	63465864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_139
# BB#212:
	leaq	63460456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_141
# BB#213:
	leaq	63487496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB6_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB6_143
# BB#214:
	addq	$63482088, %r14         # imm = 0x3C8A8E8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB6_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB6_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_59;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_59
	.align	16, 0x90
_transaction_59:                        # @_transaction_59
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	110360(%r14), %r15
	cmpl	$0, 110392(%r14)
	je	.LBB7_2
# BB#1:
	leaq	110224(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB7_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB7_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB7_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_5
# BB#145:
	leaq	66099336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_7
# BB#146:
	leaq	66093928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_9
# BB#147:
	leaq	66088520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_11
# BB#148:
	leaq	66083112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_13
# BB#149:
	leaq	66283208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_15
# BB#150:
	leaq	66277800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_17
# BB#151:
	leaq	66272392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_19
# BB#152:
	leaq	66266984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_21
# BB#153:
	leaq	65926280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_23
# BB#154:
	leaq	65920872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_25
# BB#155:
	leaq	65915464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_27
# BB#156:
	leaq	65910056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_29
# BB#157:
	leaq	65947912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_31
# BB#158:
	leaq	65942504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_33
# BB#159:
	leaq	65937096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_35
# BB#160:
	leaq	65931688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_37
# BB#161:
	leaq	65969544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_39
# BB#162:
	leaq	65964136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_41
# BB#163:
	leaq	65958728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_43
# BB#164:
	leaq	65953320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_45
# BB#165:
	leaq	65991176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_47
# BB#166:
	leaq	65985768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_49
# BB#167:
	leaq	65980360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_51
# BB#168:
	leaq	65974952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_53
# BB#169:
	leaq	66012808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_55
# BB#170:
	leaq	66007400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_57
# BB#171:
	leaq	66001992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_59
# BB#172:
	leaq	65996584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_61
# BB#173:
	leaq	66034440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_63
# BB#174:
	leaq	66029032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_65
# BB#175:
	leaq	66023624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_67
# BB#176:
	leaq	66018216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_69
# BB#177:
	leaq	66056072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_71
# BB#178:
	leaq	66050664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_73
# BB#179:
	leaq	66045256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_75
# BB#180:
	leaq	66039848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_77
# BB#181:
	leaq	66077704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_79
# BB#182:
	leaq	66072296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_81
# BB#183:
	leaq	66066888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_83
# BB#184:
	leaq	66061480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_85
# BB#185:
	leaq	66120968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_87
# BB#186:
	leaq	66115560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_89
# BB#187:
	leaq	66110152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_91
# BB#188:
	leaq	66104744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_93
# BB#189:
	leaq	66142600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_95
# BB#190:
	leaq	66137192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_97
# BB#191:
	leaq	66131784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_99
# BB#192:
	leaq	66126376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_101
# BB#193:
	leaq	66164232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_103
# BB#194:
	leaq	66158824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_105
# BB#195:
	leaq	66153416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_107
# BB#196:
	leaq	66148008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_109
# BB#197:
	leaq	66185864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_111
# BB#198:
	leaq	66180456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_113
# BB#199:
	leaq	66175048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_115
# BB#200:
	leaq	66169640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_117
# BB#201:
	leaq	66207496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_119
# BB#202:
	leaq	66202088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_121
# BB#203:
	leaq	66196680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_123
# BB#204:
	leaq	66191272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_125
# BB#205:
	leaq	66229128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_127
# BB#206:
	leaq	66223720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_129
# BB#207:
	leaq	66218312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_131
# BB#208:
	leaq	66212904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_133
# BB#209:
	leaq	66250760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_135
# BB#210:
	leaq	66245352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_137
# BB#211:
	leaq	66239944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_139
# BB#212:
	leaq	66234536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_141
# BB#213:
	leaq	66261576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB7_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB7_143
# BB#214:
	addq	$66256168, %r14         # imm = 0x3F2FD28
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB7_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB7_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_60;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_60
	.align	16, 0x90
_transaction_60:                        # @_transaction_60
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	127912(%r14), %r15
	cmpl	$0, 127944(%r14)
	je	.LBB8_2
# BB#1:
	leaq	127776(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB8_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB8_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB8_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_5
# BB#145:
	leaq	68873416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_7
# BB#146:
	leaq	68868008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_9
# BB#147:
	leaq	68862600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_11
# BB#148:
	leaq	68857192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_13
# BB#149:
	leaq	69057288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_15
# BB#150:
	leaq	69051880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_17
# BB#151:
	leaq	69046472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_19
# BB#152:
	leaq	69041064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_21
# BB#153:
	leaq	68700360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_23
# BB#154:
	leaq	68694952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_25
# BB#155:
	leaq	68689544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_27
# BB#156:
	leaq	68684136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_29
# BB#157:
	leaq	68721992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_31
# BB#158:
	leaq	68716584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_33
# BB#159:
	leaq	68711176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_35
# BB#160:
	leaq	68705768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_37
# BB#161:
	leaq	68743624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_39
# BB#162:
	leaq	68738216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_41
# BB#163:
	leaq	68732808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_43
# BB#164:
	leaq	68727400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_45
# BB#165:
	leaq	68765256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_47
# BB#166:
	leaq	68759848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_49
# BB#167:
	leaq	68754440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_51
# BB#168:
	leaq	68749032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_53
# BB#169:
	leaq	68786888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_55
# BB#170:
	leaq	68781480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_57
# BB#171:
	leaq	68776072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_59
# BB#172:
	leaq	68770664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_61
# BB#173:
	leaq	68808520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_63
# BB#174:
	leaq	68803112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_65
# BB#175:
	leaq	68797704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_67
# BB#176:
	leaq	68792296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_69
# BB#177:
	leaq	68830152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_71
# BB#178:
	leaq	68824744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_73
# BB#179:
	leaq	68819336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_75
# BB#180:
	leaq	68813928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_77
# BB#181:
	leaq	68851784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_79
# BB#182:
	leaq	68846376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_81
# BB#183:
	leaq	68840968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_83
# BB#184:
	leaq	68835560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_85
# BB#185:
	leaq	68895048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_87
# BB#186:
	leaq	68889640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_89
# BB#187:
	leaq	68884232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_91
# BB#188:
	leaq	68878824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_93
# BB#189:
	leaq	68916680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_95
# BB#190:
	leaq	68911272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_97
# BB#191:
	leaq	68905864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_99
# BB#192:
	leaq	68900456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_101
# BB#193:
	leaq	68938312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_103
# BB#194:
	leaq	68932904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_105
# BB#195:
	leaq	68927496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_107
# BB#196:
	leaq	68922088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_109
# BB#197:
	leaq	68959944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_111
# BB#198:
	leaq	68954536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_113
# BB#199:
	leaq	68949128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_115
# BB#200:
	leaq	68943720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_117
# BB#201:
	leaq	68981576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_119
# BB#202:
	leaq	68976168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_121
# BB#203:
	leaq	68970760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_123
# BB#204:
	leaq	68965352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_125
# BB#205:
	leaq	69003208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_127
# BB#206:
	leaq	68997800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_129
# BB#207:
	leaq	68992392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_131
# BB#208:
	leaq	68986984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_133
# BB#209:
	leaq	69024840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_135
# BB#210:
	leaq	69019432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_137
# BB#211:
	leaq	69014024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_139
# BB#212:
	leaq	69008616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_141
# BB#213:
	leaq	69035656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB8_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB8_143
# BB#214:
	addq	$69030248, %r14         # imm = 0x41D5168
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB8_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB8_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_61;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_61
	.align	16, 0x90
_transaction_61:                        # @_transaction_61
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	145464(%r14), %r15
	cmpl	$0, 145496(%r14)
	je	.LBB9_2
# BB#1:
	leaq	145328(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB9_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB9_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB9_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_5
# BB#145:
	leaq	71647496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_7
# BB#146:
	leaq	71642088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_9
# BB#147:
	leaq	71636680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_11
# BB#148:
	leaq	71631272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_13
# BB#149:
	leaq	71831368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_15
# BB#150:
	leaq	71825960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_17
# BB#151:
	leaq	71820552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_19
# BB#152:
	leaq	71815144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_21
# BB#153:
	leaq	71474440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_23
# BB#154:
	leaq	71469032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_25
# BB#155:
	leaq	71463624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_27
# BB#156:
	leaq	71458216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_29
# BB#157:
	leaq	71496072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_31
# BB#158:
	leaq	71490664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_33
# BB#159:
	leaq	71485256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_35
# BB#160:
	leaq	71479848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_37
# BB#161:
	leaq	71517704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_39
# BB#162:
	leaq	71512296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_41
# BB#163:
	leaq	71506888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_43
# BB#164:
	leaq	71501480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_45
# BB#165:
	leaq	71539336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_47
# BB#166:
	leaq	71533928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_49
# BB#167:
	leaq	71528520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_51
# BB#168:
	leaq	71523112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_53
# BB#169:
	leaq	71560968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_55
# BB#170:
	leaq	71555560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_57
# BB#171:
	leaq	71550152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_59
# BB#172:
	leaq	71544744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_61
# BB#173:
	leaq	71582600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_63
# BB#174:
	leaq	71577192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_65
# BB#175:
	leaq	71571784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_67
# BB#176:
	leaq	71566376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_69
# BB#177:
	leaq	71604232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_71
# BB#178:
	leaq	71598824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_73
# BB#179:
	leaq	71593416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_75
# BB#180:
	leaq	71588008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_77
# BB#181:
	leaq	71625864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_79
# BB#182:
	leaq	71620456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_81
# BB#183:
	leaq	71615048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_83
# BB#184:
	leaq	71609640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_85
# BB#185:
	leaq	71669128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_87
# BB#186:
	leaq	71663720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_89
# BB#187:
	leaq	71658312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_91
# BB#188:
	leaq	71652904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_93
# BB#189:
	leaq	71690760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_95
# BB#190:
	leaq	71685352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_97
# BB#191:
	leaq	71679944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_99
# BB#192:
	leaq	71674536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_101
# BB#193:
	leaq	71712392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_103
# BB#194:
	leaq	71706984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_105
# BB#195:
	leaq	71701576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_107
# BB#196:
	leaq	71696168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_109
# BB#197:
	leaq	71734024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_111
# BB#198:
	leaq	71728616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_113
# BB#199:
	leaq	71723208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_115
# BB#200:
	leaq	71717800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_117
# BB#201:
	leaq	71755656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_119
# BB#202:
	leaq	71750248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_121
# BB#203:
	leaq	71744840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_123
# BB#204:
	leaq	71739432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_125
# BB#205:
	leaq	71777288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_127
# BB#206:
	leaq	71771880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_129
# BB#207:
	leaq	71766472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_131
# BB#208:
	leaq	71761064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_133
# BB#209:
	leaq	71798920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_135
# BB#210:
	leaq	71793512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_137
# BB#211:
	leaq	71788104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_139
# BB#212:
	leaq	71782696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_141
# BB#213:
	leaq	71809736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB9_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB9_143
# BB#214:
	addq	$71804328, %r14         # imm = 0x447A5A8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB9_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB9_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_62;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_62
	.align	16, 0x90
_transaction_62:                        # @_transaction_62
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	163016(%r14), %r15
	cmpl	$0, 163048(%r14)
	je	.LBB10_2
# BB#1:
	leaq	162880(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB10_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB10_144
# BB#3:
	testl	%esi, %esi
	jne	.LBB10_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_5
# BB#145:
	leaq	74421576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_7
# BB#146:
	leaq	74416168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_9
# BB#147:
	leaq	74410760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_11
# BB#148:
	leaq	74405352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_13
# BB#149:
	leaq	74605448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_15
# BB#150:
	leaq	74600040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_17
# BB#151:
	leaq	74594632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_19
# BB#152:
	leaq	74589224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_21
# BB#153:
	leaq	74248520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_23
# BB#154:
	leaq	74243112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_25
# BB#155:
	leaq	74237704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_27
# BB#156:
	leaq	74232296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_29
# BB#157:
	leaq	74270152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_31
# BB#158:
	leaq	74264744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_33
# BB#159:
	leaq	74259336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_35
# BB#160:
	leaq	74253928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_37
# BB#161:
	leaq	74291784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_39
# BB#162:
	leaq	74286376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_41
# BB#163:
	leaq	74280968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_43
# BB#164:
	leaq	74275560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_45
# BB#165:
	leaq	74313416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_47
# BB#166:
	leaq	74308008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_49
# BB#167:
	leaq	74302600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_51
# BB#168:
	leaq	74297192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_53
# BB#169:
	leaq	74335048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_55
# BB#170:
	leaq	74329640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_57
# BB#171:
	leaq	74324232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_59
# BB#172:
	leaq	74318824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_61
# BB#173:
	leaq	74356680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_63
# BB#174:
	leaq	74351272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_65
# BB#175:
	leaq	74345864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_67
# BB#176:
	leaq	74340456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_69
# BB#177:
	leaq	74378312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_71
# BB#178:
	leaq	74372904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_73
# BB#179:
	leaq	74367496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_75
# BB#180:
	leaq	74362088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_77
# BB#181:
	leaq	74399944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_79
# BB#182:
	leaq	74394536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_81
# BB#183:
	leaq	74389128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_83
# BB#184:
	leaq	74383720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_85
# BB#185:
	leaq	74443208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_87
# BB#186:
	leaq	74437800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_89
# BB#187:
	leaq	74432392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_91
# BB#188:
	leaq	74426984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_93
# BB#189:
	leaq	74464840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_95
# BB#190:
	leaq	74459432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_97
# BB#191:
	leaq	74454024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_99
# BB#192:
	leaq	74448616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_101
# BB#193:
	leaq	74486472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_103
# BB#194:
	leaq	74481064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_105
# BB#195:
	leaq	74475656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_107
# BB#196:
	leaq	74470248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_109
# BB#197:
	leaq	74508104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_111
# BB#198:
	leaq	74502696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_113
# BB#199:
	leaq	74497288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_115
# BB#200:
	leaq	74491880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_117
# BB#201:
	leaq	74529736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_119
# BB#202:
	leaq	74524328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_121
# BB#203:
	leaq	74518920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_123
# BB#204:
	leaq	74513512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_125
# BB#205:
	leaq	74551368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_127
# BB#206:
	leaq	74545960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_129
# BB#207:
	leaq	74540552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_131
# BB#208:
	leaq	74535144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_133
# BB#209:
	leaq	74573000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_135
# BB#210:
	leaq	74567592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_137
# BB#211:
	leaq	74562184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_139
# BB#212:
	leaq	74556776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_141
# BB#213:
	leaq	74583816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB10_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB10_143
# BB#214:
	addq	$74578408, %r14         # imm = 0x471F9E8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB10_143:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB10_144:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_64;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_64
	.align	16, 0x90
_transaction_64:                        # @_transaction_64
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	180568(%rcx), %r14
	cmpl	$0, 180584(%rcx)
	je	.LBB11_2
# BB#1:
	addq	$180432, %rcx           # imm = 0x2C0D0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB11_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB11_4
# BB#3:
	leaq	ng0(%rip), %rcx
	movl	$880, %edx              # imm = 0x370
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB11_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_65;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_65
	.align	16, 0x90
_transaction_65:                        # @_transaction_65
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	180992(%rdi), %r14
	cmpl	$0, 181024(%rdi)
	je	.LBB12_2
# BB#1:
	leaq	180856(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB12_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB12_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB12_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_5
# BB#143:
	leaq	78313408(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106306088(%rdi), %rcx
	callq	*%r13
.LBB12_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_7
# BB#144:
	leaq	78308000(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106359856(%rdi), %rcx
	callq	*%r13
.LBB12_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_9
# BB#145:
	leaq	78302592(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106413624(%rdi), %rcx
	callq	*%r13
.LBB12_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_11
# BB#146:
	leaq	78297184(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106467392(%rdi), %rcx
	callq	*%r13
.LBB12_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_13
# BB#147:
	leaq	78491872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106521160(%rdi), %rcx
	callq	*%r13
.LBB12_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_15
# BB#148:
	leaq	78486464(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106574928(%rdi), %rcx
	callq	*%r13
.LBB12_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_17
# BB#149:
	leaq	78481056(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106623808(%rdi), %rcx
	callq	*%r13
.LBB12_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_19
# BB#150:
	leaq	78475648(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106628696(%rdi), %rcx
	callq	*%r13
.LBB12_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_21
# BB#151:
	leaq	78140352(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106633584(%rdi), %rcx
	callq	*%r13
.LBB12_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_23
# BB#152:
	leaq	78134944(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106638472(%rdi), %rcx
	callq	*%r13
.LBB12_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_25
# BB#153:
	leaq	78129536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106310976(%rdi), %rcx
	callq	*%r13
.LBB12_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_27
# BB#154:
	leaq	78124128(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106315864(%rdi), %rcx
	callq	*%r13
.LBB12_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_29
# BB#155:
	leaq	78161984(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106320752(%rdi), %rcx
	callq	*%r13
.LBB12_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_31
# BB#156:
	leaq	78156576(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106325640(%rdi), %rcx
	callq	*%r13
.LBB12_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_33
# BB#157:
	leaq	78151168(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106330528(%rdi), %rcx
	callq	*%r13
.LBB12_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_35
# BB#158:
	leaq	78145760(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106335416(%rdi), %rcx
	callq	*%r13
.LBB12_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_37
# BB#159:
	leaq	78183616(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106340304(%rdi), %rcx
	callq	*%r13
.LBB12_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_39
# BB#160:
	leaq	78178208(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106345192(%rdi), %rcx
	callq	*%r13
.LBB12_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_41
# BB#161:
	leaq	78172800(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106350080(%rdi), %rcx
	callq	*%r13
.LBB12_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_43
# BB#162:
	leaq	78167392(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106354968(%rdi), %rcx
	callq	*%r13
.LBB12_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_45
# BB#163:
	leaq	78205248(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106364744(%rdi), %rcx
	callq	*%r13
.LBB12_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_47
# BB#164:
	leaq	78199840(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106369632(%rdi), %rcx
	callq	*%r13
.LBB12_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_49
# BB#165:
	leaq	78194432(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106374520(%rdi), %rcx
	callq	*%r13
.LBB12_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_51
# BB#166:
	leaq	78189024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106379408(%rdi), %rcx
	callq	*%r13
.LBB12_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_53
# BB#167:
	leaq	78226880(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106384296(%rdi), %rcx
	callq	*%r13
.LBB12_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_55
# BB#168:
	leaq	78221472(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106389184(%rdi), %rcx
	callq	*%r13
.LBB12_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_57
# BB#169:
	leaq	78216064(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106394072(%rdi), %rcx
	callq	*%r13
.LBB12_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_59
# BB#170:
	leaq	78210656(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106398960(%rdi), %rcx
	callq	*%r13
.LBB12_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_61
# BB#171:
	leaq	78248512(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106403848(%rdi), %rcx
	callq	*%r13
.LBB12_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_63
# BB#172:
	leaq	78243104(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106408736(%rdi), %rcx
	callq	*%r13
.LBB12_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_65
# BB#173:
	leaq	78237696(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106418512(%rdi), %rcx
	callq	*%r13
.LBB12_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_67
# BB#174:
	leaq	78232288(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106423400(%rdi), %rcx
	callq	*%r13
.LBB12_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_69
# BB#175:
	leaq	78270144(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106428288(%rdi), %rcx
	callq	*%r13
.LBB12_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_71
# BB#176:
	leaq	78264736(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106433176(%rdi), %rcx
	callq	*%r13
.LBB12_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_73
# BB#177:
	leaq	78259328(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106438064(%rdi), %rcx
	callq	*%r13
.LBB12_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_75
# BB#178:
	leaq	78253920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106442952(%rdi), %rcx
	callq	*%r13
.LBB12_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_77
# BB#179:
	leaq	78291776(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106447840(%rdi), %rcx
	callq	*%r13
.LBB12_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_79
# BB#180:
	leaq	78286368(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106452728(%rdi), %rcx
	callq	*%r13
.LBB12_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_81
# BB#181:
	leaq	78280960(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106457616(%rdi), %rcx
	callq	*%r13
.LBB12_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_83
# BB#182:
	leaq	78275552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106462504(%rdi), %rcx
	callq	*%r13
.LBB12_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_85
# BB#183:
	leaq	78335040(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106472280(%rdi), %rcx
	callq	*%r13
.LBB12_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_87
# BB#184:
	leaq	78329632(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106477168(%rdi), %rcx
	callq	*%r13
.LBB12_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_89
# BB#185:
	leaq	78324224(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106482056(%rdi), %rcx
	callq	*%r13
.LBB12_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_91
# BB#186:
	leaq	78318816(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106486944(%rdi), %rcx
	callq	*%r13
.LBB12_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_93
# BB#187:
	leaq	78356672(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106491832(%rdi), %rcx
	callq	*%r13
.LBB12_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_95
# BB#188:
	leaq	78351264(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106496720(%rdi), %rcx
	callq	*%r13
.LBB12_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_97
# BB#189:
	leaq	78345856(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106501608(%rdi), %rcx
	callq	*%r13
.LBB12_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_99
# BB#190:
	leaq	78340448(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106506496(%rdi), %rcx
	callq	*%r13
.LBB12_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_101
# BB#191:
	leaq	78378304(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106511384(%rdi), %rcx
	callq	*%r13
.LBB12_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_103
# BB#192:
	leaq	78372896(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106516272(%rdi), %rcx
	callq	*%r13
.LBB12_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_105
# BB#193:
	leaq	78367488(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106526048(%rdi), %rcx
	callq	*%r13
.LBB12_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_107
# BB#194:
	leaq	78362080(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106530936(%rdi), %rcx
	callq	*%r13
.LBB12_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_109
# BB#195:
	leaq	78399936(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106535824(%rdi), %rcx
	callq	*%r13
.LBB12_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_111
# BB#196:
	leaq	78394528(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106540712(%rdi), %rcx
	callq	*%r13
.LBB12_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_113
# BB#197:
	leaq	78389120(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106545600(%rdi), %rcx
	callq	*%r13
.LBB12_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_115
# BB#198:
	leaq	78383712(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106550488(%rdi), %rcx
	callq	*%r13
.LBB12_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_117
# BB#199:
	leaq	78421568(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106555376(%rdi), %rcx
	callq	*%r13
.LBB12_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_119
# BB#200:
	leaq	78416160(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106560264(%rdi), %rcx
	callq	*%r13
.LBB12_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_121
# BB#201:
	leaq	78410752(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106565152(%rdi), %rcx
	callq	*%r13
.LBB12_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_123
# BB#202:
	leaq	78405344(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106570040(%rdi), %rcx
	callq	*%r13
.LBB12_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_125
# BB#203:
	leaq	78443200(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106579816(%rdi), %rcx
	callq	*%r13
.LBB12_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_127
# BB#204:
	leaq	78437792(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106584704(%rdi), %rcx
	callq	*%r13
.LBB12_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_129
# BB#205:
	leaq	78432384(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106589592(%rdi), %rcx
	callq	*%r13
.LBB12_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_131
# BB#206:
	leaq	78426976(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106594480(%rdi), %rcx
	callq	*%r13
.LBB12_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_133
# BB#207:
	leaq	78464832(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106599368(%rdi), %rcx
	callq	*%r13
.LBB12_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_135
# BB#208:
	leaq	78459424(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106604256(%rdi), %rcx
	callq	*%r13
.LBB12_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_137
# BB#209:
	leaq	78454016(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106609144(%rdi), %rcx
	callq	*%r13
.LBB12_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_139
# BB#210:
	leaq	78448608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	106614032(%rdi), %rcx
	callq	*%r13
.LBB12_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB12_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB12_141
# BB#211:
	leaq	78470240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$106618920, %rdi        # imm = 0x65AE028
	movq	%rdi, %rcx
	callq	*%rbx
.LBB12_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB12_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_66;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_66
	.align	16, 0x90
_transaction_66:                        # @_transaction_66
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	198296(%rdi), %r14
	cmpl	$0, 198328(%rdi)
	je	.LBB13_2
# BB#1:
	leaq	198160(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB13_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB13_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB13_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_5
# BB#143:
	leaq	81266904(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109106616(%rdi), %rcx
	callq	*%r13
.LBB13_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_7
# BB#144:
	leaq	81261496(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109160384(%rdi), %rcx
	callq	*%r13
.LBB13_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_9
# BB#145:
	leaq	81256088(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109214152(%rdi), %rcx
	callq	*%r13
.LBB13_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_11
# BB#146:
	leaq	81250680(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109267920(%rdi), %rcx
	callq	*%r13
.LBB13_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_13
# BB#147:
	leaq	81445368(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109321688(%rdi), %rcx
	callq	*%r13
.LBB13_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_15
# BB#148:
	leaq	81439960(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109375456(%rdi), %rcx
	callq	*%r13
.LBB13_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_17
# BB#149:
	leaq	81434552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109424336(%rdi), %rcx
	callq	*%r13
.LBB13_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_19
# BB#150:
	leaq	81429144(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109429224(%rdi), %rcx
	callq	*%r13
.LBB13_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_21
# BB#151:
	leaq	81093848(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109434112(%rdi), %rcx
	callq	*%r13
.LBB13_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_23
# BB#152:
	leaq	81088440(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109439000(%rdi), %rcx
	callq	*%r13
.LBB13_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_25
# BB#153:
	leaq	81083032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109111504(%rdi), %rcx
	callq	*%r13
.LBB13_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_27
# BB#154:
	leaq	81077624(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109116392(%rdi), %rcx
	callq	*%r13
.LBB13_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_29
# BB#155:
	leaq	81115480(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109121280(%rdi), %rcx
	callq	*%r13
.LBB13_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_31
# BB#156:
	leaq	81110072(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109126168(%rdi), %rcx
	callq	*%r13
.LBB13_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_33
# BB#157:
	leaq	81104664(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109131056(%rdi), %rcx
	callq	*%r13
.LBB13_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_35
# BB#158:
	leaq	81099256(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109135944(%rdi), %rcx
	callq	*%r13
.LBB13_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_37
# BB#159:
	leaq	81137112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109140832(%rdi), %rcx
	callq	*%r13
.LBB13_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_39
# BB#160:
	leaq	81131704(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109145720(%rdi), %rcx
	callq	*%r13
.LBB13_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_41
# BB#161:
	leaq	81126296(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109150608(%rdi), %rcx
	callq	*%r13
.LBB13_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_43
# BB#162:
	leaq	81120888(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109155496(%rdi), %rcx
	callq	*%r13
.LBB13_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_45
# BB#163:
	leaq	81158744(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109165272(%rdi), %rcx
	callq	*%r13
.LBB13_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_47
# BB#164:
	leaq	81153336(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109170160(%rdi), %rcx
	callq	*%r13
.LBB13_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_49
# BB#165:
	leaq	81147928(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109175048(%rdi), %rcx
	callq	*%r13
.LBB13_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_51
# BB#166:
	leaq	81142520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109179936(%rdi), %rcx
	callq	*%r13
.LBB13_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_53
# BB#167:
	leaq	81180376(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109184824(%rdi), %rcx
	callq	*%r13
.LBB13_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_55
# BB#168:
	leaq	81174968(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109189712(%rdi), %rcx
	callq	*%r13
.LBB13_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_57
# BB#169:
	leaq	81169560(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109194600(%rdi), %rcx
	callq	*%r13
.LBB13_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_59
# BB#170:
	leaq	81164152(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109199488(%rdi), %rcx
	callq	*%r13
.LBB13_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_61
# BB#171:
	leaq	81202008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109204376(%rdi), %rcx
	callq	*%r13
.LBB13_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_63
# BB#172:
	leaq	81196600(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109209264(%rdi), %rcx
	callq	*%r13
.LBB13_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_65
# BB#173:
	leaq	81191192(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109219040(%rdi), %rcx
	callq	*%r13
.LBB13_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_67
# BB#174:
	leaq	81185784(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109223928(%rdi), %rcx
	callq	*%r13
.LBB13_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_69
# BB#175:
	leaq	81223640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109228816(%rdi), %rcx
	callq	*%r13
.LBB13_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_71
# BB#176:
	leaq	81218232(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109233704(%rdi), %rcx
	callq	*%r13
.LBB13_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_73
# BB#177:
	leaq	81212824(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109238592(%rdi), %rcx
	callq	*%r13
.LBB13_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_75
# BB#178:
	leaq	81207416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109243480(%rdi), %rcx
	callq	*%r13
.LBB13_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_77
# BB#179:
	leaq	81245272(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109248368(%rdi), %rcx
	callq	*%r13
.LBB13_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_79
# BB#180:
	leaq	81239864(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109253256(%rdi), %rcx
	callq	*%r13
.LBB13_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_81
# BB#181:
	leaq	81234456(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109258144(%rdi), %rcx
	callq	*%r13
.LBB13_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_83
# BB#182:
	leaq	81229048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109263032(%rdi), %rcx
	callq	*%r13
.LBB13_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_85
# BB#183:
	leaq	81288536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109272808(%rdi), %rcx
	callq	*%r13
.LBB13_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_87
# BB#184:
	leaq	81283128(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109277696(%rdi), %rcx
	callq	*%r13
.LBB13_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_89
# BB#185:
	leaq	81277720(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109282584(%rdi), %rcx
	callq	*%r13
.LBB13_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_91
# BB#186:
	leaq	81272312(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109287472(%rdi), %rcx
	callq	*%r13
.LBB13_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_93
# BB#187:
	leaq	81310168(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109292360(%rdi), %rcx
	callq	*%r13
.LBB13_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_95
# BB#188:
	leaq	81304760(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109297248(%rdi), %rcx
	callq	*%r13
.LBB13_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_97
# BB#189:
	leaq	81299352(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109302136(%rdi), %rcx
	callq	*%r13
.LBB13_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_99
# BB#190:
	leaq	81293944(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109307024(%rdi), %rcx
	callq	*%r13
.LBB13_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_101
# BB#191:
	leaq	81331800(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109311912(%rdi), %rcx
	callq	*%r13
.LBB13_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_103
# BB#192:
	leaq	81326392(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109316800(%rdi), %rcx
	callq	*%r13
.LBB13_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_105
# BB#193:
	leaq	81320984(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109326576(%rdi), %rcx
	callq	*%r13
.LBB13_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_107
# BB#194:
	leaq	81315576(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109331464(%rdi), %rcx
	callq	*%r13
.LBB13_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_109
# BB#195:
	leaq	81353432(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109336352(%rdi), %rcx
	callq	*%r13
.LBB13_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_111
# BB#196:
	leaq	81348024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109341240(%rdi), %rcx
	callq	*%r13
.LBB13_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_113
# BB#197:
	leaq	81342616(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109346128(%rdi), %rcx
	callq	*%r13
.LBB13_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_115
# BB#198:
	leaq	81337208(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109351016(%rdi), %rcx
	callq	*%r13
.LBB13_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_117
# BB#199:
	leaq	81375064(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109355904(%rdi), %rcx
	callq	*%r13
.LBB13_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_119
# BB#200:
	leaq	81369656(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109360792(%rdi), %rcx
	callq	*%r13
.LBB13_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_121
# BB#201:
	leaq	81364248(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109365680(%rdi), %rcx
	callq	*%r13
.LBB13_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_123
# BB#202:
	leaq	81358840(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109370568(%rdi), %rcx
	callq	*%r13
.LBB13_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_125
# BB#203:
	leaq	81396696(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109380344(%rdi), %rcx
	callq	*%r13
.LBB13_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_127
# BB#204:
	leaq	81391288(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109385232(%rdi), %rcx
	callq	*%r13
.LBB13_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_129
# BB#205:
	leaq	81385880(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109390120(%rdi), %rcx
	callq	*%r13
.LBB13_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_131
# BB#206:
	leaq	81380472(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109395008(%rdi), %rcx
	callq	*%r13
.LBB13_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_133
# BB#207:
	leaq	81418328(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109399896(%rdi), %rcx
	callq	*%r13
.LBB13_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_135
# BB#208:
	leaq	81412920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109404784(%rdi), %rcx
	callq	*%r13
.LBB13_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_137
# BB#209:
	leaq	81407512(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109409672(%rdi), %rcx
	callq	*%r13
.LBB13_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_139
# BB#210:
	leaq	81402104(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	109414560(%rdi), %rcx
	callq	*%r13
.LBB13_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB13_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB13_141
# BB#211:
	leaq	81423736(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$109419448, %rdi        # imm = 0x6859BB8
	movq	%rdi, %rcx
	callq	*%rbx
.LBB13_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB13_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_67;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_67
	.align	16, 0x90
_transaction_67:                        # @_transaction_67
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	215600(%rdi), %r14
	cmpl	$0, 215632(%rdi)
	je	.LBB14_2
# BB#1:
	leaq	215464(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB14_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB14_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB14_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_5
# BB#143:
	leaq	84220400(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111907144(%rdi), %rcx
	callq	*%r13
.LBB14_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_7
# BB#144:
	leaq	84214992(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111960912(%rdi), %rcx
	callq	*%r13
.LBB14_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_9
# BB#145:
	leaq	84209584(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112014680(%rdi), %rcx
	callq	*%r13
.LBB14_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_11
# BB#146:
	leaq	84204176(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112068448(%rdi), %rcx
	callq	*%r13
.LBB14_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_13
# BB#147:
	leaq	84398864(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112122216(%rdi), %rcx
	callq	*%r13
.LBB14_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_15
# BB#148:
	leaq	84393456(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112175984(%rdi), %rcx
	callq	*%r13
.LBB14_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_17
# BB#149:
	leaq	84388048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112224864(%rdi), %rcx
	callq	*%r13
.LBB14_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_19
# BB#150:
	leaq	84382640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112229752(%rdi), %rcx
	callq	*%r13
.LBB14_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_21
# BB#151:
	leaq	84047344(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112234640(%rdi), %rcx
	callq	*%r13
.LBB14_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_23
# BB#152:
	leaq	84041936(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112239528(%rdi), %rcx
	callq	*%r13
.LBB14_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_25
# BB#153:
	leaq	84036528(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111912032(%rdi), %rcx
	callq	*%r13
.LBB14_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_27
# BB#154:
	leaq	84031120(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111916920(%rdi), %rcx
	callq	*%r13
.LBB14_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_29
# BB#155:
	leaq	84068976(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111921808(%rdi), %rcx
	callq	*%r13
.LBB14_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_31
# BB#156:
	leaq	84063568(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111926696(%rdi), %rcx
	callq	*%r13
.LBB14_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_33
# BB#157:
	leaq	84058160(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111931584(%rdi), %rcx
	callq	*%r13
.LBB14_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_35
# BB#158:
	leaq	84052752(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111936472(%rdi), %rcx
	callq	*%r13
.LBB14_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_37
# BB#159:
	leaq	84090608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111941360(%rdi), %rcx
	callq	*%r13
.LBB14_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_39
# BB#160:
	leaq	84085200(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111946248(%rdi), %rcx
	callq	*%r13
.LBB14_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_41
# BB#161:
	leaq	84079792(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111951136(%rdi), %rcx
	callq	*%r13
.LBB14_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_43
# BB#162:
	leaq	84074384(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111956024(%rdi), %rcx
	callq	*%r13
.LBB14_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_45
# BB#163:
	leaq	84112240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111965800(%rdi), %rcx
	callq	*%r13
.LBB14_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_47
# BB#164:
	leaq	84106832(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111970688(%rdi), %rcx
	callq	*%r13
.LBB14_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_49
# BB#165:
	leaq	84101424(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111975576(%rdi), %rcx
	callq	*%r13
.LBB14_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_51
# BB#166:
	leaq	84096016(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111980464(%rdi), %rcx
	callq	*%r13
.LBB14_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_53
# BB#167:
	leaq	84133872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111985352(%rdi), %rcx
	callq	*%r13
.LBB14_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_55
# BB#168:
	leaq	84128464(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111990240(%rdi), %rcx
	callq	*%r13
.LBB14_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_57
# BB#169:
	leaq	84123056(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	111995128(%rdi), %rcx
	callq	*%r13
.LBB14_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_59
# BB#170:
	leaq	84117648(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112000016(%rdi), %rcx
	callq	*%r13
.LBB14_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_61
# BB#171:
	leaq	84155504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112004904(%rdi), %rcx
	callq	*%r13
.LBB14_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_63
# BB#172:
	leaq	84150096(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112009792(%rdi), %rcx
	callq	*%r13
.LBB14_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_65
# BB#173:
	leaq	84144688(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112019568(%rdi), %rcx
	callq	*%r13
.LBB14_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_67
# BB#174:
	leaq	84139280(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112024456(%rdi), %rcx
	callq	*%r13
.LBB14_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_69
# BB#175:
	leaq	84177136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112029344(%rdi), %rcx
	callq	*%r13
.LBB14_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_71
# BB#176:
	leaq	84171728(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112034232(%rdi), %rcx
	callq	*%r13
.LBB14_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_73
# BB#177:
	leaq	84166320(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112039120(%rdi), %rcx
	callq	*%r13
.LBB14_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_75
# BB#178:
	leaq	84160912(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112044008(%rdi), %rcx
	callq	*%r13
.LBB14_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_77
# BB#179:
	leaq	84198768(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112048896(%rdi), %rcx
	callq	*%r13
.LBB14_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_79
# BB#180:
	leaq	84193360(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112053784(%rdi), %rcx
	callq	*%r13
.LBB14_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_81
# BB#181:
	leaq	84187952(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112058672(%rdi), %rcx
	callq	*%r13
.LBB14_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_83
# BB#182:
	leaq	84182544(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112063560(%rdi), %rcx
	callq	*%r13
.LBB14_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_85
# BB#183:
	leaq	84242032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112073336(%rdi), %rcx
	callq	*%r13
.LBB14_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_87
# BB#184:
	leaq	84236624(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112078224(%rdi), %rcx
	callq	*%r13
.LBB14_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_89
# BB#185:
	leaq	84231216(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112083112(%rdi), %rcx
	callq	*%r13
.LBB14_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_91
# BB#186:
	leaq	84225808(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112088000(%rdi), %rcx
	callq	*%r13
.LBB14_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_93
# BB#187:
	leaq	84263664(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112092888(%rdi), %rcx
	callq	*%r13
.LBB14_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_95
# BB#188:
	leaq	84258256(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112097776(%rdi), %rcx
	callq	*%r13
.LBB14_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_97
# BB#189:
	leaq	84252848(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112102664(%rdi), %rcx
	callq	*%r13
.LBB14_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_99
# BB#190:
	leaq	84247440(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112107552(%rdi), %rcx
	callq	*%r13
.LBB14_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_101
# BB#191:
	leaq	84285296(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112112440(%rdi), %rcx
	callq	*%r13
.LBB14_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_103
# BB#192:
	leaq	84279888(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112117328(%rdi), %rcx
	callq	*%r13
.LBB14_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_105
# BB#193:
	leaq	84274480(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112127104(%rdi), %rcx
	callq	*%r13
.LBB14_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_107
# BB#194:
	leaq	84269072(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112131992(%rdi), %rcx
	callq	*%r13
.LBB14_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_109
# BB#195:
	leaq	84306928(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112136880(%rdi), %rcx
	callq	*%r13
.LBB14_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_111
# BB#196:
	leaq	84301520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112141768(%rdi), %rcx
	callq	*%r13
.LBB14_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_113
# BB#197:
	leaq	84296112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112146656(%rdi), %rcx
	callq	*%r13
.LBB14_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_115
# BB#198:
	leaq	84290704(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112151544(%rdi), %rcx
	callq	*%r13
.LBB14_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_117
# BB#199:
	leaq	84328560(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112156432(%rdi), %rcx
	callq	*%r13
.LBB14_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_119
# BB#200:
	leaq	84323152(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112161320(%rdi), %rcx
	callq	*%r13
.LBB14_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_121
# BB#201:
	leaq	84317744(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112166208(%rdi), %rcx
	callq	*%r13
.LBB14_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_123
# BB#202:
	leaq	84312336(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112171096(%rdi), %rcx
	callq	*%r13
.LBB14_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_125
# BB#203:
	leaq	84350192(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112180872(%rdi), %rcx
	callq	*%r13
.LBB14_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_127
# BB#204:
	leaq	84344784(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112185760(%rdi), %rcx
	callq	*%r13
.LBB14_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_129
# BB#205:
	leaq	84339376(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112190648(%rdi), %rcx
	callq	*%r13
.LBB14_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_131
# BB#206:
	leaq	84333968(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112195536(%rdi), %rcx
	callq	*%r13
.LBB14_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_133
# BB#207:
	leaq	84371824(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112200424(%rdi), %rcx
	callq	*%r13
.LBB14_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_135
# BB#208:
	leaq	84366416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112205312(%rdi), %rcx
	callq	*%r13
.LBB14_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_137
# BB#209:
	leaq	84361008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112210200(%rdi), %rcx
	callq	*%r13
.LBB14_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_139
# BB#210:
	leaq	84355600(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	112215088(%rdi), %rcx
	callq	*%r13
.LBB14_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB14_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB14_141
# BB#211:
	leaq	84377232(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$112219976, %rdi        # imm = 0x6B05748
	movq	%rdi, %rcx
	callq	*%rbx
.LBB14_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB14_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_68;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_68
	.align	16, 0x90
_transaction_68:                        # @_transaction_68
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	232904(%rdi), %r14
	cmpl	$0, 232936(%rdi)
	je	.LBB15_2
# BB#1:
	leaq	232768(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB15_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB15_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB15_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_5
# BB#143:
	leaq	87173896(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114707672(%rdi), %rcx
	callq	*%r13
.LBB15_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_7
# BB#144:
	leaq	87168488(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114761440(%rdi), %rcx
	callq	*%r13
.LBB15_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_9
# BB#145:
	leaq	87163080(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114815208(%rdi), %rcx
	callq	*%r13
.LBB15_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_11
# BB#146:
	leaq	87157672(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114868976(%rdi), %rcx
	callq	*%r13
.LBB15_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_13
# BB#147:
	leaq	87352360(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114922744(%rdi), %rcx
	callq	*%r13
.LBB15_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_15
# BB#148:
	leaq	87346952(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114976512(%rdi), %rcx
	callq	*%r13
.LBB15_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_17
# BB#149:
	leaq	87341544(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115025392(%rdi), %rcx
	callq	*%r13
.LBB15_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_19
# BB#150:
	leaq	87336136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115030280(%rdi), %rcx
	callq	*%r13
.LBB15_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_21
# BB#151:
	leaq	87000840(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115035168(%rdi), %rcx
	callq	*%r13
.LBB15_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_23
# BB#152:
	leaq	86995432(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115040056(%rdi), %rcx
	callq	*%r13
.LBB15_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_25
# BB#153:
	leaq	86990024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114712560(%rdi), %rcx
	callq	*%r13
.LBB15_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_27
# BB#154:
	leaq	86984616(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114717448(%rdi), %rcx
	callq	*%r13
.LBB15_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_29
# BB#155:
	leaq	87022472(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114722336(%rdi), %rcx
	callq	*%r13
.LBB15_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_31
# BB#156:
	leaq	87017064(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114727224(%rdi), %rcx
	callq	*%r13
.LBB15_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_33
# BB#157:
	leaq	87011656(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114732112(%rdi), %rcx
	callq	*%r13
.LBB15_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_35
# BB#158:
	leaq	87006248(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114737000(%rdi), %rcx
	callq	*%r13
.LBB15_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_37
# BB#159:
	leaq	87044104(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114741888(%rdi), %rcx
	callq	*%r13
.LBB15_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_39
# BB#160:
	leaq	87038696(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114746776(%rdi), %rcx
	callq	*%r13
.LBB15_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_41
# BB#161:
	leaq	87033288(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114751664(%rdi), %rcx
	callq	*%r13
.LBB15_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_43
# BB#162:
	leaq	87027880(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114756552(%rdi), %rcx
	callq	*%r13
.LBB15_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_45
# BB#163:
	leaq	87065736(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114766328(%rdi), %rcx
	callq	*%r13
.LBB15_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_47
# BB#164:
	leaq	87060328(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114771216(%rdi), %rcx
	callq	*%r13
.LBB15_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_49
# BB#165:
	leaq	87054920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114776104(%rdi), %rcx
	callq	*%r13
.LBB15_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_51
# BB#166:
	leaq	87049512(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114780992(%rdi), %rcx
	callq	*%r13
.LBB15_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_53
# BB#167:
	leaq	87087368(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114785880(%rdi), %rcx
	callq	*%r13
.LBB15_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_55
# BB#168:
	leaq	87081960(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114790768(%rdi), %rcx
	callq	*%r13
.LBB15_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_57
# BB#169:
	leaq	87076552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114795656(%rdi), %rcx
	callq	*%r13
.LBB15_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_59
# BB#170:
	leaq	87071144(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114800544(%rdi), %rcx
	callq	*%r13
.LBB15_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_61
# BB#171:
	leaq	87109000(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114805432(%rdi), %rcx
	callq	*%r13
.LBB15_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_63
# BB#172:
	leaq	87103592(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114810320(%rdi), %rcx
	callq	*%r13
.LBB15_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_65
# BB#173:
	leaq	87098184(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114820096(%rdi), %rcx
	callq	*%r13
.LBB15_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_67
# BB#174:
	leaq	87092776(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114824984(%rdi), %rcx
	callq	*%r13
.LBB15_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_69
# BB#175:
	leaq	87130632(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114829872(%rdi), %rcx
	callq	*%r13
.LBB15_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_71
# BB#176:
	leaq	87125224(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114834760(%rdi), %rcx
	callq	*%r13
.LBB15_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_73
# BB#177:
	leaq	87119816(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114839648(%rdi), %rcx
	callq	*%r13
.LBB15_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_75
# BB#178:
	leaq	87114408(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114844536(%rdi), %rcx
	callq	*%r13
.LBB15_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_77
# BB#179:
	leaq	87152264(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114849424(%rdi), %rcx
	callq	*%r13
.LBB15_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_79
# BB#180:
	leaq	87146856(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114854312(%rdi), %rcx
	callq	*%r13
.LBB15_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_81
# BB#181:
	leaq	87141448(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114859200(%rdi), %rcx
	callq	*%r13
.LBB15_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_83
# BB#182:
	leaq	87136040(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114864088(%rdi), %rcx
	callq	*%r13
.LBB15_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_85
# BB#183:
	leaq	87195528(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114873864(%rdi), %rcx
	callq	*%r13
.LBB15_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_87
# BB#184:
	leaq	87190120(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114878752(%rdi), %rcx
	callq	*%r13
.LBB15_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_89
# BB#185:
	leaq	87184712(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114883640(%rdi), %rcx
	callq	*%r13
.LBB15_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_91
# BB#186:
	leaq	87179304(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114888528(%rdi), %rcx
	callq	*%r13
.LBB15_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_93
# BB#187:
	leaq	87217160(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114893416(%rdi), %rcx
	callq	*%r13
.LBB15_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_95
# BB#188:
	leaq	87211752(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114898304(%rdi), %rcx
	callq	*%r13
.LBB15_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_97
# BB#189:
	leaq	87206344(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114903192(%rdi), %rcx
	callq	*%r13
.LBB15_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_99
# BB#190:
	leaq	87200936(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114908080(%rdi), %rcx
	callq	*%r13
.LBB15_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_101
# BB#191:
	leaq	87238792(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114912968(%rdi), %rcx
	callq	*%r13
.LBB15_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_103
# BB#192:
	leaq	87233384(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114917856(%rdi), %rcx
	callq	*%r13
.LBB15_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_105
# BB#193:
	leaq	87227976(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114927632(%rdi), %rcx
	callq	*%r13
.LBB15_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_107
# BB#194:
	leaq	87222568(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114932520(%rdi), %rcx
	callq	*%r13
.LBB15_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_109
# BB#195:
	leaq	87260424(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114937408(%rdi), %rcx
	callq	*%r13
.LBB15_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_111
# BB#196:
	leaq	87255016(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114942296(%rdi), %rcx
	callq	*%r13
.LBB15_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_113
# BB#197:
	leaq	87249608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114947184(%rdi), %rcx
	callq	*%r13
.LBB15_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_115
# BB#198:
	leaq	87244200(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114952072(%rdi), %rcx
	callq	*%r13
.LBB15_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_117
# BB#199:
	leaq	87282056(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114956960(%rdi), %rcx
	callq	*%r13
.LBB15_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_119
# BB#200:
	leaq	87276648(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114961848(%rdi), %rcx
	callq	*%r13
.LBB15_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_121
# BB#201:
	leaq	87271240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114966736(%rdi), %rcx
	callq	*%r13
.LBB15_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_123
# BB#202:
	leaq	87265832(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114971624(%rdi), %rcx
	callq	*%r13
.LBB15_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_125
# BB#203:
	leaq	87303688(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114981400(%rdi), %rcx
	callq	*%r13
.LBB15_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_127
# BB#204:
	leaq	87298280(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114986288(%rdi), %rcx
	callq	*%r13
.LBB15_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_129
# BB#205:
	leaq	87292872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114991176(%rdi), %rcx
	callq	*%r13
.LBB15_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_131
# BB#206:
	leaq	87287464(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	114996064(%rdi), %rcx
	callq	*%r13
.LBB15_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_133
# BB#207:
	leaq	87325320(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115000952(%rdi), %rcx
	callq	*%r13
.LBB15_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_135
# BB#208:
	leaq	87319912(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115005840(%rdi), %rcx
	callq	*%r13
.LBB15_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_137
# BB#209:
	leaq	87314504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115010728(%rdi), %rcx
	callq	*%r13
.LBB15_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_139
# BB#210:
	leaq	87309096(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	115015616(%rdi), %rcx
	callq	*%r13
.LBB15_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB15_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB15_141
# BB#211:
	leaq	87330728(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$115020504, %rdi        # imm = 0x6DB12D8
	movq	%rdi, %rcx
	callq	*%rbx
.LBB15_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB15_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_69;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_69
	.align	16, 0x90
_transaction_69:                        # @_transaction_69
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	250208(%rdi), %r14
	cmpl	$0, 250240(%rdi)
	je	.LBB16_2
# BB#1:
	leaq	250072(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB16_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB16_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB16_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_5
# BB#143:
	leaq	90127392(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117508200(%rdi), %rcx
	callq	*%r13
.LBB16_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_7
# BB#144:
	leaq	90121984(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117561968(%rdi), %rcx
	callq	*%r13
.LBB16_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_9
# BB#145:
	leaq	90116576(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117615736(%rdi), %rcx
	callq	*%r13
.LBB16_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_11
# BB#146:
	leaq	90111168(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117669504(%rdi), %rcx
	callq	*%r13
.LBB16_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_13
# BB#147:
	leaq	90305856(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117723272(%rdi), %rcx
	callq	*%r13
.LBB16_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_15
# BB#148:
	leaq	90300448(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117777040(%rdi), %rcx
	callq	*%r13
.LBB16_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_17
# BB#149:
	leaq	90295040(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117825920(%rdi), %rcx
	callq	*%r13
.LBB16_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_19
# BB#150:
	leaq	90289632(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117830808(%rdi), %rcx
	callq	*%r13
.LBB16_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_21
# BB#151:
	leaq	89954336(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117835696(%rdi), %rcx
	callq	*%r13
.LBB16_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_23
# BB#152:
	leaq	89948928(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117840584(%rdi), %rcx
	callq	*%r13
.LBB16_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_25
# BB#153:
	leaq	89943520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117513088(%rdi), %rcx
	callq	*%r13
.LBB16_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_27
# BB#154:
	leaq	89938112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117517976(%rdi), %rcx
	callq	*%r13
.LBB16_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_29
# BB#155:
	leaq	89975968(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117522864(%rdi), %rcx
	callq	*%r13
.LBB16_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_31
# BB#156:
	leaq	89970560(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117527752(%rdi), %rcx
	callq	*%r13
.LBB16_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_33
# BB#157:
	leaq	89965152(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117532640(%rdi), %rcx
	callq	*%r13
.LBB16_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_35
# BB#158:
	leaq	89959744(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117537528(%rdi), %rcx
	callq	*%r13
.LBB16_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_37
# BB#159:
	leaq	89997600(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117542416(%rdi), %rcx
	callq	*%r13
.LBB16_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_39
# BB#160:
	leaq	89992192(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117547304(%rdi), %rcx
	callq	*%r13
.LBB16_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_41
# BB#161:
	leaq	89986784(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117552192(%rdi), %rcx
	callq	*%r13
.LBB16_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_43
# BB#162:
	leaq	89981376(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117557080(%rdi), %rcx
	callq	*%r13
.LBB16_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_45
# BB#163:
	leaq	90019232(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117566856(%rdi), %rcx
	callq	*%r13
.LBB16_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_47
# BB#164:
	leaq	90013824(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117571744(%rdi), %rcx
	callq	*%r13
.LBB16_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_49
# BB#165:
	leaq	90008416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117576632(%rdi), %rcx
	callq	*%r13
.LBB16_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_51
# BB#166:
	leaq	90003008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117581520(%rdi), %rcx
	callq	*%r13
.LBB16_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_53
# BB#167:
	leaq	90040864(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117586408(%rdi), %rcx
	callq	*%r13
.LBB16_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_55
# BB#168:
	leaq	90035456(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117591296(%rdi), %rcx
	callq	*%r13
.LBB16_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_57
# BB#169:
	leaq	90030048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117596184(%rdi), %rcx
	callq	*%r13
.LBB16_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_59
# BB#170:
	leaq	90024640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117601072(%rdi), %rcx
	callq	*%r13
.LBB16_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_61
# BB#171:
	leaq	90062496(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117605960(%rdi), %rcx
	callq	*%r13
.LBB16_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_63
# BB#172:
	leaq	90057088(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117610848(%rdi), %rcx
	callq	*%r13
.LBB16_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_65
# BB#173:
	leaq	90051680(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117620624(%rdi), %rcx
	callq	*%r13
.LBB16_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_67
# BB#174:
	leaq	90046272(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117625512(%rdi), %rcx
	callq	*%r13
.LBB16_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_69
# BB#175:
	leaq	90084128(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117630400(%rdi), %rcx
	callq	*%r13
.LBB16_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_71
# BB#176:
	leaq	90078720(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117635288(%rdi), %rcx
	callq	*%r13
.LBB16_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_73
# BB#177:
	leaq	90073312(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117640176(%rdi), %rcx
	callq	*%r13
.LBB16_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_75
# BB#178:
	leaq	90067904(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117645064(%rdi), %rcx
	callq	*%r13
.LBB16_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_77
# BB#179:
	leaq	90105760(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117649952(%rdi), %rcx
	callq	*%r13
.LBB16_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_79
# BB#180:
	leaq	90100352(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117654840(%rdi), %rcx
	callq	*%r13
.LBB16_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_81
# BB#181:
	leaq	90094944(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117659728(%rdi), %rcx
	callq	*%r13
.LBB16_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_83
# BB#182:
	leaq	90089536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117664616(%rdi), %rcx
	callq	*%r13
.LBB16_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_85
# BB#183:
	leaq	90149024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117674392(%rdi), %rcx
	callq	*%r13
.LBB16_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_87
# BB#184:
	leaq	90143616(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117679280(%rdi), %rcx
	callq	*%r13
.LBB16_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_89
# BB#185:
	leaq	90138208(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117684168(%rdi), %rcx
	callq	*%r13
.LBB16_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_91
# BB#186:
	leaq	90132800(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117689056(%rdi), %rcx
	callq	*%r13
.LBB16_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_93
# BB#187:
	leaq	90170656(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117693944(%rdi), %rcx
	callq	*%r13
.LBB16_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_95
# BB#188:
	leaq	90165248(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117698832(%rdi), %rcx
	callq	*%r13
.LBB16_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_97
# BB#189:
	leaq	90159840(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117703720(%rdi), %rcx
	callq	*%r13
.LBB16_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_99
# BB#190:
	leaq	90154432(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117708608(%rdi), %rcx
	callq	*%r13
.LBB16_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_101
# BB#191:
	leaq	90192288(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117713496(%rdi), %rcx
	callq	*%r13
.LBB16_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_103
# BB#192:
	leaq	90186880(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117718384(%rdi), %rcx
	callq	*%r13
.LBB16_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_105
# BB#193:
	leaq	90181472(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117728160(%rdi), %rcx
	callq	*%r13
.LBB16_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_107
# BB#194:
	leaq	90176064(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117733048(%rdi), %rcx
	callq	*%r13
.LBB16_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_109
# BB#195:
	leaq	90213920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117737936(%rdi), %rcx
	callq	*%r13
.LBB16_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_111
# BB#196:
	leaq	90208512(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117742824(%rdi), %rcx
	callq	*%r13
.LBB16_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_113
# BB#197:
	leaq	90203104(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117747712(%rdi), %rcx
	callq	*%r13
.LBB16_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_115
# BB#198:
	leaq	90197696(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117752600(%rdi), %rcx
	callq	*%r13
.LBB16_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_117
# BB#199:
	leaq	90235552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117757488(%rdi), %rcx
	callq	*%r13
.LBB16_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_119
# BB#200:
	leaq	90230144(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117762376(%rdi), %rcx
	callq	*%r13
.LBB16_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_121
# BB#201:
	leaq	90224736(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117767264(%rdi), %rcx
	callq	*%r13
.LBB16_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_123
# BB#202:
	leaq	90219328(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117772152(%rdi), %rcx
	callq	*%r13
.LBB16_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_125
# BB#203:
	leaq	90257184(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117781928(%rdi), %rcx
	callq	*%r13
.LBB16_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_127
# BB#204:
	leaq	90251776(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117786816(%rdi), %rcx
	callq	*%r13
.LBB16_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_129
# BB#205:
	leaq	90246368(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117791704(%rdi), %rcx
	callq	*%r13
.LBB16_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_131
# BB#206:
	leaq	90240960(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117796592(%rdi), %rcx
	callq	*%r13
.LBB16_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_133
# BB#207:
	leaq	90278816(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117801480(%rdi), %rcx
	callq	*%r13
.LBB16_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_135
# BB#208:
	leaq	90273408(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117806368(%rdi), %rcx
	callq	*%r13
.LBB16_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_137
# BB#209:
	leaq	90268000(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117811256(%rdi), %rcx
	callq	*%r13
.LBB16_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_139
# BB#210:
	leaq	90262592(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	117816144(%rdi), %rcx
	callq	*%r13
.LBB16_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB16_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB16_141
# BB#211:
	leaq	90284224(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$117821032, %rdi        # imm = 0x705CE68
	movq	%rdi, %rcx
	callq	*%rbx
.LBB16_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB16_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_70;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_70
	.align	16, 0x90
_transaction_70:                        # @_transaction_70
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	267512(%rdi), %r14
	cmpl	$0, 267544(%rdi)
	je	.LBB17_2
# BB#1:
	leaq	267376(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB17_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB17_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB17_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_5
# BB#143:
	leaq	93080888(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120308728(%rdi), %rcx
	callq	*%r13
.LBB17_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_7
# BB#144:
	leaq	93075480(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120362496(%rdi), %rcx
	callq	*%r13
.LBB17_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_9
# BB#145:
	leaq	93070072(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120416264(%rdi), %rcx
	callq	*%r13
.LBB17_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_11
# BB#146:
	leaq	93064664(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120470032(%rdi), %rcx
	callq	*%r13
.LBB17_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_13
# BB#147:
	leaq	93259352(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120523800(%rdi), %rcx
	callq	*%r13
.LBB17_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_15
# BB#148:
	leaq	93253944(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120577568(%rdi), %rcx
	callq	*%r13
.LBB17_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_17
# BB#149:
	leaq	93248536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120626448(%rdi), %rcx
	callq	*%r13
.LBB17_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_19
# BB#150:
	leaq	93243128(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120631336(%rdi), %rcx
	callq	*%r13
.LBB17_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_21
# BB#151:
	leaq	92907832(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120636224(%rdi), %rcx
	callq	*%r13
.LBB17_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_23
# BB#152:
	leaq	92902424(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120641112(%rdi), %rcx
	callq	*%r13
.LBB17_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_25
# BB#153:
	leaq	92897016(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120313616(%rdi), %rcx
	callq	*%r13
.LBB17_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_27
# BB#154:
	leaq	92891608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120318504(%rdi), %rcx
	callq	*%r13
.LBB17_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_29
# BB#155:
	leaq	92929464(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120323392(%rdi), %rcx
	callq	*%r13
.LBB17_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_31
# BB#156:
	leaq	92924056(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120328280(%rdi), %rcx
	callq	*%r13
.LBB17_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_33
# BB#157:
	leaq	92918648(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120333168(%rdi), %rcx
	callq	*%r13
.LBB17_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_35
# BB#158:
	leaq	92913240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120338056(%rdi), %rcx
	callq	*%r13
.LBB17_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_37
# BB#159:
	leaq	92951096(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120342944(%rdi), %rcx
	callq	*%r13
.LBB17_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_39
# BB#160:
	leaq	92945688(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120347832(%rdi), %rcx
	callq	*%r13
.LBB17_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_41
# BB#161:
	leaq	92940280(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120352720(%rdi), %rcx
	callq	*%r13
.LBB17_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_43
# BB#162:
	leaq	92934872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120357608(%rdi), %rcx
	callq	*%r13
.LBB17_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_45
# BB#163:
	leaq	92972728(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120367384(%rdi), %rcx
	callq	*%r13
.LBB17_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_47
# BB#164:
	leaq	92967320(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120372272(%rdi), %rcx
	callq	*%r13
.LBB17_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_49
# BB#165:
	leaq	92961912(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120377160(%rdi), %rcx
	callq	*%r13
.LBB17_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_51
# BB#166:
	leaq	92956504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120382048(%rdi), %rcx
	callq	*%r13
.LBB17_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_53
# BB#167:
	leaq	92994360(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120386936(%rdi), %rcx
	callq	*%r13
.LBB17_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_55
# BB#168:
	leaq	92988952(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120391824(%rdi), %rcx
	callq	*%r13
.LBB17_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_57
# BB#169:
	leaq	92983544(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120396712(%rdi), %rcx
	callq	*%r13
.LBB17_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_59
# BB#170:
	leaq	92978136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120401600(%rdi), %rcx
	callq	*%r13
.LBB17_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_61
# BB#171:
	leaq	93015992(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120406488(%rdi), %rcx
	callq	*%r13
.LBB17_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_63
# BB#172:
	leaq	93010584(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120411376(%rdi), %rcx
	callq	*%r13
.LBB17_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_65
# BB#173:
	leaq	93005176(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120421152(%rdi), %rcx
	callq	*%r13
.LBB17_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_67
# BB#174:
	leaq	92999768(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120426040(%rdi), %rcx
	callq	*%r13
.LBB17_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_69
# BB#175:
	leaq	93037624(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120430928(%rdi), %rcx
	callq	*%r13
.LBB17_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_71
# BB#176:
	leaq	93032216(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120435816(%rdi), %rcx
	callq	*%r13
.LBB17_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_73
# BB#177:
	leaq	93026808(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120440704(%rdi), %rcx
	callq	*%r13
.LBB17_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_75
# BB#178:
	leaq	93021400(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120445592(%rdi), %rcx
	callq	*%r13
.LBB17_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_77
# BB#179:
	leaq	93059256(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120450480(%rdi), %rcx
	callq	*%r13
.LBB17_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_79
# BB#180:
	leaq	93053848(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120455368(%rdi), %rcx
	callq	*%r13
.LBB17_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_81
# BB#181:
	leaq	93048440(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120460256(%rdi), %rcx
	callq	*%r13
.LBB17_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_83
# BB#182:
	leaq	93043032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120465144(%rdi), %rcx
	callq	*%r13
.LBB17_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_85
# BB#183:
	leaq	93102520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120474920(%rdi), %rcx
	callq	*%r13
.LBB17_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_87
# BB#184:
	leaq	93097112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120479808(%rdi), %rcx
	callq	*%r13
.LBB17_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_89
# BB#185:
	leaq	93091704(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120484696(%rdi), %rcx
	callq	*%r13
.LBB17_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_91
# BB#186:
	leaq	93086296(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120489584(%rdi), %rcx
	callq	*%r13
.LBB17_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_93
# BB#187:
	leaq	93124152(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120494472(%rdi), %rcx
	callq	*%r13
.LBB17_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_95
# BB#188:
	leaq	93118744(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120499360(%rdi), %rcx
	callq	*%r13
.LBB17_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_97
# BB#189:
	leaq	93113336(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120504248(%rdi), %rcx
	callq	*%r13
.LBB17_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_99
# BB#190:
	leaq	93107928(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120509136(%rdi), %rcx
	callq	*%r13
.LBB17_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_101
# BB#191:
	leaq	93145784(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120514024(%rdi), %rcx
	callq	*%r13
.LBB17_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_103
# BB#192:
	leaq	93140376(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120518912(%rdi), %rcx
	callq	*%r13
.LBB17_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_105
# BB#193:
	leaq	93134968(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120528688(%rdi), %rcx
	callq	*%r13
.LBB17_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_107
# BB#194:
	leaq	93129560(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120533576(%rdi), %rcx
	callq	*%r13
.LBB17_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_109
# BB#195:
	leaq	93167416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120538464(%rdi), %rcx
	callq	*%r13
.LBB17_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_111
# BB#196:
	leaq	93162008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120543352(%rdi), %rcx
	callq	*%r13
.LBB17_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_113
# BB#197:
	leaq	93156600(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120548240(%rdi), %rcx
	callq	*%r13
.LBB17_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_115
# BB#198:
	leaq	93151192(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120553128(%rdi), %rcx
	callq	*%r13
.LBB17_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_117
# BB#199:
	leaq	93189048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120558016(%rdi), %rcx
	callq	*%r13
.LBB17_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_119
# BB#200:
	leaq	93183640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120562904(%rdi), %rcx
	callq	*%r13
.LBB17_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_121
# BB#201:
	leaq	93178232(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120567792(%rdi), %rcx
	callq	*%r13
.LBB17_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_123
# BB#202:
	leaq	93172824(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120572680(%rdi), %rcx
	callq	*%r13
.LBB17_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_125
# BB#203:
	leaq	93210680(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120582456(%rdi), %rcx
	callq	*%r13
.LBB17_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_127
# BB#204:
	leaq	93205272(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120587344(%rdi), %rcx
	callq	*%r13
.LBB17_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_129
# BB#205:
	leaq	93199864(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120592232(%rdi), %rcx
	callq	*%r13
.LBB17_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_131
# BB#206:
	leaq	93194456(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120597120(%rdi), %rcx
	callq	*%r13
.LBB17_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_133
# BB#207:
	leaq	93232312(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120602008(%rdi), %rcx
	callq	*%r13
.LBB17_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_135
# BB#208:
	leaq	93226904(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120606896(%rdi), %rcx
	callq	*%r13
.LBB17_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_137
# BB#209:
	leaq	93221496(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120611784(%rdi), %rcx
	callq	*%r13
.LBB17_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_139
# BB#210:
	leaq	93216088(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	120616672(%rdi), %rcx
	callq	*%r13
.LBB17_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB17_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB17_141
# BB#211:
	leaq	93237720(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$120621560, %rdi        # imm = 0x73089F8
	movq	%rdi, %rcx
	callq	*%rbx
.LBB17_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB17_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_71;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_71
	.align	16, 0x90
_transaction_71:                        # @_transaction_71
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	284816(%rdi), %r14
	cmpl	$0, 284848(%rdi)
	je	.LBB18_2
# BB#1:
	leaq	284680(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB18_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB18_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB18_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_5
# BB#143:
	leaq	96034384(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123109256(%rdi), %rcx
	callq	*%r13
.LBB18_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_7
# BB#144:
	leaq	96028976(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123163024(%rdi), %rcx
	callq	*%r13
.LBB18_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_9
# BB#145:
	leaq	96023568(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123216792(%rdi), %rcx
	callq	*%r13
.LBB18_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_11
# BB#146:
	leaq	96018160(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123270560(%rdi), %rcx
	callq	*%r13
.LBB18_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_13
# BB#147:
	leaq	96212848(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123324328(%rdi), %rcx
	callq	*%r13
.LBB18_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_15
# BB#148:
	leaq	96207440(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123378096(%rdi), %rcx
	callq	*%r13
.LBB18_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_17
# BB#149:
	leaq	96202032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123426976(%rdi), %rcx
	callq	*%r13
.LBB18_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_19
# BB#150:
	leaq	96196624(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123431864(%rdi), %rcx
	callq	*%r13
.LBB18_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_21
# BB#151:
	leaq	95861328(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123436752(%rdi), %rcx
	callq	*%r13
.LBB18_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_23
# BB#152:
	leaq	95855920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123441640(%rdi), %rcx
	callq	*%r13
.LBB18_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_25
# BB#153:
	leaq	95850512(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123114144(%rdi), %rcx
	callq	*%r13
.LBB18_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_27
# BB#154:
	leaq	95845104(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123119032(%rdi), %rcx
	callq	*%r13
.LBB18_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_29
# BB#155:
	leaq	95882960(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123123920(%rdi), %rcx
	callq	*%r13
.LBB18_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_31
# BB#156:
	leaq	95877552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123128808(%rdi), %rcx
	callq	*%r13
.LBB18_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_33
# BB#157:
	leaq	95872144(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123133696(%rdi), %rcx
	callq	*%r13
.LBB18_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_35
# BB#158:
	leaq	95866736(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123138584(%rdi), %rcx
	callq	*%r13
.LBB18_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_37
# BB#159:
	leaq	95904592(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123143472(%rdi), %rcx
	callq	*%r13
.LBB18_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_39
# BB#160:
	leaq	95899184(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123148360(%rdi), %rcx
	callq	*%r13
.LBB18_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_41
# BB#161:
	leaq	95893776(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123153248(%rdi), %rcx
	callq	*%r13
.LBB18_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_43
# BB#162:
	leaq	95888368(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123158136(%rdi), %rcx
	callq	*%r13
.LBB18_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_45
# BB#163:
	leaq	95926224(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123167912(%rdi), %rcx
	callq	*%r13
.LBB18_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_47
# BB#164:
	leaq	95920816(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123172800(%rdi), %rcx
	callq	*%r13
.LBB18_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_49
# BB#165:
	leaq	95915408(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123177688(%rdi), %rcx
	callq	*%r13
.LBB18_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_51
# BB#166:
	leaq	95910000(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123182576(%rdi), %rcx
	callq	*%r13
.LBB18_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_53
# BB#167:
	leaq	95947856(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123187464(%rdi), %rcx
	callq	*%r13
.LBB18_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_55
# BB#168:
	leaq	95942448(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123192352(%rdi), %rcx
	callq	*%r13
.LBB18_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_57
# BB#169:
	leaq	95937040(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123197240(%rdi), %rcx
	callq	*%r13
.LBB18_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_59
# BB#170:
	leaq	95931632(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123202128(%rdi), %rcx
	callq	*%r13
.LBB18_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_61
# BB#171:
	leaq	95969488(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123207016(%rdi), %rcx
	callq	*%r13
.LBB18_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_63
# BB#172:
	leaq	95964080(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123211904(%rdi), %rcx
	callq	*%r13
.LBB18_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_65
# BB#173:
	leaq	95958672(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123221680(%rdi), %rcx
	callq	*%r13
.LBB18_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_67
# BB#174:
	leaq	95953264(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123226568(%rdi), %rcx
	callq	*%r13
.LBB18_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_69
# BB#175:
	leaq	95991120(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123231456(%rdi), %rcx
	callq	*%r13
.LBB18_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_71
# BB#176:
	leaq	95985712(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123236344(%rdi), %rcx
	callq	*%r13
.LBB18_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_73
# BB#177:
	leaq	95980304(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123241232(%rdi), %rcx
	callq	*%r13
.LBB18_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_75
# BB#178:
	leaq	95974896(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123246120(%rdi), %rcx
	callq	*%r13
.LBB18_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_77
# BB#179:
	leaq	96012752(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123251008(%rdi), %rcx
	callq	*%r13
.LBB18_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_79
# BB#180:
	leaq	96007344(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123255896(%rdi), %rcx
	callq	*%r13
.LBB18_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_81
# BB#181:
	leaq	96001936(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123260784(%rdi), %rcx
	callq	*%r13
.LBB18_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_83
# BB#182:
	leaq	95996528(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123265672(%rdi), %rcx
	callq	*%r13
.LBB18_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_85
# BB#183:
	leaq	96056016(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123275448(%rdi), %rcx
	callq	*%r13
.LBB18_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_87
# BB#184:
	leaq	96050608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123280336(%rdi), %rcx
	callq	*%r13
.LBB18_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_89
# BB#185:
	leaq	96045200(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123285224(%rdi), %rcx
	callq	*%r13
.LBB18_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_91
# BB#186:
	leaq	96039792(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123290112(%rdi), %rcx
	callq	*%r13
.LBB18_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_93
# BB#187:
	leaq	96077648(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123295000(%rdi), %rcx
	callq	*%r13
.LBB18_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_95
# BB#188:
	leaq	96072240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123299888(%rdi), %rcx
	callq	*%r13
.LBB18_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_97
# BB#189:
	leaq	96066832(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123304776(%rdi), %rcx
	callq	*%r13
.LBB18_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_99
# BB#190:
	leaq	96061424(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123309664(%rdi), %rcx
	callq	*%r13
.LBB18_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_101
# BB#191:
	leaq	96099280(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123314552(%rdi), %rcx
	callq	*%r13
.LBB18_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_103
# BB#192:
	leaq	96093872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123319440(%rdi), %rcx
	callq	*%r13
.LBB18_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_105
# BB#193:
	leaq	96088464(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123329216(%rdi), %rcx
	callq	*%r13
.LBB18_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_107
# BB#194:
	leaq	96083056(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123334104(%rdi), %rcx
	callq	*%r13
.LBB18_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_109
# BB#195:
	leaq	96120912(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123338992(%rdi), %rcx
	callq	*%r13
.LBB18_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_111
# BB#196:
	leaq	96115504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123343880(%rdi), %rcx
	callq	*%r13
.LBB18_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_113
# BB#197:
	leaq	96110096(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123348768(%rdi), %rcx
	callq	*%r13
.LBB18_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_115
# BB#198:
	leaq	96104688(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123353656(%rdi), %rcx
	callq	*%r13
.LBB18_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_117
# BB#199:
	leaq	96142544(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123358544(%rdi), %rcx
	callq	*%r13
.LBB18_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_119
# BB#200:
	leaq	96137136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123363432(%rdi), %rcx
	callq	*%r13
.LBB18_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_121
# BB#201:
	leaq	96131728(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123368320(%rdi), %rcx
	callq	*%r13
.LBB18_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_123
# BB#202:
	leaq	96126320(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123373208(%rdi), %rcx
	callq	*%r13
.LBB18_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_125
# BB#203:
	leaq	96164176(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123382984(%rdi), %rcx
	callq	*%r13
.LBB18_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_127
# BB#204:
	leaq	96158768(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123387872(%rdi), %rcx
	callq	*%r13
.LBB18_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_129
# BB#205:
	leaq	96153360(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123392760(%rdi), %rcx
	callq	*%r13
.LBB18_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_131
# BB#206:
	leaq	96147952(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123397648(%rdi), %rcx
	callq	*%r13
.LBB18_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_133
# BB#207:
	leaq	96185808(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123402536(%rdi), %rcx
	callq	*%r13
.LBB18_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_135
# BB#208:
	leaq	96180400(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123407424(%rdi), %rcx
	callq	*%r13
.LBB18_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_137
# BB#209:
	leaq	96174992(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123412312(%rdi), %rcx
	callq	*%r13
.LBB18_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_139
# BB#210:
	leaq	96169584(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	123417200(%rdi), %rcx
	callq	*%r13
.LBB18_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB18_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB18_141
# BB#211:
	leaq	96191216(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$123422088, %rdi        # imm = 0x75B4588
	movq	%rdi, %rcx
	callq	*%rbx
.LBB18_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB18_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_72;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_72
	.align	16, 0x90
_transaction_72:                        # @_transaction_72
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	302120(%rdi), %r14
	cmpl	$0, 302152(%rdi)
	je	.LBB19_2
# BB#1:
	leaq	301984(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB19_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB19_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB19_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_5
# BB#143:
	leaq	98987880(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125909784(%rdi), %rcx
	callq	*%r13
.LBB19_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_7
# BB#144:
	leaq	98982472(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125963552(%rdi), %rcx
	callq	*%r13
.LBB19_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_9
# BB#145:
	leaq	98977064(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126017320(%rdi), %rcx
	callq	*%r13
.LBB19_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_11
# BB#146:
	leaq	98971656(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126071088(%rdi), %rcx
	callq	*%r13
.LBB19_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_13
# BB#147:
	leaq	99166344(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126124856(%rdi), %rcx
	callq	*%r13
.LBB19_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_15
# BB#148:
	leaq	99160936(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126178624(%rdi), %rcx
	callq	*%r13
.LBB19_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_17
# BB#149:
	leaq	99155528(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126227504(%rdi), %rcx
	callq	*%r13
.LBB19_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_19
# BB#150:
	leaq	99150120(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126232392(%rdi), %rcx
	callq	*%r13
.LBB19_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_21
# BB#151:
	leaq	98814824(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126237280(%rdi), %rcx
	callq	*%r13
.LBB19_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_23
# BB#152:
	leaq	98809416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126242168(%rdi), %rcx
	callq	*%r13
.LBB19_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_25
# BB#153:
	leaq	98804008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125914672(%rdi), %rcx
	callq	*%r13
.LBB19_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_27
# BB#154:
	leaq	98798600(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125919560(%rdi), %rcx
	callq	*%r13
.LBB19_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_29
# BB#155:
	leaq	98836456(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125924448(%rdi), %rcx
	callq	*%r13
.LBB19_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_31
# BB#156:
	leaq	98831048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125929336(%rdi), %rcx
	callq	*%r13
.LBB19_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_33
# BB#157:
	leaq	98825640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125934224(%rdi), %rcx
	callq	*%r13
.LBB19_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_35
# BB#158:
	leaq	98820232(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125939112(%rdi), %rcx
	callq	*%r13
.LBB19_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_37
# BB#159:
	leaq	98858088(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125944000(%rdi), %rcx
	callq	*%r13
.LBB19_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_39
# BB#160:
	leaq	98852680(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125948888(%rdi), %rcx
	callq	*%r13
.LBB19_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_41
# BB#161:
	leaq	98847272(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125953776(%rdi), %rcx
	callq	*%r13
.LBB19_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_43
# BB#162:
	leaq	98841864(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125958664(%rdi), %rcx
	callq	*%r13
.LBB19_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_45
# BB#163:
	leaq	98879720(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125968440(%rdi), %rcx
	callq	*%r13
.LBB19_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_47
# BB#164:
	leaq	98874312(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125973328(%rdi), %rcx
	callq	*%r13
.LBB19_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_49
# BB#165:
	leaq	98868904(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125978216(%rdi), %rcx
	callq	*%r13
.LBB19_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_51
# BB#166:
	leaq	98863496(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125983104(%rdi), %rcx
	callq	*%r13
.LBB19_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_53
# BB#167:
	leaq	98901352(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125987992(%rdi), %rcx
	callq	*%r13
.LBB19_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_55
# BB#168:
	leaq	98895944(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125992880(%rdi), %rcx
	callq	*%r13
.LBB19_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_57
# BB#169:
	leaq	98890536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	125997768(%rdi), %rcx
	callq	*%r13
.LBB19_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_59
# BB#170:
	leaq	98885128(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126002656(%rdi), %rcx
	callq	*%r13
.LBB19_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_61
# BB#171:
	leaq	98922984(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126007544(%rdi), %rcx
	callq	*%r13
.LBB19_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_63
# BB#172:
	leaq	98917576(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126012432(%rdi), %rcx
	callq	*%r13
.LBB19_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_65
# BB#173:
	leaq	98912168(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126022208(%rdi), %rcx
	callq	*%r13
.LBB19_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_67
# BB#174:
	leaq	98906760(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126027096(%rdi), %rcx
	callq	*%r13
.LBB19_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_69
# BB#175:
	leaq	98944616(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126031984(%rdi), %rcx
	callq	*%r13
.LBB19_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_71
# BB#176:
	leaq	98939208(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126036872(%rdi), %rcx
	callq	*%r13
.LBB19_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_73
# BB#177:
	leaq	98933800(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126041760(%rdi), %rcx
	callq	*%r13
.LBB19_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_75
# BB#178:
	leaq	98928392(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126046648(%rdi), %rcx
	callq	*%r13
.LBB19_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_77
# BB#179:
	leaq	98966248(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126051536(%rdi), %rcx
	callq	*%r13
.LBB19_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_79
# BB#180:
	leaq	98960840(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126056424(%rdi), %rcx
	callq	*%r13
.LBB19_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_81
# BB#181:
	leaq	98955432(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126061312(%rdi), %rcx
	callq	*%r13
.LBB19_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_83
# BB#182:
	leaq	98950024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126066200(%rdi), %rcx
	callq	*%r13
.LBB19_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_85
# BB#183:
	leaq	99009512(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126075976(%rdi), %rcx
	callq	*%r13
.LBB19_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_87
# BB#184:
	leaq	99004104(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126080864(%rdi), %rcx
	callq	*%r13
.LBB19_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_89
# BB#185:
	leaq	98998696(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126085752(%rdi), %rcx
	callq	*%r13
.LBB19_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_91
# BB#186:
	leaq	98993288(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126090640(%rdi), %rcx
	callq	*%r13
.LBB19_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_93
# BB#187:
	leaq	99031144(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126095528(%rdi), %rcx
	callq	*%r13
.LBB19_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_95
# BB#188:
	leaq	99025736(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126100416(%rdi), %rcx
	callq	*%r13
.LBB19_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_97
# BB#189:
	leaq	99020328(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126105304(%rdi), %rcx
	callq	*%r13
.LBB19_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_99
# BB#190:
	leaq	99014920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126110192(%rdi), %rcx
	callq	*%r13
.LBB19_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_101
# BB#191:
	leaq	99052776(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126115080(%rdi), %rcx
	callq	*%r13
.LBB19_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_103
# BB#192:
	leaq	99047368(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126119968(%rdi), %rcx
	callq	*%r13
.LBB19_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_105
# BB#193:
	leaq	99041960(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126129744(%rdi), %rcx
	callq	*%r13
.LBB19_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_107
# BB#194:
	leaq	99036552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126134632(%rdi), %rcx
	callq	*%r13
.LBB19_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_109
# BB#195:
	leaq	99074408(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126139520(%rdi), %rcx
	callq	*%r13
.LBB19_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_111
# BB#196:
	leaq	99069000(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126144408(%rdi), %rcx
	callq	*%r13
.LBB19_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_113
# BB#197:
	leaq	99063592(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126149296(%rdi), %rcx
	callq	*%r13
.LBB19_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_115
# BB#198:
	leaq	99058184(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126154184(%rdi), %rcx
	callq	*%r13
.LBB19_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_117
# BB#199:
	leaq	99096040(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126159072(%rdi), %rcx
	callq	*%r13
.LBB19_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_119
# BB#200:
	leaq	99090632(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126163960(%rdi), %rcx
	callq	*%r13
.LBB19_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_121
# BB#201:
	leaq	99085224(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126168848(%rdi), %rcx
	callq	*%r13
.LBB19_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_123
# BB#202:
	leaq	99079816(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126173736(%rdi), %rcx
	callq	*%r13
.LBB19_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_125
# BB#203:
	leaq	99117672(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126183512(%rdi), %rcx
	callq	*%r13
.LBB19_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_127
# BB#204:
	leaq	99112264(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126188400(%rdi), %rcx
	callq	*%r13
.LBB19_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_129
# BB#205:
	leaq	99106856(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126193288(%rdi), %rcx
	callq	*%r13
.LBB19_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_131
# BB#206:
	leaq	99101448(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126198176(%rdi), %rcx
	callq	*%r13
.LBB19_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_133
# BB#207:
	leaq	99139304(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126203064(%rdi), %rcx
	callq	*%r13
.LBB19_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_135
# BB#208:
	leaq	99133896(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126207952(%rdi), %rcx
	callq	*%r13
.LBB19_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_137
# BB#209:
	leaq	99128488(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126212840(%rdi), %rcx
	callq	*%r13
.LBB19_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_139
# BB#210:
	leaq	99123080(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	126217728(%rdi), %rcx
	callq	*%r13
.LBB19_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB19_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB19_141
# BB#211:
	leaq	99144712(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$126222616, %rdi        # imm = 0x7860118
	movq	%rdi, %rcx
	callq	*%rbx
.LBB19_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB19_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_73;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_73
	.align	16, 0x90
_transaction_73:                        # @_transaction_73
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	319424(%rdi), %r14
	cmpl	$0, 319456(%rdi)
	je	.LBB20_2
# BB#1:
	leaq	319288(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB20_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB20_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB20_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_5
# BB#143:
	leaq	101941376(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128710312(%rdi), %rcx
	callq	*%r13
.LBB20_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_7
# BB#144:
	leaq	101935968(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128764080(%rdi), %rcx
	callq	*%r13
.LBB20_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_9
# BB#145:
	leaq	101930560(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128817848(%rdi), %rcx
	callq	*%r13
.LBB20_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_11
# BB#146:
	leaq	101925152(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128871616(%rdi), %rcx
	callq	*%r13
.LBB20_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_13
# BB#147:
	leaq	102119840(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128925384(%rdi), %rcx
	callq	*%r13
.LBB20_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_15
# BB#148:
	leaq	102114432(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128979152(%rdi), %rcx
	callq	*%r13
.LBB20_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_17
# BB#149:
	leaq	102109024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129028032(%rdi), %rcx
	callq	*%r13
.LBB20_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_19
# BB#150:
	leaq	102103616(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129032920(%rdi), %rcx
	callq	*%r13
.LBB20_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_21
# BB#151:
	leaq	101768320(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129037808(%rdi), %rcx
	callq	*%r13
.LBB20_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_23
# BB#152:
	leaq	101762912(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129042696(%rdi), %rcx
	callq	*%r13
.LBB20_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_25
# BB#153:
	leaq	101757504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128715200(%rdi), %rcx
	callq	*%r13
.LBB20_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_27
# BB#154:
	leaq	101752096(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128720088(%rdi), %rcx
	callq	*%r13
.LBB20_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_29
# BB#155:
	leaq	101789952(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128724976(%rdi), %rcx
	callq	*%r13
.LBB20_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_31
# BB#156:
	leaq	101784544(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128729864(%rdi), %rcx
	callq	*%r13
.LBB20_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_33
# BB#157:
	leaq	101779136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128734752(%rdi), %rcx
	callq	*%r13
.LBB20_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_35
# BB#158:
	leaq	101773728(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128739640(%rdi), %rcx
	callq	*%r13
.LBB20_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_37
# BB#159:
	leaq	101811584(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128744528(%rdi), %rcx
	callq	*%r13
.LBB20_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_39
# BB#160:
	leaq	101806176(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128749416(%rdi), %rcx
	callq	*%r13
.LBB20_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_41
# BB#161:
	leaq	101800768(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128754304(%rdi), %rcx
	callq	*%r13
.LBB20_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_43
# BB#162:
	leaq	101795360(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128759192(%rdi), %rcx
	callq	*%r13
.LBB20_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_45
# BB#163:
	leaq	101833216(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128768968(%rdi), %rcx
	callq	*%r13
.LBB20_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_47
# BB#164:
	leaq	101827808(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128773856(%rdi), %rcx
	callq	*%r13
.LBB20_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_49
# BB#165:
	leaq	101822400(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128778744(%rdi), %rcx
	callq	*%r13
.LBB20_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_51
# BB#166:
	leaq	101816992(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128783632(%rdi), %rcx
	callq	*%r13
.LBB20_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_53
# BB#167:
	leaq	101854848(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128788520(%rdi), %rcx
	callq	*%r13
.LBB20_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_55
# BB#168:
	leaq	101849440(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128793408(%rdi), %rcx
	callq	*%r13
.LBB20_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_57
# BB#169:
	leaq	101844032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128798296(%rdi), %rcx
	callq	*%r13
.LBB20_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_59
# BB#170:
	leaq	101838624(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128803184(%rdi), %rcx
	callq	*%r13
.LBB20_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_61
# BB#171:
	leaq	101876480(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128808072(%rdi), %rcx
	callq	*%r13
.LBB20_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_63
# BB#172:
	leaq	101871072(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128812960(%rdi), %rcx
	callq	*%r13
.LBB20_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_65
# BB#173:
	leaq	101865664(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128822736(%rdi), %rcx
	callq	*%r13
.LBB20_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_67
# BB#174:
	leaq	101860256(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128827624(%rdi), %rcx
	callq	*%r13
.LBB20_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_69
# BB#175:
	leaq	101898112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128832512(%rdi), %rcx
	callq	*%r13
.LBB20_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_71
# BB#176:
	leaq	101892704(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128837400(%rdi), %rcx
	callq	*%r13
.LBB20_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_73
# BB#177:
	leaq	101887296(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128842288(%rdi), %rcx
	callq	*%r13
.LBB20_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_75
# BB#178:
	leaq	101881888(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128847176(%rdi), %rcx
	callq	*%r13
.LBB20_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_77
# BB#179:
	leaq	101919744(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128852064(%rdi), %rcx
	callq	*%r13
.LBB20_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_79
# BB#180:
	leaq	101914336(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128856952(%rdi), %rcx
	callq	*%r13
.LBB20_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_81
# BB#181:
	leaq	101908928(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128861840(%rdi), %rcx
	callq	*%r13
.LBB20_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_83
# BB#182:
	leaq	101903520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128866728(%rdi), %rcx
	callq	*%r13
.LBB20_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_85
# BB#183:
	leaq	101963008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128876504(%rdi), %rcx
	callq	*%r13
.LBB20_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_87
# BB#184:
	leaq	101957600(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128881392(%rdi), %rcx
	callq	*%r13
.LBB20_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_89
# BB#185:
	leaq	101952192(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128886280(%rdi), %rcx
	callq	*%r13
.LBB20_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_91
# BB#186:
	leaq	101946784(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128891168(%rdi), %rcx
	callq	*%r13
.LBB20_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_93
# BB#187:
	leaq	101984640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128896056(%rdi), %rcx
	callq	*%r13
.LBB20_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_95
# BB#188:
	leaq	101979232(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128900944(%rdi), %rcx
	callq	*%r13
.LBB20_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_97
# BB#189:
	leaq	101973824(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128905832(%rdi), %rcx
	callq	*%r13
.LBB20_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_99
# BB#190:
	leaq	101968416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128910720(%rdi), %rcx
	callq	*%r13
.LBB20_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_101
# BB#191:
	leaq	102006272(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128915608(%rdi), %rcx
	callq	*%r13
.LBB20_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_103
# BB#192:
	leaq	102000864(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128920496(%rdi), %rcx
	callq	*%r13
.LBB20_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_105
# BB#193:
	leaq	101995456(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128930272(%rdi), %rcx
	callq	*%r13
.LBB20_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_107
# BB#194:
	leaq	101990048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128935160(%rdi), %rcx
	callq	*%r13
.LBB20_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_109
# BB#195:
	leaq	102027904(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128940048(%rdi), %rcx
	callq	*%r13
.LBB20_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_111
# BB#196:
	leaq	102022496(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128944936(%rdi), %rcx
	callq	*%r13
.LBB20_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_113
# BB#197:
	leaq	102017088(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128949824(%rdi), %rcx
	callq	*%r13
.LBB20_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_115
# BB#198:
	leaq	102011680(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128954712(%rdi), %rcx
	callq	*%r13
.LBB20_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_117
# BB#199:
	leaq	102049536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128959600(%rdi), %rcx
	callq	*%r13
.LBB20_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_119
# BB#200:
	leaq	102044128(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128964488(%rdi), %rcx
	callq	*%r13
.LBB20_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_121
# BB#201:
	leaq	102038720(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128969376(%rdi), %rcx
	callq	*%r13
.LBB20_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_123
# BB#202:
	leaq	102033312(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128974264(%rdi), %rcx
	callq	*%r13
.LBB20_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_125
# BB#203:
	leaq	102071168(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128984040(%rdi), %rcx
	callq	*%r13
.LBB20_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_127
# BB#204:
	leaq	102065760(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128988928(%rdi), %rcx
	callq	*%r13
.LBB20_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_129
# BB#205:
	leaq	102060352(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128993816(%rdi), %rcx
	callq	*%r13
.LBB20_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_131
# BB#206:
	leaq	102054944(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	128998704(%rdi), %rcx
	callq	*%r13
.LBB20_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_133
# BB#207:
	leaq	102092800(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129003592(%rdi), %rcx
	callq	*%r13
.LBB20_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_135
# BB#208:
	leaq	102087392(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129008480(%rdi), %rcx
	callq	*%r13
.LBB20_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_137
# BB#209:
	leaq	102081984(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129013368(%rdi), %rcx
	callq	*%r13
.LBB20_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_139
# BB#210:
	leaq	102076576(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	129018256(%rdi), %rcx
	callq	*%r13
.LBB20_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB20_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB20_141
# BB#211:
	leaq	102098208(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$129023144, %rdi        # imm = 0x7B0BCA8
	movq	%rdi, %rcx
	callq	*%rbx
.LBB20_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB20_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_74;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_74
	.align	16, 0x90
_transaction_74:                        # @_transaction_74
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rdi
	movl	48(%rbp), %ebx
	leaq	336728(%rdi), %r14
	cmpl	$0, 336760(%rdi)
	je	.LBB21_2
# BB#1:
	leaq	336592(%rdi), %rcx
	movl	%ebx, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB21_2:
	movl	%ebx, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB21_142
# BB#3:
	testl	%esi, %esi
	jne	.LBB21_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_5
# BB#143:
	leaq	104894872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131510840(%rdi), %rcx
	callq	*%r13
.LBB21_5:
	testl	%ebx, %ebx
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_7
# BB#144:
	leaq	104889464(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131564608(%rdi), %rcx
	callq	*%r13
.LBB21_7:
	cmpl	$2, %ebx
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_9
# BB#145:
	leaq	104884056(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131618376(%rdi), %rcx
	callq	*%r13
.LBB21_9:
	cmpl	$3, %ebx
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_11
# BB#146:
	leaq	104878648(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131672144(%rdi), %rcx
	callq	*%r13
.LBB21_11:
	cmpl	$4, %ebx
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_13
# BB#147:
	leaq	105073336(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131725912(%rdi), %rcx
	callq	*%r13
.LBB21_13:
	cmpl	$5, %ebx
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_15
# BB#148:
	leaq	105067928(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131779680(%rdi), %rcx
	callq	*%r13
.LBB21_15:
	cmpl	$6, %ebx
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_17
# BB#149:
	leaq	105062520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131828560(%rdi), %rcx
	callq	*%r13
.LBB21_17:
	cmpl	$7, %ebx
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_19
# BB#150:
	leaq	105057112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131833448(%rdi), %rcx
	callq	*%r13
.LBB21_19:
	cmpl	$8, %ebx
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_21
# BB#151:
	leaq	104721816(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131838336(%rdi), %rcx
	callq	*%r13
.LBB21_21:
	cmpl	$9, %ebx
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_23
# BB#152:
	leaq	104716408(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131843224(%rdi), %rcx
	callq	*%r13
.LBB21_23:
	cmpl	$10, %ebx
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_25
# BB#153:
	leaq	104711000(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131515728(%rdi), %rcx
	callq	*%r13
.LBB21_25:
	cmpl	$11, %ebx
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_27
# BB#154:
	leaq	104705592(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131520616(%rdi), %rcx
	callq	*%r13
.LBB21_27:
	cmpl	$12, %ebx
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_29
# BB#155:
	leaq	104743448(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131525504(%rdi), %rcx
	callq	*%r13
.LBB21_29:
	cmpl	$13, %ebx
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_31
# BB#156:
	leaq	104738040(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131530392(%rdi), %rcx
	callq	*%r13
.LBB21_31:
	cmpl	$14, %ebx
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_33
# BB#157:
	leaq	104732632(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131535280(%rdi), %rcx
	callq	*%r13
.LBB21_33:
	cmpl	$15, %ebx
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_35
# BB#158:
	leaq	104727224(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131540168(%rdi), %rcx
	callq	*%r13
.LBB21_35:
	cmpl	$16, %ebx
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_37
# BB#159:
	leaq	104765080(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131545056(%rdi), %rcx
	callq	*%r13
.LBB21_37:
	cmpl	$17, %ebx
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_39
# BB#160:
	leaq	104759672(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131549944(%rdi), %rcx
	callq	*%r13
.LBB21_39:
	cmpl	$18, %ebx
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_41
# BB#161:
	leaq	104754264(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131554832(%rdi), %rcx
	callq	*%r13
.LBB21_41:
	cmpl	$19, %ebx
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_43
# BB#162:
	leaq	104748856(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131559720(%rdi), %rcx
	callq	*%r13
.LBB21_43:
	cmpl	$20, %ebx
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_45
# BB#163:
	leaq	104786712(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131569496(%rdi), %rcx
	callq	*%r13
.LBB21_45:
	cmpl	$21, %ebx
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_47
# BB#164:
	leaq	104781304(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131574384(%rdi), %rcx
	callq	*%r13
.LBB21_47:
	cmpl	$22, %ebx
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_49
# BB#165:
	leaq	104775896(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131579272(%rdi), %rcx
	callq	*%r13
.LBB21_49:
	cmpl	$23, %ebx
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_51
# BB#166:
	leaq	104770488(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131584160(%rdi), %rcx
	callq	*%r13
.LBB21_51:
	cmpl	$24, %ebx
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_53
# BB#167:
	leaq	104808344(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131589048(%rdi), %rcx
	callq	*%r13
.LBB21_53:
	cmpl	$25, %ebx
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_55
# BB#168:
	leaq	104802936(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131593936(%rdi), %rcx
	callq	*%r13
.LBB21_55:
	cmpl	$26, %ebx
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_57
# BB#169:
	leaq	104797528(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131598824(%rdi), %rcx
	callq	*%r13
.LBB21_57:
	cmpl	$27, %ebx
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_59
# BB#170:
	leaq	104792120(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131603712(%rdi), %rcx
	callq	*%r13
.LBB21_59:
	cmpl	$28, %ebx
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_61
# BB#171:
	leaq	104829976(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131608600(%rdi), %rcx
	callq	*%r13
.LBB21_61:
	cmpl	$29, %ebx
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_63
# BB#172:
	leaq	104824568(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131613488(%rdi), %rcx
	callq	*%r13
.LBB21_63:
	cmpl	$30, %ebx
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_65
# BB#173:
	leaq	104819160(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131623264(%rdi), %rcx
	callq	*%r13
.LBB21_65:
	cmpl	$31, %ebx
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_67
# BB#174:
	leaq	104813752(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131628152(%rdi), %rcx
	callq	*%r13
.LBB21_67:
	cmpl	$32, %ebx
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_69
# BB#175:
	leaq	104851608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131633040(%rdi), %rcx
	callq	*%r13
.LBB21_69:
	cmpl	$33, %ebx
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_71
# BB#176:
	leaq	104846200(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131637928(%rdi), %rcx
	callq	*%r13
.LBB21_71:
	cmpl	$34, %ebx
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_73
# BB#177:
	leaq	104840792(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131642816(%rdi), %rcx
	callq	*%r13
.LBB21_73:
	cmpl	$35, %ebx
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_75
# BB#178:
	leaq	104835384(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131647704(%rdi), %rcx
	callq	*%r13
.LBB21_75:
	cmpl	$36, %ebx
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_77
# BB#179:
	leaq	104873240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131652592(%rdi), %rcx
	callq	*%r13
.LBB21_77:
	cmpl	$37, %ebx
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_79
# BB#180:
	leaq	104867832(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131657480(%rdi), %rcx
	callq	*%r13
.LBB21_79:
	cmpl	$38, %ebx
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_81
# BB#181:
	leaq	104862424(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131662368(%rdi), %rcx
	callq	*%r13
.LBB21_81:
	cmpl	$39, %ebx
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_83
# BB#182:
	leaq	104857016(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131667256(%rdi), %rcx
	callq	*%r13
.LBB21_83:
	cmpl	$40, %ebx
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_85
# BB#183:
	leaq	104916504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131677032(%rdi), %rcx
	callq	*%r13
.LBB21_85:
	cmpl	$41, %ebx
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_87
# BB#184:
	leaq	104911096(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131681920(%rdi), %rcx
	callq	*%r13
.LBB21_87:
	cmpl	$42, %ebx
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_89
# BB#185:
	leaq	104905688(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131686808(%rdi), %rcx
	callq	*%r13
.LBB21_89:
	cmpl	$43, %ebx
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_91
# BB#186:
	leaq	104900280(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131691696(%rdi), %rcx
	callq	*%r13
.LBB21_91:
	cmpl	$44, %ebx
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_93
# BB#187:
	leaq	104938136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131696584(%rdi), %rcx
	callq	*%r13
.LBB21_93:
	cmpl	$45, %ebx
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_95
# BB#188:
	leaq	104932728(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131701472(%rdi), %rcx
	callq	*%r13
.LBB21_95:
	cmpl	$46, %ebx
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_97
# BB#189:
	leaq	104927320(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131706360(%rdi), %rcx
	callq	*%r13
.LBB21_97:
	cmpl	$47, %ebx
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_99
# BB#190:
	leaq	104921912(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131711248(%rdi), %rcx
	callq	*%r13
.LBB21_99:
	cmpl	$48, %ebx
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_101
# BB#191:
	leaq	104959768(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131716136(%rdi), %rcx
	callq	*%r13
.LBB21_101:
	cmpl	$49, %ebx
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_103
# BB#192:
	leaq	104954360(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131721024(%rdi), %rcx
	callq	*%r13
.LBB21_103:
	cmpl	$50, %ebx
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_105
# BB#193:
	leaq	104948952(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131730800(%rdi), %rcx
	callq	*%r13
.LBB21_105:
	cmpl	$51, %ebx
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_107
# BB#194:
	leaq	104943544(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131735688(%rdi), %rcx
	callq	*%r13
.LBB21_107:
	cmpl	$52, %ebx
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_109
# BB#195:
	leaq	104981400(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131740576(%rdi), %rcx
	callq	*%r13
.LBB21_109:
	cmpl	$53, %ebx
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_111
# BB#196:
	leaq	104975992(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131745464(%rdi), %rcx
	callq	*%r13
.LBB21_111:
	cmpl	$54, %ebx
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_113
# BB#197:
	leaq	104970584(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131750352(%rdi), %rcx
	callq	*%r13
.LBB21_113:
	cmpl	$55, %ebx
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_115
# BB#198:
	leaq	104965176(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131755240(%rdi), %rcx
	callq	*%r13
.LBB21_115:
	cmpl	$56, %ebx
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_117
# BB#199:
	leaq	105003032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131760128(%rdi), %rcx
	callq	*%r13
.LBB21_117:
	cmpl	$57, %ebx
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_119
# BB#200:
	leaq	104997624(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131765016(%rdi), %rcx
	callq	*%r13
.LBB21_119:
	cmpl	$58, %ebx
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_121
# BB#201:
	leaq	104992216(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131769904(%rdi), %rcx
	callq	*%r13
.LBB21_121:
	cmpl	$59, %ebx
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_123
# BB#202:
	leaq	104986808(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131774792(%rdi), %rcx
	callq	*%r13
.LBB21_123:
	cmpl	$60, %ebx
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_125
# BB#203:
	leaq	105024664(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131784568(%rdi), %rcx
	callq	*%r13
.LBB21_125:
	cmpl	$61, %ebx
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_127
# BB#204:
	leaq	105019256(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131789456(%rdi), %rcx
	callq	*%r13
.LBB21_127:
	cmpl	$62, %ebx
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_129
# BB#205:
	leaq	105013848(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131794344(%rdi), %rcx
	callq	*%r13
.LBB21_129:
	cmpl	$63, %ebx
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_131
# BB#206:
	leaq	105008440(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131799232(%rdi), %rcx
	callq	*%r13
.LBB21_131:
	cmpl	$64, %ebx
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_133
# BB#207:
	leaq	105046296(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131804120(%rdi), %rcx
	callq	*%r13
.LBB21_133:
	cmpl	$65, %ebx
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_135
# BB#208:
	leaq	105040888(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131809008(%rdi), %rcx
	callq	*%r13
.LBB21_135:
	cmpl	$66, %ebx
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_137
# BB#209:
	leaq	105035480(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131813896(%rdi), %rcx
	callq	*%r13
.LBB21_137:
	cmpl	$67, %ebx
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_139
# BB#210:
	leaq	105030072(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	131818784(%rdi), %rcx
	callq	*%r13
.LBB21_139:
	cmpl	$68, %ebx
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB21_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	movl	%ebx, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB21_141
# BB#211:
	leaq	105051704(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	addq	$131823672, %rdi        # imm = 0x7DB7838
	movq	%rdi, %rcx
	callq	*%rbx
.LBB21_141:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB21_142:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_77;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_77
	.align	16, 0x90
_transaction_77:                        # @_transaction_77
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	354032(%rbx), %r15
	cmpl	$0, 354048(%rbx)
	je	.LBB22_2
# BB#1:
	leaq	353896(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB22_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB22_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	353896(%rbx), %rcx
	addq	$48628552, %rbx         # imm = 0x2E60348
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB22_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_78;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_78
	.align	16, 0x90
_transaction_78:                        # @_transaction_78
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	354624(%r14), %r15
	cmpl	$0, 354656(%r14)
	je	.LBB23_2
# BB#1:
	leaq	354488(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB23_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB23_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB23_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_5
# BB#177:
	leaq	106918800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_7
# BB#178:
	leaq	106913392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_9
# BB#179:
	leaq	106907984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_11
# BB#180:
	leaq	106902576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_13
# BB#181:
	leaq	107156752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_15
# BB#182:
	leaq	107151344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_17
# BB#183:
	leaq	107145936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_19
# BB#184:
	leaq	107140528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_21
# BB#185:
	leaq	106745744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_23
# BB#186:
	leaq	106740336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_25
# BB#187:
	leaq	106734928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_27
# BB#188:
	leaq	106729520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_29
# BB#189:
	leaq	106767376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_31
# BB#190:
	leaq	106761968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_33
# BB#191:
	leaq	106756560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_35
# BB#192:
	leaq	106751152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_37
# BB#193:
	leaq	106789008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_39
# BB#194:
	leaq	106783600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_41
# BB#195:
	leaq	106778192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_43
# BB#196:
	leaq	106772784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_45
# BB#197:
	leaq	106810640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_47
# BB#198:
	leaq	106805232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_49
# BB#199:
	leaq	106799824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_51
# BB#200:
	leaq	106794416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_53
# BB#201:
	leaq	106832272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_55
# BB#202:
	leaq	106826864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_57
# BB#203:
	leaq	106821456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_59
# BB#204:
	leaq	106816048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_61
# BB#205:
	leaq	106853904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_63
# BB#206:
	leaq	106848496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_65
# BB#207:
	leaq	106843088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_67
# BB#208:
	leaq	106837680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_69
# BB#209:
	leaq	106875536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_71
# BB#210:
	leaq	106870128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_73
# BB#211:
	leaq	106864720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_75
# BB#212:
	leaq	106859312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_77
# BB#213:
	leaq	106897168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_79
# BB#214:
	leaq	106891760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_81
# BB#215:
	leaq	106886352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_83
# BB#216:
	leaq	106880944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_85
# BB#217:
	leaq	106940432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_87
# BB#218:
	leaq	106935024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_89
# BB#219:
	leaq	106929616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_91
# BB#220:
	leaq	106924208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_93
# BB#221:
	leaq	106962064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_95
# BB#222:
	leaq	106956656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_97
# BB#223:
	leaq	106951248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_99
# BB#224:
	leaq	106945840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_101
# BB#225:
	leaq	106983696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_103
# BB#226:
	leaq	106978288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_105
# BB#227:
	leaq	106972880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_107
# BB#228:
	leaq	106967472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_109
# BB#229:
	leaq	107005328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_111
# BB#230:
	leaq	106999920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_113
# BB#231:
	leaq	106994512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_115
# BB#232:
	leaq	106989104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_117
# BB#233:
	leaq	107026960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_119
# BB#234:
	leaq	107021552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_121
# BB#235:
	leaq	107016144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_123
# BB#236:
	leaq	107010736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_125
# BB#237:
	leaq	107048592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_127
# BB#238:
	leaq	107043184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_129
# BB#239:
	leaq	107037776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_131
# BB#240:
	leaq	107032368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_133
# BB#241:
	leaq	107070224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_135
# BB#242:
	leaq	107064816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_137
# BB#243:
	leaq	107059408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_139
# BB#244:
	leaq	107054000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_141
# BB#245:
	leaq	107091856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_143
# BB#246:
	leaq	107086448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_145
# BB#247:
	leaq	107081040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_147
# BB#248:
	leaq	107075632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_149
# BB#249:
	leaq	107113488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_151
# BB#250:
	leaq	107108080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_153
# BB#251:
	leaq	107102672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_155
# BB#252:
	leaq	107097264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_157
# BB#253:
	leaq	107135120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_159
# BB#254:
	leaq	107129712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_161
# BB#255:
	leaq	107124304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_163
# BB#256:
	leaq	107118896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_165
# BB#257:
	leaq	107178384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_167
# BB#258:
	leaq	107172976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_169
# BB#259:
	leaq	107167568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_171
# BB#260:
	leaq	107162160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_173
# BB#261:
	leaq	107189200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB23_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB23_175
# BB#262:
	addq	$107183792, %r14        # imm = 0x6637EB0
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB23_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB23_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_79;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_79
	.align	16, 0x90
_transaction_79:                        # @_transaction_79
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	376144(%r14), %r15
	cmpl	$0, 376176(%r14)
	je	.LBB24_2
# BB#1:
	leaq	376008(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB24_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB24_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB24_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_5
# BB#177:
	leaq	109719328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_7
# BB#178:
	leaq	109713920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_9
# BB#179:
	leaq	109708512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_11
# BB#180:
	leaq	109703104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_13
# BB#181:
	leaq	109957280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_15
# BB#182:
	leaq	109951872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_17
# BB#183:
	leaq	109946464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_19
# BB#184:
	leaq	109941056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_21
# BB#185:
	leaq	109546272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_23
# BB#186:
	leaq	109540864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_25
# BB#187:
	leaq	109535456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_27
# BB#188:
	leaq	109530048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_29
# BB#189:
	leaq	109567904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_31
# BB#190:
	leaq	109562496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_33
# BB#191:
	leaq	109557088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_35
# BB#192:
	leaq	109551680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_37
# BB#193:
	leaq	109589536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_39
# BB#194:
	leaq	109584128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_41
# BB#195:
	leaq	109578720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_43
# BB#196:
	leaq	109573312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_45
# BB#197:
	leaq	109611168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_47
# BB#198:
	leaq	109605760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_49
# BB#199:
	leaq	109600352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_51
# BB#200:
	leaq	109594944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_53
# BB#201:
	leaq	109632800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_55
# BB#202:
	leaq	109627392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_57
# BB#203:
	leaq	109621984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_59
# BB#204:
	leaq	109616576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_61
# BB#205:
	leaq	109654432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_63
# BB#206:
	leaq	109649024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_65
# BB#207:
	leaq	109643616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_67
# BB#208:
	leaq	109638208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_69
# BB#209:
	leaq	109676064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_71
# BB#210:
	leaq	109670656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_73
# BB#211:
	leaq	109665248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_75
# BB#212:
	leaq	109659840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_77
# BB#213:
	leaq	109697696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_79
# BB#214:
	leaq	109692288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_81
# BB#215:
	leaq	109686880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_83
# BB#216:
	leaq	109681472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_85
# BB#217:
	leaq	109740960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_87
# BB#218:
	leaq	109735552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_89
# BB#219:
	leaq	109730144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_91
# BB#220:
	leaq	109724736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_93
# BB#221:
	leaq	109762592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_95
# BB#222:
	leaq	109757184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_97
# BB#223:
	leaq	109751776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_99
# BB#224:
	leaq	109746368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_101
# BB#225:
	leaq	109784224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_103
# BB#226:
	leaq	109778816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_105
# BB#227:
	leaq	109773408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_107
# BB#228:
	leaq	109768000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_109
# BB#229:
	leaq	109805856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_111
# BB#230:
	leaq	109800448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_113
# BB#231:
	leaq	109795040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_115
# BB#232:
	leaq	109789632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_117
# BB#233:
	leaq	109827488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_119
# BB#234:
	leaq	109822080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_121
# BB#235:
	leaq	109816672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_123
# BB#236:
	leaq	109811264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_125
# BB#237:
	leaq	109849120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_127
# BB#238:
	leaq	109843712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_129
# BB#239:
	leaq	109838304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_131
# BB#240:
	leaq	109832896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_133
# BB#241:
	leaq	109870752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_135
# BB#242:
	leaq	109865344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_137
# BB#243:
	leaq	109859936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_139
# BB#244:
	leaq	109854528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_141
# BB#245:
	leaq	109892384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_143
# BB#246:
	leaq	109886976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_145
# BB#247:
	leaq	109881568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_147
# BB#248:
	leaq	109876160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_149
# BB#249:
	leaq	109914016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_151
# BB#250:
	leaq	109908608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_153
# BB#251:
	leaq	109903200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_155
# BB#252:
	leaq	109897792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_157
# BB#253:
	leaq	109935648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_159
# BB#254:
	leaq	109930240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_161
# BB#255:
	leaq	109924832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_163
# BB#256:
	leaq	109919424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_165
# BB#257:
	leaq	109978912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_167
# BB#258:
	leaq	109973504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_169
# BB#259:
	leaq	109968096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_171
# BB#260:
	leaq	109962688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_173
# BB#261:
	leaq	109989728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB24_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB24_175
# BB#262:
	addq	$109984320, %r14        # imm = 0x68E3A40
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB24_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB24_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_80;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_80
	.align	16, 0x90
_transaction_80:                        # @_transaction_80
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	397664(%r14), %r15
	cmpl	$0, 397696(%r14)
	je	.LBB25_2
# BB#1:
	leaq	397528(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB25_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB25_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB25_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_5
# BB#177:
	leaq	112519856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_7
# BB#178:
	leaq	112514448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_9
# BB#179:
	leaq	112509040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_11
# BB#180:
	leaq	112503632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_13
# BB#181:
	leaq	112757808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_15
# BB#182:
	leaq	112752400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_17
# BB#183:
	leaq	112746992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_19
# BB#184:
	leaq	112741584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_21
# BB#185:
	leaq	112346800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_23
# BB#186:
	leaq	112341392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_25
# BB#187:
	leaq	112335984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_27
# BB#188:
	leaq	112330576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_29
# BB#189:
	leaq	112368432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_31
# BB#190:
	leaq	112363024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_33
# BB#191:
	leaq	112357616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_35
# BB#192:
	leaq	112352208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_37
# BB#193:
	leaq	112390064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_39
# BB#194:
	leaq	112384656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_41
# BB#195:
	leaq	112379248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_43
# BB#196:
	leaq	112373840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_45
# BB#197:
	leaq	112411696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_47
# BB#198:
	leaq	112406288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_49
# BB#199:
	leaq	112400880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_51
# BB#200:
	leaq	112395472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_53
# BB#201:
	leaq	112433328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_55
# BB#202:
	leaq	112427920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_57
# BB#203:
	leaq	112422512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_59
# BB#204:
	leaq	112417104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_61
# BB#205:
	leaq	112454960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_63
# BB#206:
	leaq	112449552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_65
# BB#207:
	leaq	112444144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_67
# BB#208:
	leaq	112438736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_69
# BB#209:
	leaq	112476592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_71
# BB#210:
	leaq	112471184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_73
# BB#211:
	leaq	112465776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_75
# BB#212:
	leaq	112460368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_77
# BB#213:
	leaq	112498224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_79
# BB#214:
	leaq	112492816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_81
# BB#215:
	leaq	112487408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_83
# BB#216:
	leaq	112482000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_85
# BB#217:
	leaq	112541488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_87
# BB#218:
	leaq	112536080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_89
# BB#219:
	leaq	112530672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_91
# BB#220:
	leaq	112525264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_93
# BB#221:
	leaq	112563120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_95
# BB#222:
	leaq	112557712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_97
# BB#223:
	leaq	112552304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_99
# BB#224:
	leaq	112546896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_101
# BB#225:
	leaq	112584752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_103
# BB#226:
	leaq	112579344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_105
# BB#227:
	leaq	112573936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_107
# BB#228:
	leaq	112568528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_109
# BB#229:
	leaq	112606384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_111
# BB#230:
	leaq	112600976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_113
# BB#231:
	leaq	112595568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_115
# BB#232:
	leaq	112590160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_117
# BB#233:
	leaq	112628016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_119
# BB#234:
	leaq	112622608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_121
# BB#235:
	leaq	112617200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_123
# BB#236:
	leaq	112611792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_125
# BB#237:
	leaq	112649648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_127
# BB#238:
	leaq	112644240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_129
# BB#239:
	leaq	112638832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_131
# BB#240:
	leaq	112633424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_133
# BB#241:
	leaq	112671280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_135
# BB#242:
	leaq	112665872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_137
# BB#243:
	leaq	112660464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_139
# BB#244:
	leaq	112655056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_141
# BB#245:
	leaq	112692912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_143
# BB#246:
	leaq	112687504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_145
# BB#247:
	leaq	112682096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_147
# BB#248:
	leaq	112676688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_149
# BB#249:
	leaq	112714544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_151
# BB#250:
	leaq	112709136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_153
# BB#251:
	leaq	112703728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_155
# BB#252:
	leaq	112698320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_157
# BB#253:
	leaq	112736176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_159
# BB#254:
	leaq	112730768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_161
# BB#255:
	leaq	112725360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_163
# BB#256:
	leaq	112719952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_165
# BB#257:
	leaq	112779440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_167
# BB#258:
	leaq	112774032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_169
# BB#259:
	leaq	112768624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_171
# BB#260:
	leaq	112763216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_173
# BB#261:
	leaq	112790256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB25_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB25_175
# BB#262:
	addq	$112784848, %r14        # imm = 0x6B8F5D0
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB25_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB25_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_81;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_81
	.align	16, 0x90
_transaction_81:                        # @_transaction_81
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	419184(%r14), %r15
	cmpl	$0, 419216(%r14)
	je	.LBB26_2
# BB#1:
	leaq	419048(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB26_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB26_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB26_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_5
# BB#177:
	leaq	115320384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_7
# BB#178:
	leaq	115314976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_9
# BB#179:
	leaq	115309568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_11
# BB#180:
	leaq	115304160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_13
# BB#181:
	leaq	115558336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_15
# BB#182:
	leaq	115552928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_17
# BB#183:
	leaq	115547520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_19
# BB#184:
	leaq	115542112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_21
# BB#185:
	leaq	115147328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_23
# BB#186:
	leaq	115141920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_25
# BB#187:
	leaq	115136512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_27
# BB#188:
	leaq	115131104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_29
# BB#189:
	leaq	115168960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_31
# BB#190:
	leaq	115163552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_33
# BB#191:
	leaq	115158144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_35
# BB#192:
	leaq	115152736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_37
# BB#193:
	leaq	115190592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_39
# BB#194:
	leaq	115185184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_41
# BB#195:
	leaq	115179776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_43
# BB#196:
	leaq	115174368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_45
# BB#197:
	leaq	115212224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_47
# BB#198:
	leaq	115206816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_49
# BB#199:
	leaq	115201408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_51
# BB#200:
	leaq	115196000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_53
# BB#201:
	leaq	115233856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_55
# BB#202:
	leaq	115228448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_57
# BB#203:
	leaq	115223040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_59
# BB#204:
	leaq	115217632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_61
# BB#205:
	leaq	115255488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_63
# BB#206:
	leaq	115250080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_65
# BB#207:
	leaq	115244672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_67
# BB#208:
	leaq	115239264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_69
# BB#209:
	leaq	115277120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_71
# BB#210:
	leaq	115271712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_73
# BB#211:
	leaq	115266304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_75
# BB#212:
	leaq	115260896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_77
# BB#213:
	leaq	115298752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_79
# BB#214:
	leaq	115293344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_81
# BB#215:
	leaq	115287936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_83
# BB#216:
	leaq	115282528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_85
# BB#217:
	leaq	115342016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_87
# BB#218:
	leaq	115336608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_89
# BB#219:
	leaq	115331200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_91
# BB#220:
	leaq	115325792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_93
# BB#221:
	leaq	115363648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_95
# BB#222:
	leaq	115358240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_97
# BB#223:
	leaq	115352832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_99
# BB#224:
	leaq	115347424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_101
# BB#225:
	leaq	115385280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_103
# BB#226:
	leaq	115379872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_105
# BB#227:
	leaq	115374464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_107
# BB#228:
	leaq	115369056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_109
# BB#229:
	leaq	115406912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_111
# BB#230:
	leaq	115401504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_113
# BB#231:
	leaq	115396096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_115
# BB#232:
	leaq	115390688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_117
# BB#233:
	leaq	115428544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_119
# BB#234:
	leaq	115423136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_121
# BB#235:
	leaq	115417728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_123
# BB#236:
	leaq	115412320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_125
# BB#237:
	leaq	115450176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_127
# BB#238:
	leaq	115444768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_129
# BB#239:
	leaq	115439360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_131
# BB#240:
	leaq	115433952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_133
# BB#241:
	leaq	115471808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_135
# BB#242:
	leaq	115466400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_137
# BB#243:
	leaq	115460992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_139
# BB#244:
	leaq	115455584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_141
# BB#245:
	leaq	115493440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_143
# BB#246:
	leaq	115488032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_145
# BB#247:
	leaq	115482624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_147
# BB#248:
	leaq	115477216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_149
# BB#249:
	leaq	115515072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_151
# BB#250:
	leaq	115509664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_153
# BB#251:
	leaq	115504256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_155
# BB#252:
	leaq	115498848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_157
# BB#253:
	leaq	115536704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_159
# BB#254:
	leaq	115531296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_161
# BB#255:
	leaq	115525888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_163
# BB#256:
	leaq	115520480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_165
# BB#257:
	leaq	115579968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_167
# BB#258:
	leaq	115574560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_169
# BB#259:
	leaq	115569152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_171
# BB#260:
	leaq	115563744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_173
# BB#261:
	leaq	115590784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB26_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB26_175
# BB#262:
	addq	$115585376, %r14        # imm = 0x6E3B160
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB26_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB26_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_82;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_82
	.align	16, 0x90
_transaction_82:                        # @_transaction_82
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	440704(%r14), %r15
	cmpl	$0, 440736(%r14)
	je	.LBB27_2
# BB#1:
	leaq	440568(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB27_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB27_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB27_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_5
# BB#177:
	leaq	118120912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_7
# BB#178:
	leaq	118115504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_9
# BB#179:
	leaq	118110096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_11
# BB#180:
	leaq	118104688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_13
# BB#181:
	leaq	118358864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_15
# BB#182:
	leaq	118353456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_17
# BB#183:
	leaq	118348048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_19
# BB#184:
	leaq	118342640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_21
# BB#185:
	leaq	117947856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_23
# BB#186:
	leaq	117942448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_25
# BB#187:
	leaq	117937040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_27
# BB#188:
	leaq	117931632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_29
# BB#189:
	leaq	117969488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_31
# BB#190:
	leaq	117964080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_33
# BB#191:
	leaq	117958672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_35
# BB#192:
	leaq	117953264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_37
# BB#193:
	leaq	117991120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_39
# BB#194:
	leaq	117985712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_41
# BB#195:
	leaq	117980304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_43
# BB#196:
	leaq	117974896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_45
# BB#197:
	leaq	118012752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_47
# BB#198:
	leaq	118007344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_49
# BB#199:
	leaq	118001936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_51
# BB#200:
	leaq	117996528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_53
# BB#201:
	leaq	118034384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_55
# BB#202:
	leaq	118028976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_57
# BB#203:
	leaq	118023568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_59
# BB#204:
	leaq	118018160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_61
# BB#205:
	leaq	118056016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_63
# BB#206:
	leaq	118050608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_65
# BB#207:
	leaq	118045200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_67
# BB#208:
	leaq	118039792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_69
# BB#209:
	leaq	118077648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_71
# BB#210:
	leaq	118072240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_73
# BB#211:
	leaq	118066832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_75
# BB#212:
	leaq	118061424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_77
# BB#213:
	leaq	118099280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_79
# BB#214:
	leaq	118093872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_81
# BB#215:
	leaq	118088464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_83
# BB#216:
	leaq	118083056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_85
# BB#217:
	leaq	118142544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_87
# BB#218:
	leaq	118137136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_89
# BB#219:
	leaq	118131728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_91
# BB#220:
	leaq	118126320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_93
# BB#221:
	leaq	118164176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_95
# BB#222:
	leaq	118158768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_97
# BB#223:
	leaq	118153360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_99
# BB#224:
	leaq	118147952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_101
# BB#225:
	leaq	118185808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_103
# BB#226:
	leaq	118180400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_105
# BB#227:
	leaq	118174992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_107
# BB#228:
	leaq	118169584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_109
# BB#229:
	leaq	118207440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_111
# BB#230:
	leaq	118202032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_113
# BB#231:
	leaq	118196624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_115
# BB#232:
	leaq	118191216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_117
# BB#233:
	leaq	118229072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_119
# BB#234:
	leaq	118223664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_121
# BB#235:
	leaq	118218256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_123
# BB#236:
	leaq	118212848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_125
# BB#237:
	leaq	118250704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_127
# BB#238:
	leaq	118245296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_129
# BB#239:
	leaq	118239888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_131
# BB#240:
	leaq	118234480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_133
# BB#241:
	leaq	118272336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_135
# BB#242:
	leaq	118266928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_137
# BB#243:
	leaq	118261520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_139
# BB#244:
	leaq	118256112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_141
# BB#245:
	leaq	118293968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_143
# BB#246:
	leaq	118288560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_145
# BB#247:
	leaq	118283152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_147
# BB#248:
	leaq	118277744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_149
# BB#249:
	leaq	118315600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_151
# BB#250:
	leaq	118310192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_153
# BB#251:
	leaq	118304784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_155
# BB#252:
	leaq	118299376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_157
# BB#253:
	leaq	118337232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_159
# BB#254:
	leaq	118331824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_161
# BB#255:
	leaq	118326416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_163
# BB#256:
	leaq	118321008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_165
# BB#257:
	leaq	118380496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_167
# BB#258:
	leaq	118375088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_169
# BB#259:
	leaq	118369680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_171
# BB#260:
	leaq	118364272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_173
# BB#261:
	leaq	118391312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB27_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB27_175
# BB#262:
	addq	$118385904, %r14        # imm = 0x70E6CF0
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB27_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB27_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_83;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_83
	.align	16, 0x90
_transaction_83:                        # @_transaction_83
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	462224(%r14), %r15
	cmpl	$0, 462256(%r14)
	je	.LBB28_2
# BB#1:
	leaq	462088(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB28_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB28_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB28_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_5
# BB#177:
	leaq	120921440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_7
# BB#178:
	leaq	120916032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_9
# BB#179:
	leaq	120910624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_11
# BB#180:
	leaq	120905216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_13
# BB#181:
	leaq	121159392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_15
# BB#182:
	leaq	121153984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_17
# BB#183:
	leaq	121148576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_19
# BB#184:
	leaq	121143168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_21
# BB#185:
	leaq	120748384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_23
# BB#186:
	leaq	120742976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_25
# BB#187:
	leaq	120737568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_27
# BB#188:
	leaq	120732160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_29
# BB#189:
	leaq	120770016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_31
# BB#190:
	leaq	120764608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_33
# BB#191:
	leaq	120759200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_35
# BB#192:
	leaq	120753792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_37
# BB#193:
	leaq	120791648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_39
# BB#194:
	leaq	120786240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_41
# BB#195:
	leaq	120780832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_43
# BB#196:
	leaq	120775424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_45
# BB#197:
	leaq	120813280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_47
# BB#198:
	leaq	120807872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_49
# BB#199:
	leaq	120802464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_51
# BB#200:
	leaq	120797056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_53
# BB#201:
	leaq	120834912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_55
# BB#202:
	leaq	120829504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_57
# BB#203:
	leaq	120824096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_59
# BB#204:
	leaq	120818688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_61
# BB#205:
	leaq	120856544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_63
# BB#206:
	leaq	120851136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_65
# BB#207:
	leaq	120845728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_67
# BB#208:
	leaq	120840320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_69
# BB#209:
	leaq	120878176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_71
# BB#210:
	leaq	120872768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_73
# BB#211:
	leaq	120867360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_75
# BB#212:
	leaq	120861952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_77
# BB#213:
	leaq	120899808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_79
# BB#214:
	leaq	120894400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_81
# BB#215:
	leaq	120888992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_83
# BB#216:
	leaq	120883584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_85
# BB#217:
	leaq	120943072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_87
# BB#218:
	leaq	120937664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_89
# BB#219:
	leaq	120932256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_91
# BB#220:
	leaq	120926848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_93
# BB#221:
	leaq	120964704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_95
# BB#222:
	leaq	120959296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_97
# BB#223:
	leaq	120953888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_99
# BB#224:
	leaq	120948480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_101
# BB#225:
	leaq	120986336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_103
# BB#226:
	leaq	120980928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_105
# BB#227:
	leaq	120975520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_107
# BB#228:
	leaq	120970112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_109
# BB#229:
	leaq	121007968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_111
# BB#230:
	leaq	121002560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_113
# BB#231:
	leaq	120997152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_115
# BB#232:
	leaq	120991744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_117
# BB#233:
	leaq	121029600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_119
# BB#234:
	leaq	121024192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_121
# BB#235:
	leaq	121018784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_123
# BB#236:
	leaq	121013376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_125
# BB#237:
	leaq	121051232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_127
# BB#238:
	leaq	121045824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_129
# BB#239:
	leaq	121040416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_131
# BB#240:
	leaq	121035008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_133
# BB#241:
	leaq	121072864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_135
# BB#242:
	leaq	121067456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_137
# BB#243:
	leaq	121062048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_139
# BB#244:
	leaq	121056640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_141
# BB#245:
	leaq	121094496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_143
# BB#246:
	leaq	121089088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_145
# BB#247:
	leaq	121083680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_147
# BB#248:
	leaq	121078272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_149
# BB#249:
	leaq	121116128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_151
# BB#250:
	leaq	121110720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_153
# BB#251:
	leaq	121105312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_155
# BB#252:
	leaq	121099904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_157
# BB#253:
	leaq	121137760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_159
# BB#254:
	leaq	121132352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_161
# BB#255:
	leaq	121126944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_163
# BB#256:
	leaq	121121536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_165
# BB#257:
	leaq	121181024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_167
# BB#258:
	leaq	121175616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_169
# BB#259:
	leaq	121170208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_171
# BB#260:
	leaq	121164800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_173
# BB#261:
	leaq	121191840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB28_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB28_175
# BB#262:
	addq	$121186432, %r14        # imm = 0x7392880
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB28_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB28_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_84;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_84
	.align	16, 0x90
_transaction_84:                        # @_transaction_84
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	483744(%r14), %r15
	cmpl	$0, 483776(%r14)
	je	.LBB29_2
# BB#1:
	leaq	483608(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB29_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB29_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB29_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_5
# BB#177:
	leaq	123721968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_7
# BB#178:
	leaq	123716560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_9
# BB#179:
	leaq	123711152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_11
# BB#180:
	leaq	123705744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_13
# BB#181:
	leaq	123959920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_15
# BB#182:
	leaq	123954512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_17
# BB#183:
	leaq	123949104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_19
# BB#184:
	leaq	123943696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_21
# BB#185:
	leaq	123548912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_23
# BB#186:
	leaq	123543504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_25
# BB#187:
	leaq	123538096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_27
# BB#188:
	leaq	123532688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_29
# BB#189:
	leaq	123570544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_31
# BB#190:
	leaq	123565136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_33
# BB#191:
	leaq	123559728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_35
# BB#192:
	leaq	123554320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_37
# BB#193:
	leaq	123592176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_39
# BB#194:
	leaq	123586768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_41
# BB#195:
	leaq	123581360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_43
# BB#196:
	leaq	123575952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_45
# BB#197:
	leaq	123613808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_47
# BB#198:
	leaq	123608400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_49
# BB#199:
	leaq	123602992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_51
# BB#200:
	leaq	123597584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_53
# BB#201:
	leaq	123635440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_55
# BB#202:
	leaq	123630032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_57
# BB#203:
	leaq	123624624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_59
# BB#204:
	leaq	123619216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_61
# BB#205:
	leaq	123657072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_63
# BB#206:
	leaq	123651664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_65
# BB#207:
	leaq	123646256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_67
# BB#208:
	leaq	123640848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_69
# BB#209:
	leaq	123678704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_71
# BB#210:
	leaq	123673296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_73
# BB#211:
	leaq	123667888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_75
# BB#212:
	leaq	123662480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_77
# BB#213:
	leaq	123700336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_79
# BB#214:
	leaq	123694928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_81
# BB#215:
	leaq	123689520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_83
# BB#216:
	leaq	123684112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_85
# BB#217:
	leaq	123743600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_87
# BB#218:
	leaq	123738192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_89
# BB#219:
	leaq	123732784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_91
# BB#220:
	leaq	123727376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_93
# BB#221:
	leaq	123765232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_95
# BB#222:
	leaq	123759824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_97
# BB#223:
	leaq	123754416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_99
# BB#224:
	leaq	123749008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_101
# BB#225:
	leaq	123786864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_103
# BB#226:
	leaq	123781456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_105
# BB#227:
	leaq	123776048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_107
# BB#228:
	leaq	123770640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_109
# BB#229:
	leaq	123808496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_111
# BB#230:
	leaq	123803088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_113
# BB#231:
	leaq	123797680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_115
# BB#232:
	leaq	123792272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_117
# BB#233:
	leaq	123830128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_119
# BB#234:
	leaq	123824720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_121
# BB#235:
	leaq	123819312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_123
# BB#236:
	leaq	123813904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_125
# BB#237:
	leaq	123851760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_127
# BB#238:
	leaq	123846352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_129
# BB#239:
	leaq	123840944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_131
# BB#240:
	leaq	123835536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_133
# BB#241:
	leaq	123873392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_135
# BB#242:
	leaq	123867984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_137
# BB#243:
	leaq	123862576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_139
# BB#244:
	leaq	123857168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_141
# BB#245:
	leaq	123895024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_143
# BB#246:
	leaq	123889616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_145
# BB#247:
	leaq	123884208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_147
# BB#248:
	leaq	123878800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_149
# BB#249:
	leaq	123916656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_151
# BB#250:
	leaq	123911248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_153
# BB#251:
	leaq	123905840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_155
# BB#252:
	leaq	123900432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_157
# BB#253:
	leaq	123938288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_159
# BB#254:
	leaq	123932880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_161
# BB#255:
	leaq	123927472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_163
# BB#256:
	leaq	123922064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_165
# BB#257:
	leaq	123981552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_167
# BB#258:
	leaq	123976144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_169
# BB#259:
	leaq	123970736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_171
# BB#260:
	leaq	123965328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_173
# BB#261:
	leaq	123992368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB29_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB29_175
# BB#262:
	addq	$123986960, %r14        # imm = 0x763E410
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB29_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB29_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_85;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_85
	.align	16, 0x90
_transaction_85:                        # @_transaction_85
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	505264(%r14), %r15
	cmpl	$0, 505296(%r14)
	je	.LBB30_2
# BB#1:
	leaq	505128(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB30_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB30_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB30_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_5
# BB#177:
	leaq	126522496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_7
# BB#178:
	leaq	126517088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_9
# BB#179:
	leaq	126511680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_11
# BB#180:
	leaq	126506272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_13
# BB#181:
	leaq	126760448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_15
# BB#182:
	leaq	126755040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_17
# BB#183:
	leaq	126749632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_19
# BB#184:
	leaq	126744224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_21
# BB#185:
	leaq	126349440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_23
# BB#186:
	leaq	126344032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_25
# BB#187:
	leaq	126338624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_27
# BB#188:
	leaq	126333216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_29
# BB#189:
	leaq	126371072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_31
# BB#190:
	leaq	126365664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_33
# BB#191:
	leaq	126360256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_35
# BB#192:
	leaq	126354848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_37
# BB#193:
	leaq	126392704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_39
# BB#194:
	leaq	126387296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_41
# BB#195:
	leaq	126381888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_43
# BB#196:
	leaq	126376480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_45
# BB#197:
	leaq	126414336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_47
# BB#198:
	leaq	126408928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_49
# BB#199:
	leaq	126403520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_51
# BB#200:
	leaq	126398112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_53
# BB#201:
	leaq	126435968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_55
# BB#202:
	leaq	126430560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_57
# BB#203:
	leaq	126425152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_59
# BB#204:
	leaq	126419744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_61
# BB#205:
	leaq	126457600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_63
# BB#206:
	leaq	126452192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_65
# BB#207:
	leaq	126446784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_67
# BB#208:
	leaq	126441376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_69
# BB#209:
	leaq	126479232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_71
# BB#210:
	leaq	126473824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_73
# BB#211:
	leaq	126468416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_75
# BB#212:
	leaq	126463008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_77
# BB#213:
	leaq	126500864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_79
# BB#214:
	leaq	126495456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_81
# BB#215:
	leaq	126490048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_83
# BB#216:
	leaq	126484640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_85
# BB#217:
	leaq	126544128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_87
# BB#218:
	leaq	126538720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_89
# BB#219:
	leaq	126533312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_91
# BB#220:
	leaq	126527904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_93
# BB#221:
	leaq	126565760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_95
# BB#222:
	leaq	126560352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_97
# BB#223:
	leaq	126554944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_99
# BB#224:
	leaq	126549536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_101
# BB#225:
	leaq	126587392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_103
# BB#226:
	leaq	126581984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_105
# BB#227:
	leaq	126576576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_107
# BB#228:
	leaq	126571168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_109
# BB#229:
	leaq	126609024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_111
# BB#230:
	leaq	126603616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_113
# BB#231:
	leaq	126598208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_115
# BB#232:
	leaq	126592800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_117
# BB#233:
	leaq	126630656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_119
# BB#234:
	leaq	126625248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_121
# BB#235:
	leaq	126619840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_123
# BB#236:
	leaq	126614432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_125
# BB#237:
	leaq	126652288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_127
# BB#238:
	leaq	126646880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_129
# BB#239:
	leaq	126641472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_131
# BB#240:
	leaq	126636064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_133
# BB#241:
	leaq	126673920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_135
# BB#242:
	leaq	126668512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_137
# BB#243:
	leaq	126663104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_139
# BB#244:
	leaq	126657696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_141
# BB#245:
	leaq	126695552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_143
# BB#246:
	leaq	126690144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_145
# BB#247:
	leaq	126684736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_147
# BB#248:
	leaq	126679328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_149
# BB#249:
	leaq	126717184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_151
# BB#250:
	leaq	126711776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_153
# BB#251:
	leaq	126706368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_155
# BB#252:
	leaq	126700960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_157
# BB#253:
	leaq	126738816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_159
# BB#254:
	leaq	126733408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_161
# BB#255:
	leaq	126728000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_163
# BB#256:
	leaq	126722592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_165
# BB#257:
	leaq	126782080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_167
# BB#258:
	leaq	126776672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_169
# BB#259:
	leaq	126771264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_171
# BB#260:
	leaq	126765856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_173
# BB#261:
	leaq	126792896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB30_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB30_175
# BB#262:
	addq	$126787488, %r14        # imm = 0x78E9FA0
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB30_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB30_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_86;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_86
	.align	16, 0x90
_transaction_86:                        # @_transaction_86
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	526784(%r14), %r15
	cmpl	$0, 526816(%r14)
	je	.LBB31_2
# BB#1:
	leaq	526648(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB31_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB31_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB31_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_5
# BB#177:
	leaq	129323024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_7
# BB#178:
	leaq	129317616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_9
# BB#179:
	leaq	129312208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_11
# BB#180:
	leaq	129306800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_13
# BB#181:
	leaq	129560976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_15
# BB#182:
	leaq	129555568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_17
# BB#183:
	leaq	129550160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_19
# BB#184:
	leaq	129544752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_21
# BB#185:
	leaq	129149968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_23
# BB#186:
	leaq	129144560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_25
# BB#187:
	leaq	129139152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_27
# BB#188:
	leaq	129133744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_29
# BB#189:
	leaq	129171600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_31
# BB#190:
	leaq	129166192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_33
# BB#191:
	leaq	129160784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_35
# BB#192:
	leaq	129155376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_37
# BB#193:
	leaq	129193232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_39
# BB#194:
	leaq	129187824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_41
# BB#195:
	leaq	129182416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_43
# BB#196:
	leaq	129177008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_45
# BB#197:
	leaq	129214864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_47
# BB#198:
	leaq	129209456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_49
# BB#199:
	leaq	129204048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_51
# BB#200:
	leaq	129198640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_53
# BB#201:
	leaq	129236496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_55
# BB#202:
	leaq	129231088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_57
# BB#203:
	leaq	129225680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_59
# BB#204:
	leaq	129220272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_61
# BB#205:
	leaq	129258128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_63
# BB#206:
	leaq	129252720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_65
# BB#207:
	leaq	129247312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_67
# BB#208:
	leaq	129241904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_69
# BB#209:
	leaq	129279760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_71
# BB#210:
	leaq	129274352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_73
# BB#211:
	leaq	129268944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_75
# BB#212:
	leaq	129263536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_77
# BB#213:
	leaq	129301392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_79
# BB#214:
	leaq	129295984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_81
# BB#215:
	leaq	129290576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_83
# BB#216:
	leaq	129285168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_85
# BB#217:
	leaq	129344656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_87
# BB#218:
	leaq	129339248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_89
# BB#219:
	leaq	129333840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_91
# BB#220:
	leaq	129328432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_93
# BB#221:
	leaq	129366288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_95
# BB#222:
	leaq	129360880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_97
# BB#223:
	leaq	129355472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_99
# BB#224:
	leaq	129350064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_101
# BB#225:
	leaq	129387920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_103
# BB#226:
	leaq	129382512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_105
# BB#227:
	leaq	129377104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_107
# BB#228:
	leaq	129371696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_109
# BB#229:
	leaq	129409552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_111
# BB#230:
	leaq	129404144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_113
# BB#231:
	leaq	129398736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_115
# BB#232:
	leaq	129393328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_117
# BB#233:
	leaq	129431184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_119
# BB#234:
	leaq	129425776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_121
# BB#235:
	leaq	129420368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_123
# BB#236:
	leaq	129414960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_125
# BB#237:
	leaq	129452816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_127
# BB#238:
	leaq	129447408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_129
# BB#239:
	leaq	129442000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_131
# BB#240:
	leaq	129436592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_133
# BB#241:
	leaq	129474448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_135
# BB#242:
	leaq	129469040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_137
# BB#243:
	leaq	129463632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_139
# BB#244:
	leaq	129458224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_141
# BB#245:
	leaq	129496080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_143
# BB#246:
	leaq	129490672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_145
# BB#247:
	leaq	129485264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_147
# BB#248:
	leaq	129479856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_149
# BB#249:
	leaq	129517712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_151
# BB#250:
	leaq	129512304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_153
# BB#251:
	leaq	129506896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_155
# BB#252:
	leaq	129501488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_157
# BB#253:
	leaq	129539344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_159
# BB#254:
	leaq	129533936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_161
# BB#255:
	leaq	129528528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_163
# BB#256:
	leaq	129523120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_165
# BB#257:
	leaq	129582608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_167
# BB#258:
	leaq	129577200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_169
# BB#259:
	leaq	129571792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_171
# BB#260:
	leaq	129566384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_173
# BB#261:
	leaq	129593424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB31_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB31_175
# BB#262:
	addq	$129588016, %r14        # imm = 0x7B95B30
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB31_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB31_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_87;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_87
	.align	16, 0x90
_transaction_87:                        # @_transaction_87
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	548304(%r14), %r15
	cmpl	$0, 548336(%r14)
	je	.LBB32_2
# BB#1:
	leaq	548168(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB32_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB32_176
# BB#3:
	testl	%esi, %esi
	jne	.LBB32_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_5
# BB#177:
	leaq	132123552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_7
# BB#178:
	leaq	132118144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_9
# BB#179:
	leaq	132112736(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_11
# BB#180:
	leaq	132107328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_13
# BB#181:
	leaq	132361504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_15
# BB#182:
	leaq	132356096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_17
# BB#183:
	leaq	132350688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_19
# BB#184:
	leaq	132345280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_21
# BB#185:
	leaq	131950496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_23
# BB#186:
	leaq	131945088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_25
# BB#187:
	leaq	131939680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_27
# BB#188:
	leaq	131934272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_29
# BB#189:
	leaq	131972128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_31
# BB#190:
	leaq	131966720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_33
# BB#191:
	leaq	131961312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_35
# BB#192:
	leaq	131955904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_37
# BB#193:
	leaq	131993760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_39
# BB#194:
	leaq	131988352(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_41
# BB#195:
	leaq	131982944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_43
# BB#196:
	leaq	131977536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_45
# BB#197:
	leaq	132015392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_47
# BB#198:
	leaq	132009984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_49
# BB#199:
	leaq	132004576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_51
# BB#200:
	leaq	131999168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_53
# BB#201:
	leaq	132037024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_55
# BB#202:
	leaq	132031616(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_57
# BB#203:
	leaq	132026208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_59
# BB#204:
	leaq	132020800(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_61
# BB#205:
	leaq	132058656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_63
# BB#206:
	leaq	132053248(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_65
# BB#207:
	leaq	132047840(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_67
# BB#208:
	leaq	132042432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_69
# BB#209:
	leaq	132080288(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_71
# BB#210:
	leaq	132074880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_73
# BB#211:
	leaq	132069472(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_75
# BB#212:
	leaq	132064064(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_77
# BB#213:
	leaq	132101920(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_79
# BB#214:
	leaq	132096512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_81
# BB#215:
	leaq	132091104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_83
# BB#216:
	leaq	132085696(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_85
# BB#217:
	leaq	132145184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_87
# BB#218:
	leaq	132139776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_89
# BB#219:
	leaq	132134368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_91
# BB#220:
	leaq	132128960(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_93
# BB#221:
	leaq	132166816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_95
# BB#222:
	leaq	132161408(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_97
# BB#223:
	leaq	132156000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_99
# BB#224:
	leaq	132150592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_99:
	cmpl	$48, %edi
	setb	%al
	cmpl	$48, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_101
# BB#100:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_101
# BB#225:
	leaq	132188448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_101:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_103
# BB#102:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_103
# BB#226:
	leaq	132183040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_103:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_105
# BB#104:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_105
# BB#227:
	leaq	132177632(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_105:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_107
# BB#106:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_107
# BB#228:
	leaq	132172224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_107:
	cmpl	$52, %edi
	setb	%al
	cmpl	$52, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_109
# BB#108:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_109
# BB#229:
	leaq	132210080(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_109:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_111
# BB#110:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_111
# BB#230:
	leaq	132204672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_111:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_113
# BB#112:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_113
# BB#231:
	leaq	132199264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_113:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_115
# BB#114:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_115
# BB#232:
	leaq	132193856(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_115:
	cmpl	$56, %edi
	setb	%al
	cmpl	$56, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_117
# BB#116:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_117
# BB#233:
	leaq	132231712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_117:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_119
# BB#118:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_119
# BB#234:
	leaq	132226304(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_119:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_121
# BB#120:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_121
# BB#235:
	leaq	132220896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_121:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_123
# BB#122:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_123
# BB#236:
	leaq	132215488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_123:
	cmpl	$60, %edi
	setb	%al
	cmpl	$60, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_125
# BB#124:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_125
# BB#237:
	leaq	132253344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_125:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_127
# BB#126:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_127
# BB#238:
	leaq	132247936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_127:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_129
# BB#128:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_129
# BB#239:
	leaq	132242528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_129:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_131
# BB#130:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_131
# BB#240:
	leaq	132237120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_131:
	cmpl	$64, %edi
	setb	%al
	cmpl	$64, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_133
# BB#132:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_133
# BB#241:
	leaq	132274976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_133:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_135
# BB#134:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_135
# BB#242:
	leaq	132269568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_135:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_137
# BB#136:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_137
# BB#243:
	leaq	132264160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_137:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_139
# BB#138:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_139
# BB#244:
	leaq	132258752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_139:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_141
# BB#140:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_141
# BB#245:
	leaq	132296608(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_141:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_143
# BB#142:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_143
# BB#246:
	leaq	132291200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_143:
	cmpl	$70, %edi
	setb	%al
	cmpl	$70, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_145
# BB#144:
	movl	$70, 40(%rsp)
	movl	$70, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_145
# BB#247:
	leaq	132285792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_145:
	cmpl	$71, %edi
	setb	%al
	cmpl	$71, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_147
# BB#146:
	movl	$71, 40(%rsp)
	movl	$71, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_147
# BB#248:
	leaq	132280384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_147:
	cmpl	$72, %edi
	setb	%al
	cmpl	$72, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_149
# BB#148:
	movl	$72, 40(%rsp)
	movl	$72, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_149
# BB#249:
	leaq	132318240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_149:
	cmpl	$73, %edi
	setb	%al
	cmpl	$73, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_151
# BB#150:
	movl	$73, 40(%rsp)
	movl	$73, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_151
# BB#250:
	leaq	132312832(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_151:
	cmpl	$74, %edi
	setb	%al
	cmpl	$74, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_153
# BB#152:
	movl	$74, 40(%rsp)
	movl	$74, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_153
# BB#251:
	leaq	132307424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_153:
	cmpl	$75, %edi
	setb	%al
	cmpl	$75, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_155
# BB#154:
	movl	$75, 40(%rsp)
	movl	$75, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_155
# BB#252:
	leaq	132302016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_155:
	cmpl	$76, %edi
	setb	%al
	cmpl	$76, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_157
# BB#156:
	movl	$76, 40(%rsp)
	movl	$76, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_157
# BB#253:
	leaq	132339872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_157:
	cmpl	$77, %edi
	setb	%al
	cmpl	$77, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_159
# BB#158:
	movl	$77, 40(%rsp)
	movl	$77, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_159
# BB#254:
	leaq	132334464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_159:
	cmpl	$78, %edi
	setb	%al
	cmpl	$78, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_161
# BB#160:
	movl	$78, 40(%rsp)
	movl	$78, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_161
# BB#255:
	leaq	132329056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_161:
	cmpl	$79, %edi
	setb	%al
	cmpl	$79, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_163
# BB#162:
	movl	$79, 40(%rsp)
	movl	$79, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_163
# BB#256:
	leaq	132323648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_163:
	cmpl	$80, %edi
	setb	%al
	cmpl	$80, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_165
# BB#164:
	movl	$80, 40(%rsp)
	movl	$80, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_165
# BB#257:
	leaq	132383136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_165:
	cmpl	$81, %edi
	setb	%al
	cmpl	$81, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_167
# BB#166:
	movl	$81, 40(%rsp)
	movl	$81, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_167
# BB#258:
	leaq	132377728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_167:
	cmpl	$82, %edi
	setb	%al
	cmpl	$82, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_169
# BB#168:
	movl	$82, 40(%rsp)
	movl	$82, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_169
# BB#259:
	leaq	132372320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_169:
	cmpl	$83, %edi
	setb	%al
	cmpl	$83, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_171
# BB#170:
	movl	$83, 40(%rsp)
	movl	$83, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_171
# BB#260:
	leaq	132366912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_171:
	cmpl	$84, %edi
	setb	%al
	cmpl	$84, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_173
# BB#172:
	movl	$84, 40(%rsp)
	movl	$84, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_173
# BB#261:
	leaq	132393952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_173:
	cmpl	$85, %edi
	setb	%al
	cmpl	$85, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB32_175
# BB#174:
	movl	$85, 40(%rsp)
	movl	$85, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB32_175
# BB#262:
	addq	$132388544, %r14        # imm = 0x7E416C0
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB32_175:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB32_176:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_9323;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_9323
	.align	16, 0x90
_transaction_9323:                      # @_transaction_9323
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	1748760(%rcx), %r14
	cmpl	$0, 1748776(%rcx)
	je	.LBB33_2
# BB#1:
	addq	$1748624, %rcx          # imm = 0x1AAE90
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB33_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB33_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB33_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_18503;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_18503
	.align	16, 0x90
_transaction_18503:                     # @_transaction_18503
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	2919640(%rcx), %r14
	cmpl	$0, 2919656(%rcx)
	je	.LBB34_2
# BB#1:
	addq	$2919504, %rcx          # imm = 0x2C8C50
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB34_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB34_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB34_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_27683;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_27683
	.align	16, 0x90
_transaction_27683:                     # @_transaction_27683
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	4090520(%rcx), %r14
	cmpl	$0, 4090536(%rcx)
	je	.LBB35_2
# BB#1:
	addq	$4090384, %rcx          # imm = 0x3E6A10
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB35_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB35_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB35_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_36863;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_36863
	.align	16, 0x90
_transaction_36863:                     # @_transaction_36863
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	5261400(%rcx), %r14
	cmpl	$0, 5261416(%rcx)
	je	.LBB36_2
# BB#1:
	addq	$5261264, %rcx          # imm = 0x5047D0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB36_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB36_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB36_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_46043;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_46043
	.align	16, 0x90
_transaction_46043:                     # @_transaction_46043
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	6432280(%rcx), %r14
	cmpl	$0, 6432296(%rcx)
	je	.LBB37_2
# BB#1:
	addq	$6432144, %rcx          # imm = 0x622590
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB37_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB37_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB37_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_55223;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_55223
	.align	16, 0x90
_transaction_55223:                     # @_transaction_55223
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	7603160(%rcx), %r14
	cmpl	$0, 7603176(%rcx)
	je	.LBB38_2
# BB#1:
	addq	$7603024, %rcx          # imm = 0x740350
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB38_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB38_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB38_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_64403;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_64403
	.align	16, 0x90
_transaction_64403:                     # @_transaction_64403
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	8774040(%rcx), %r14
	cmpl	$0, 8774056(%rcx)
	je	.LBB39_2
# BB#1:
	addq	$8773904, %rcx          # imm = 0x85E110
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB39_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB39_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB39_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_73583;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_73583
	.align	16, 0x90
_transaction_73583:                     # @_transaction_73583
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	9944920(%rcx), %r14
	cmpl	$0, 9944936(%rcx)
	je	.LBB40_2
# BB#1:
	addq	$9944784, %rcx          # imm = 0x97BED0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB40_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB40_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB40_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_82763;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_82763
	.align	16, 0x90
_transaction_82763:                     # @_transaction_82763
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	11115800(%rcx), %r14
	cmpl	$0, 11115816(%rcx)
	je	.LBB41_2
# BB#1:
	addq	$11115664, %rcx         # imm = 0xA99C90
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB41_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB41_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB41_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_101459;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_101459
	.align	16, 0x90
_transaction_101459:                    # @_transaction_101459
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	13664104(%rcx), %r14
	cmpl	$0, 13664120(%rcx)
	je	.LBB42_2
# BB#1:
	addq	$13663968, %rcx         # imm = 0xD07EE0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB42_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB42_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB42_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_110976;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_110976
	.align	16, 0x90
_transaction_110976:                    # @_transaction_110976
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	15041952(%rcx), %r14
	cmpl	$0, 15041968(%rcx)
	je	.LBB43_2
# BB#1:
	addq	$15041816, %rcx         # imm = 0xE58518
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB43_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB43_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB43_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_120493;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_120493
	.align	16, 0x90
_transaction_120493:                    # @_transaction_120493
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	16419800(%rcx), %r14
	cmpl	$0, 16419816(%rcx)
	je	.LBB44_2
# BB#1:
	addq	$16419664, %rcx         # imm = 0xFA8B50
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB44_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB44_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB44_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_130010;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_130010
	.align	16, 0x90
_transaction_130010:                    # @_transaction_130010
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	17797648(%rcx), %r14
	cmpl	$0, 17797664(%rcx)
	je	.LBB45_2
# BB#1:
	addq	$17797512, %rcx         # imm = 0x10F9188
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB45_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB45_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB45_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_139527;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_139527
	.align	16, 0x90
_transaction_139527:                    # @_transaction_139527
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	19175496(%rcx), %r14
	cmpl	$0, 19175512(%rcx)
	je	.LBB46_2
# BB#1:
	addq	$19175360, %rcx         # imm = 0x12497C0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB46_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB46_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB46_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_149044;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_149044
	.align	16, 0x90
_transaction_149044:                    # @_transaction_149044
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	20553344(%rcx), %r14
	cmpl	$0, 20553360(%rcx)
	je	.LBB47_2
# BB#1:
	addq	$20553208, %rcx         # imm = 0x1399DF8
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB47_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB47_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB47_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_158561;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_158561
	.align	16, 0x90
_transaction_158561:                    # @_transaction_158561
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	21931192(%rcx), %r14
	cmpl	$0, 21931208(%rcx)
	je	.LBB48_2
# BB#1:
	addq	$21931056, %rcx         # imm = 0x14EA430
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB48_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB48_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB48_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_168078;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_168078
	.align	16, 0x90
_transaction_168078:                    # @_transaction_168078
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	23309040(%rcx), %r14
	cmpl	$0, 23309056(%rcx)
	je	.LBB49_2
# BB#1:
	addq	$23308904, %rcx         # imm = 0x163AA68
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB49_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB49_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB49_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_177595;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_177595
	.align	16, 0x90
_transaction_177595:                    # @_transaction_177595
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	24686888(%rcx), %r14
	cmpl	$0, 24686904(%rcx)
	je	.LBB50_2
# BB#1:
	addq	$24686752, %rcx         # imm = 0x178B0A0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB50_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB50_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB50_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_187111;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_187111
	.align	16, 0x90
_transaction_187111:                    # @_transaction_187111
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	26064576(%rbx), %r15
	cmpl	$0, 26064592(%rbx)
	je	.LBB51_2
# BB#1:
	leaq	26064440(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB51_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB51_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$26064440, %rbx         # imm = 0x18DB638
	leaq	ng1(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB51_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_196241;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_196241
	.align	16, 0x90
_transaction_196241:                    # @_transaction_196241
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	27259832(%rbx), %r15
	cmpl	$0, 27259848(%rbx)
	je	.LBB52_2
# BB#1:
	leaq	27259696(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB52_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB52_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$27259696, %rbx         # imm = 0x19FF330
	leaq	ng2(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB52_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_196242;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_196242
	.align	16, 0x90
_transaction_196242:                    # @_transaction_196242
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	27260424(%rbx), %r15
	cmpl	$0, 27260440(%rbx)
	je	.LBB53_2
# BB#1:
	leaq	27260288(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB53_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB53_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	27260288(%rbx), %rcx
	addq	$48655296, %rbx         # imm = 0x2E66BC0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB53_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_205372;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_205372
	.align	16, 0x90
_transaction_205372:                    # @_transaction_205372
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	28455680(%rbx), %r15
	cmpl	$0, 28455696(%rbx)
	je	.LBB54_2
# BB#1:
	leaq	28455544(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB54_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB54_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$28455544, %rbx         # imm = 0x1B23278
	leaq	ng3(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB54_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_205373;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_205373
	.align	16, 0x90
_transaction_205373:                    # @_transaction_205373
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	28456272(%rbx), %r15
	cmpl	$0, 28456288(%rbx)
	je	.LBB55_2
# BB#1:
	leaq	28456136(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB55_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB55_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	28456136(%rbx), %rcx
	addq	$48682040, %rbx         # imm = 0x2E6D438
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB55_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_214503;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_214503
	.align	16, 0x90
_transaction_214503:                    # @_transaction_214503
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	29651528(%rbx), %r15
	cmpl	$0, 29651544(%rbx)
	je	.LBB56_2
# BB#1:
	leaq	29651392(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB56_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB56_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$29651392, %rbx         # imm = 0x1C471C0
	leaq	ng4(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB56_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_214504;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_214504
	.align	16, 0x90
_transaction_214504:                    # @_transaction_214504
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	29652120(%rbx), %r15
	cmpl	$0, 29652136(%rbx)
	je	.LBB57_2
# BB#1:
	leaq	29651984(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB57_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB57_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	29651984(%rbx), %rcx
	addq	$48708784, %rbx         # imm = 0x2E73CB0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB57_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_223634;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_223634
	.align	16, 0x90
_transaction_223634:                    # @_transaction_223634
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	30847376(%rbx), %r15
	cmpl	$0, 30847392(%rbx)
	je	.LBB58_2
# BB#1:
	leaq	30847240(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB58_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB58_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$30847240, %rbx         # imm = 0x1D6B108
	leaq	ng5(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB58_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_223635;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_223635
	.align	16, 0x90
_transaction_223635:                    # @_transaction_223635
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	30847968(%rbx), %r15
	cmpl	$0, 30847984(%rbx)
	je	.LBB59_2
# BB#1:
	leaq	30847832(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB59_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB59_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	30847832(%rbx), %rcx
	addq	$48735528, %rbx         # imm = 0x2E7A528
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB59_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_232765;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_232765
	.align	16, 0x90
_transaction_232765:                    # @_transaction_232765
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	32043224(%rbx), %r15
	cmpl	$0, 32043240(%rbx)
	je	.LBB60_2
# BB#1:
	leaq	32043088(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB60_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB60_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$32043088, %rbx         # imm = 0x1E8F050
	leaq	ng6(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB60_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_232766;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_232766
	.align	16, 0x90
_transaction_232766:                    # @_transaction_232766
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	32043816(%rbx), %r15
	cmpl	$0, 32043832(%rbx)
	je	.LBB61_2
# BB#1:
	leaq	32043680(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB61_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB61_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	32043680(%rbx), %rcx
	addq	$48762272, %rbx         # imm = 0x2E80DA0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB61_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_241896;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_241896
	.align	16, 0x90
_transaction_241896:                    # @_transaction_241896
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	33239072(%rbx), %r15
	cmpl	$0, 33239088(%rbx)
	je	.LBB62_2
# BB#1:
	leaq	33238936(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB62_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB62_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$33238936, %rbx         # imm = 0x1FB2F98
	leaq	ng7(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB62_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_241897;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_241897
	.align	16, 0x90
_transaction_241897:                    # @_transaction_241897
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	33239664(%rbx), %r15
	cmpl	$0, 33239680(%rbx)
	je	.LBB63_2
# BB#1:
	leaq	33239528(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB63_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB63_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	33239528(%rbx), %rcx
	addq	$48789016, %rbx         # imm = 0x2E87618
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB63_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_251027;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_251027
	.align	16, 0x90
_transaction_251027:                    # @_transaction_251027
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	34434920(%rbx), %r15
	cmpl	$0, 34434936(%rbx)
	je	.LBB64_2
# BB#1:
	leaq	34434784(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB64_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB64_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$34434784, %rbx         # imm = 0x20D6EE0
	leaq	ng8(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB64_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_251028;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_251028
	.align	16, 0x90
_transaction_251028:                    # @_transaction_251028
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	34435512(%rbx), %r15
	cmpl	$0, 34435528(%rbx)
	je	.LBB65_2
# BB#1:
	leaq	34435376(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB65_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB65_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	34435376(%rbx), %rcx
	addq	$48815760, %rbx         # imm = 0x2E8DE90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB65_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_260158;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_260158
	.align	16, 0x90
_transaction_260158:                    # @_transaction_260158
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	35630768(%rbx), %r15
	cmpl	$0, 35630784(%rbx)
	je	.LBB66_2
# BB#1:
	leaq	35630632(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB66_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB66_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$35630632, %rbx         # imm = 0x21FAE28
	leaq	ng9(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB66_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_260159;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_260159
	.align	16, 0x90
_transaction_260159:                    # @_transaction_260159
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	35631360(%rbx), %r15
	cmpl	$0, 35631376(%rbx)
	je	.LBB67_2
# BB#1:
	leaq	35631224(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB67_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB67_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	35631224(%rbx), %rcx
	addq	$48842504, %rbx         # imm = 0x2E94708
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB67_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_269289;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_269289
	.align	16, 0x90
_transaction_269289:                    # @_transaction_269289
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	36826616(%rbx), %r15
	cmpl	$0, 36826632(%rbx)
	je	.LBB68_2
# BB#1:
	leaq	36826480(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB68_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB68_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$36826480, %rbx         # imm = 0x231ED70
	leaq	ng10(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB68_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_269290;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_269290
	.align	16, 0x90
_transaction_269290:                    # @_transaction_269290
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	36827208(%rbx), %r15
	cmpl	$0, 36827224(%rbx)
	je	.LBB69_2
# BB#1:
	leaq	36827072(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB69_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB69_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	36827072(%rbx), %rcx
	addq	$48869248, %rbx         # imm = 0x2E9AF80
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB69_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_144;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_144
	.align	16, 0x90
_transaction_144:                       # @_transaction_144
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %rdi
	movl	48(%rbp), %r15d
	leaq	578304(%rdi), %r14
	cmpl	$0, 578320(%rdi)
	je	.LBB70_2
# BB#1:
	leaq	578168(%rdi), %rcx
	movl	%r15d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB70_2:
	movl	%r15d, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB70_40
# BB#3:
	testl	%esi, %esi
	jne	.LBB70_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_5
# BB#41:
	leaq	50555256(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50797760(%rdi), %rcx
	callq	*%r13
.LBB70_5:
	testl	%r15d, %r15d
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_7
# BB#42:
	leaq	50640608(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50869448(%rdi), %rcx
	callq	*%r13
.LBB70_7:
	cmpl	$2, %r15d
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_9
# BB#43:
	leaq	50648240(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50877256(%rdi), %rcx
	callq	*%r13
.LBB70_9:
	cmpl	$3, %r15d
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_11
# BB#44:
	leaq	50655872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50885064(%rdi), %rcx
	callq	*%r13
.LBB70_11:
	cmpl	$4, %r15d
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_13
# BB#45:
	leaq	50663504(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50892872(%rdi), %rcx
	callq	*%r13
.LBB70_13:
	cmpl	$5, %r15d
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_15
# BB#46:
	leaq	50671136(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50900680(%rdi), %rcx
	callq	*%r13
.LBB70_15:
	cmpl	$6, %r15d
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_17
# BB#47:
	leaq	50678768(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50908488(%rdi), %rcx
	callq	*%r13
.LBB70_17:
	cmpl	$7, %r15d
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_19
# BB#48:
	leaq	50686400(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50916296(%rdi), %rcx
	callq	*%r13
.LBB70_19:
	cmpl	$8, %r15d
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_21
# BB#49:
	leaq	50694032(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50924104(%rdi), %rcx
	callq	*%r13
.LBB70_21:
	cmpl	$9, %r15d
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_23
# BB#50:
	leaq	50701664(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50931912(%rdi), %rcx
	callq	*%r13
.LBB70_23:
	cmpl	$10, %r15d
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_25
# BB#51:
	leaq	50562888(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50805568(%rdi), %rcx
	callq	*%r13
.LBB70_25:
	cmpl	$11, %r15d
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_27
# BB#52:
	leaq	50570520(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50813376(%rdi), %rcx
	callq	*%r13
.LBB70_27:
	cmpl	$12, %r15d
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_29
# BB#53:
	leaq	50578152(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50821184(%rdi), %rcx
	callq	*%r13
.LBB70_29:
	cmpl	$13, %r15d
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_31
# BB#54:
	leaq	50585784(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50828992(%rdi), %rcx
	callq	*%r13
.LBB70_31:
	cmpl	$14, %r15d
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_33
# BB#55:
	leaq	50593416(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50836800(%rdi), %rcx
	callq	*%r13
.LBB70_33:
	cmpl	$15, %r15d
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_35
# BB#56:
	leaq	50601048(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50844608(%rdi), %rcx
	callq	*%r13
.LBB70_35:
	cmpl	$16, %r15d
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_37
# BB#57:
	leaq	50608680(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50852416(%rdi), %rcx
	callq	*%r13
.LBB70_37:
	cmpl	$17, %r15d
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB70_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB70_39
# BB#58:
	leaq	50622200(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r15
	callq	*%r15
	addq	$50865152, %rdi         # imm = 0x3082400
	movq	%rdi, %rcx
	callq	*%r15
.LBB70_39:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB70_40:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_145;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_145
	.align	16, 0x90
_transaction_145:                       # @_transaction_145
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %rdi
	movl	48(%rbp), %r15d
	leaq	582944(%rdi), %r14
	cmpl	$0, 582960(%rdi)
	je	.LBB71_2
# BB#1:
	leaq	582808(%rdi), %rcx
	movl	%r15d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB71_2:
	movl	%r15d, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB71_40
# BB#3:
	testl	%esi, %esi
	jne	.LBB71_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_5
# BB#41:
	leaq	50555760(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50801664(%rdi), %rcx
	callq	*%r13
.LBB71_5:
	testl	%r15d, %r15d
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_7
# BB#42:
	leaq	50641112(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50873352(%rdi), %rcx
	callq	*%r13
.LBB71_7:
	cmpl	$2, %r15d
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_9
# BB#43:
	leaq	50648744(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50881160(%rdi), %rcx
	callq	*%r13
.LBB71_9:
	cmpl	$3, %r15d
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_11
# BB#44:
	leaq	50656376(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50888968(%rdi), %rcx
	callq	*%r13
.LBB71_11:
	cmpl	$4, %r15d
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_13
# BB#45:
	leaq	50664008(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50896776(%rdi), %rcx
	callq	*%r13
.LBB71_13:
	cmpl	$5, %r15d
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_15
# BB#46:
	leaq	50671640(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50904584(%rdi), %rcx
	callq	*%r13
.LBB71_15:
	cmpl	$6, %r15d
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_17
# BB#47:
	leaq	50679272(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50912392(%rdi), %rcx
	callq	*%r13
.LBB71_17:
	cmpl	$7, %r15d
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_19
# BB#48:
	leaq	50686904(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50920200(%rdi), %rcx
	callq	*%r13
.LBB71_19:
	cmpl	$8, %r15d
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_21
# BB#49:
	leaq	50694536(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50928008(%rdi), %rcx
	callq	*%r13
.LBB71_21:
	cmpl	$9, %r15d
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_23
# BB#50:
	leaq	50702168(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50935816(%rdi), %rcx
	callq	*%r13
.LBB71_23:
	cmpl	$10, %r15d
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_25
# BB#51:
	leaq	50563392(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50809472(%rdi), %rcx
	callq	*%r13
.LBB71_25:
	cmpl	$11, %r15d
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_27
# BB#52:
	leaq	50571024(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50817280(%rdi), %rcx
	callq	*%r13
.LBB71_27:
	cmpl	$12, %r15d
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_29
# BB#53:
	leaq	50578656(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50825088(%rdi), %rcx
	callq	*%r13
.LBB71_29:
	cmpl	$13, %r15d
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_31
# BB#54:
	leaq	50586288(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50832896(%rdi), %rcx
	callq	*%r13
.LBB71_31:
	cmpl	$14, %r15d
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_33
# BB#55:
	leaq	50593920(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50840704(%rdi), %rcx
	callq	*%r13
.LBB71_33:
	cmpl	$15, %r15d
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_35
# BB#56:
	leaq	50601552(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50848512(%rdi), %rcx
	callq	*%r13
.LBB71_35:
	cmpl	$16, %r15d
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_37
# BB#57:
	leaq	50609184(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50861728(%rdi), %rcx
	callq	*%r13
.LBB71_37:
	cmpl	$17, %r15d
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB71_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%r15d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB71_39
# BB#58:
	leaq	50622872(%rdi), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r15
	callq	*%r15
	addq	$50865488, %rdi         # imm = 0x3082550
	movq	%rdi, %rcx
	callq	*%r15
.LBB71_39:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB71_40:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_146;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_146
	.align	16, 0x90
_transaction_146:                       # @_transaction_146
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	587584(%rbx), %r14
	cmpl	$0, 587600(%rbx)
	je	.LBB72_2
# BB#1:
	leaq	587448(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB72_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB72_4
# BB#3:
	leaq	50559408(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50802000, %rbx         # imm = 0x3072D50
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB72_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_147;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_147
	.align	16, 0x90
_transaction_147:                       # @_transaction_147
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	588008(%rbx), %r14
	cmpl	$0, 588024(%rbx)
	je	.LBB73_2
# BB#1:
	leaq	587872(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB73_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB73_4
# BB#3:
	leaq	50567040(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50809808, %rbx         # imm = 0x3074BD0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB73_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_148;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_148
	.align	16, 0x90
_transaction_148:                       # @_transaction_148
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	588432(%rbx), %r14
	cmpl	$0, 588448(%rbx)
	je	.LBB74_2
# BB#1:
	leaq	588296(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB74_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB74_4
# BB#3:
	leaq	50574672(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50817616, %rbx         # imm = 0x3076A50
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB74_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_149;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_149
	.align	16, 0x90
_transaction_149:                       # @_transaction_149
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	588856(%rbx), %r14
	cmpl	$0, 588872(%rbx)
	je	.LBB75_2
# BB#1:
	leaq	588720(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB75_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB75_4
# BB#3:
	leaq	50582304(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50825424, %rbx         # imm = 0x30788D0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB75_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_150;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_150
	.align	16, 0x90
_transaction_150:                       # @_transaction_150
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	589280(%rbx), %r14
	cmpl	$0, 589296(%rbx)
	je	.LBB76_2
# BB#1:
	leaq	589144(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB76_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB76_4
# BB#3:
	leaq	50589936(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50833232, %rbx         # imm = 0x307A750
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB76_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_151;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_151
	.align	16, 0x90
_transaction_151:                       # @_transaction_151
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	589704(%rbx), %r14
	cmpl	$0, 589720(%rbx)
	je	.LBB77_2
# BB#1:
	leaq	589568(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB77_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB77_4
# BB#3:
	leaq	50597568(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50841040, %rbx         # imm = 0x307C5D0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB77_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_152;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_152
	.align	16, 0x90
_transaction_152:                       # @_transaction_152
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	590128(%rbx), %r14
	cmpl	$0, 590144(%rbx)
	je	.LBB78_2
# BB#1:
	leaq	589992(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB78_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB78_4
# BB#3:
	leaq	50605200(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50848848, %rbx         # imm = 0x307E450
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB78_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_153;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_153
	.align	16, 0x90
_transaction_153:                       # @_transaction_153
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	590552(%rbx), %r14
	cmpl	$0, 590568(%rbx)
	je	.LBB79_2
# BB#1:
	leaq	590416(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB79_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB79_4
# BB#3:
	leaq	50618240(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50862064, %rbx         # imm = 0x30817F0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB79_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_154;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_154
	.align	16, 0x90
_transaction_154:                       # @_transaction_154
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	590976(%rbx), %r14
	cmpl	$0, 590992(%rbx)
	je	.LBB80_2
# BB#1:
	leaq	590840(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB80_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB80_4
# BB#3:
	leaq	50644760(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50873688, %rbx         # imm = 0x3084558
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB80_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_155;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_155
	.align	16, 0x90
_transaction_155:                       # @_transaction_155
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	591400(%rbx), %r14
	cmpl	$0, 591416(%rbx)
	je	.LBB81_2
# BB#1:
	leaq	591264(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB81_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB81_4
# BB#3:
	leaq	50652392(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50881496, %rbx         # imm = 0x30863D8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB81_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_156;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_156
	.align	16, 0x90
_transaction_156:                       # @_transaction_156
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	591824(%rbx), %r14
	cmpl	$0, 591840(%rbx)
	je	.LBB82_2
# BB#1:
	leaq	591688(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB82_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB82_4
# BB#3:
	leaq	50660024(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50889304, %rbx         # imm = 0x3088258
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB82_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_157;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_157
	.align	16, 0x90
_transaction_157:                       # @_transaction_157
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	592248(%rbx), %r14
	cmpl	$0, 592264(%rbx)
	je	.LBB83_2
# BB#1:
	leaq	592112(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB83_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB83_4
# BB#3:
	leaq	50667656(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50897112, %rbx         # imm = 0x308A0D8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB83_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_158;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_158
	.align	16, 0x90
_transaction_158:                       # @_transaction_158
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	592672(%rbx), %r14
	cmpl	$0, 592688(%rbx)
	je	.LBB84_2
# BB#1:
	leaq	592536(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB84_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB84_4
# BB#3:
	leaq	50675288(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50904920, %rbx         # imm = 0x308BF58
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB84_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_159;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_159
	.align	16, 0x90
_transaction_159:                       # @_transaction_159
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	593096(%rbx), %r14
	cmpl	$0, 593112(%rbx)
	je	.LBB85_2
# BB#1:
	leaq	592960(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB85_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB85_4
# BB#3:
	leaq	50682920(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50912728, %rbx         # imm = 0x308DDD8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB85_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_160;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_160
	.align	16, 0x90
_transaction_160:                       # @_transaction_160
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	593520(%rbx), %r14
	cmpl	$0, 593536(%rbx)
	je	.LBB86_2
# BB#1:
	leaq	593384(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB86_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB86_4
# BB#3:
	leaq	50690552(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50920536, %rbx         # imm = 0x308FC58
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB86_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_161;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_161
	.align	16, 0x90
_transaction_161:                       # @_transaction_161
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	593944(%rbx), %r14
	cmpl	$0, 593960(%rbx)
	je	.LBB87_2
# BB#1:
	leaq	593808(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB87_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB87_4
# BB#3:
	leaq	50698184(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50928344, %rbx         # imm = 0x3091AD8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB87_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_162;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_162
	.align	16, 0x90
_transaction_162:                       # @_transaction_162
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	594368(%rbx), %r14
	cmpl	$0, 594384(%rbx)
	je	.LBB88_2
# BB#1:
	leaq	594232(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB88_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB88_4
# BB#3:
	leaq	50705816(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50936152, %rbx         # imm = 0x3093958
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB88_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_163;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_163
	.align	16, 0x90
_transaction_163:                       # @_transaction_163
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	594792(%r14), %r15
	cmpl	$0, 594824(%r14)
	je	.LBB89_2
# BB#1:
	leaq	594656(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB89_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB89_42
# BB#3:
	cmpl	$3, %esi
	ja	.LBB89_5
# BB#4:
	movl	$3, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_5
# BB#43:
	leaq	49835016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	testl	%esi, %esi
	jne	.LBB89_45
# BB#44:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_45
# BB#52:
	leaq	49454520(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_45:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_47
# BB#46:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_47
# BB#53:
	leaq	49449112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_47:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_49
# BB#48:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_49
# BB#54:
	leaq	49443704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_49:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_5
# BB#50:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_5
# BB#51:
	leaq	49438296(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_5:
	cmpl	$4, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_7
# BB#6:
	movl	$7, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_7
# BB#55:
	cmpl	$4, %edi
	setb	%bl
	leaq	50029144(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$4, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_57
# BB#56:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_57
# BB#64:
	leaq	49638392(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_57:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_59
# BB#58:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_59
# BB#65:
	leaq	49632984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_59:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_61
# BB#60:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_61
# BB#66:
	leaq	49627576(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_61:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_7
# BB#62:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_7
# BB#63:
	leaq	49622168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_7:
	cmpl	$8, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_9
# BB#8:
	movl	$11, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_9
# BB#67:
	cmpl	$8, %edi
	setb	%bl
	leaq	49658656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$8, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_69
# BB#68:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_69
# BB#76:
	leaq	49281464(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_69:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_71
# BB#70:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_71
# BB#77:
	leaq	49276056(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_71:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_73
# BB#72:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_73
# BB#78:
	leaq	49270648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_73:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_9
# BB#74:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_9
# BB#75:
	leaq	49265240(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_9:
	cmpl	$12, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_11
# BB#10:
	movl	$15, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_11
# BB#79:
	cmpl	$12, %edi
	setb	%bl
	leaq	49681312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$12, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_81
# BB#80:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_81
# BB#88:
	leaq	49303096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_81:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_83
# BB#82:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_83
# BB#89:
	leaq	49297688(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_83:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_85
# BB#84:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_85
# BB#90:
	leaq	49292280(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_85:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_11
# BB#86:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_11
# BB#87:
	leaq	49286872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_11:
	cmpl	$16, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_13
# BB#12:
	movl	$19, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_13
# BB#91:
	cmpl	$16, %edi
	setb	%bl
	leaq	49703968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$16, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_93
# BB#92:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_93
# BB#100:
	leaq	49324728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_93:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_95
# BB#94:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_95
# BB#101:
	leaq	49319320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_95:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_97
# BB#96:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_97
# BB#102:
	leaq	49313912(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_97:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_13
# BB#98:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_13
# BB#99:
	leaq	49308504(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_13:
	cmpl	$20, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_15
# BB#14:
	movl	$23, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_15
# BB#103:
	cmpl	$20, %edi
	setb	%bl
	leaq	49731512(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$20, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_105
# BB#104:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_105
# BB#112:
	leaq	49346360(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_105:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_107
# BB#106:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_107
# BB#113:
	leaq	49340952(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_107:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_109
# BB#108:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_109
# BB#114:
	leaq	49335544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_109:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_15
# BB#110:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_15
# BB#111:
	leaq	49330136(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_15:
	cmpl	$24, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_17
# BB#16:
	movl	$27, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_17
# BB#115:
	cmpl	$24, %edi
	setb	%bl
	leaq	49754168(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$24, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_117
# BB#116:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_117
# BB#124:
	leaq	49367992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_117:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_119
# BB#118:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_119
# BB#125:
	leaq	49362584(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_119:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_121
# BB#120:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_121
# BB#126:
	leaq	49357176(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_121:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_17
# BB#122:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_17
# BB#123:
	leaq	49351768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_17:
	cmpl	$28, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_19
# BB#18:
	movl	$31, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_19
# BB#127:
	cmpl	$28, %edi
	setb	%bl
	leaq	49781712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$28, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_129
# BB#128:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_129
# BB#136:
	leaq	49389624(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_129:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_131
# BB#130:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_131
# BB#137:
	leaq	49384216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_131:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_133
# BB#132:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_133
# BB#138:
	leaq	49378808(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_133:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_19
# BB#134:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_19
# BB#135:
	leaq	49373400(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_19:
	cmpl	$32, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_21
# BB#20:
	movl	$35, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_21
# BB#139:
	cmpl	$32, %edi
	setb	%bl
	leaq	49804368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$32, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_141
# BB#140:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_141
# BB#148:
	leaq	49411256(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_141:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_143
# BB#142:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_143
# BB#149:
	leaq	49405848(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_143:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_145
# BB#144:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_145
# BB#150:
	leaq	49400440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_145:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_21
# BB#146:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_21
# BB#147:
	leaq	49395032(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_21:
	cmpl	$36, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_23
# BB#22:
	movl	$39, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_23
# BB#151:
	cmpl	$36, %edi
	setb	%bl
	leaq	49827024(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$36, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_153
# BB#152:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_153
# BB#160:
	leaq	49432888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_153:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_155
# BB#154:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_155
# BB#161:
	leaq	49427480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_155:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_157
# BB#156:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_157
# BB#162:
	leaq	49422072(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_157:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_23
# BB#158:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_23
# BB#159:
	leaq	49416664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_23:
	cmpl	$40, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_25
# BB#24:
	movl	$43, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_25
# BB#163:
	cmpl	$40, %edi
	setb	%bl
	leaq	49857672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$40, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_165
# BB#164:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_165
# BB#172:
	leaq	49476152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_165:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_167
# BB#166:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_167
# BB#173:
	leaq	49470744(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_167:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_169
# BB#168:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_169
# BB#174:
	leaq	49465336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_169:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_25
# BB#170:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_25
# BB#171:
	leaq	49459928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_25:
	cmpl	$44, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_27
# BB#26:
	movl	$47, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_27
# BB#175:
	cmpl	$44, %edi
	setb	%bl
	leaq	49880328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$44, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_177
# BB#176:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_177
# BB#184:
	leaq	49497784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_177:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_179
# BB#178:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_179
# BB#185:
	leaq	49492376(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_179:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_181
# BB#180:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_181
# BB#186:
	leaq	49486968(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_181:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_27
# BB#182:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_27
# BB#183:
	leaq	49481560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_27:
	cmpl	$48, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_29
# BB#28:
	movl	$51, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_29
# BB#187:
	cmpl	$48, %edi
	setb	%bl
	leaq	49907872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$48, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_189
# BB#188:
	movl	$48, 40(%rsp)
	movl	$48, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_189
# BB#196:
	leaq	49519416(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_189:
	cmpl	$49, %edi
	setb	%al
	cmpl	$49, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_191
# BB#190:
	movl	$49, 40(%rsp)
	movl	$49, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_191
# BB#197:
	leaq	49514008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_191:
	cmpl	$50, %edi
	setb	%al
	cmpl	$50, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_193
# BB#192:
	movl	$50, 40(%rsp)
	movl	$50, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_193
# BB#198:
	leaq	49508600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_193:
	cmpl	$51, %edi
	setb	%al
	cmpl	$51, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_29
# BB#194:
	movl	$51, 40(%rsp)
	movl	$51, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_29
# BB#195:
	leaq	49503192(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_29:
	cmpl	$52, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_31
# BB#30:
	movl	$55, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_31
# BB#199:
	cmpl	$52, %edi
	setb	%bl
	leaq	49930528(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$52, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_201
# BB#200:
	movl	$52, 40(%rsp)
	movl	$52, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_201
# BB#208:
	leaq	49541048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_201:
	cmpl	$53, %edi
	setb	%al
	cmpl	$53, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_203
# BB#202:
	movl	$53, 40(%rsp)
	movl	$53, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_203
# BB#209:
	leaq	49535640(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_203:
	cmpl	$54, %edi
	setb	%al
	cmpl	$54, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_205
# BB#204:
	movl	$54, 40(%rsp)
	movl	$54, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_205
# BB#210:
	leaq	49530232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_205:
	cmpl	$55, %edi
	setb	%al
	cmpl	$55, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_31
# BB#206:
	movl	$55, 40(%rsp)
	movl	$55, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_31
# BB#207:
	leaq	49524824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_31:
	cmpl	$56, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_33
# BB#32:
	movl	$59, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_33
# BB#211:
	cmpl	$56, %edi
	setb	%bl
	leaq	49953184(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$56, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_213
# BB#212:
	movl	$56, 40(%rsp)
	movl	$56, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_213
# BB#220:
	leaq	49562680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_213:
	cmpl	$57, %edi
	setb	%al
	cmpl	$57, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_215
# BB#214:
	movl	$57, 40(%rsp)
	movl	$57, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_215
# BB#221:
	leaq	49557272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_215:
	cmpl	$58, %edi
	setb	%al
	cmpl	$58, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_217
# BB#216:
	movl	$58, 40(%rsp)
	movl	$58, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_217
# BB#222:
	leaq	49551864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_217:
	cmpl	$59, %edi
	setb	%al
	cmpl	$59, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_33
# BB#218:
	movl	$59, 40(%rsp)
	movl	$59, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_33
# BB#219:
	leaq	49546456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_33:
	cmpl	$60, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_35
# BB#34:
	movl	$63, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_35
# BB#223:
	cmpl	$60, %edi
	setb	%bl
	leaq	49980728(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$60, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_225
# BB#224:
	movl	$60, 40(%rsp)
	movl	$60, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_225
# BB#232:
	leaq	49584312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_225:
	cmpl	$61, %edi
	setb	%al
	cmpl	$61, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_227
# BB#226:
	movl	$61, 40(%rsp)
	movl	$61, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_227
# BB#233:
	leaq	49578904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_227:
	cmpl	$62, %edi
	setb	%al
	cmpl	$62, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_229
# BB#228:
	movl	$62, 40(%rsp)
	movl	$62, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_229
# BB#234:
	leaq	49573496(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_229:
	cmpl	$63, %edi
	setb	%al
	cmpl	$63, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_35
# BB#230:
	movl	$63, 40(%rsp)
	movl	$63, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_35
# BB#231:
	leaq	49568088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_35:
	cmpl	$64, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_37
# BB#36:
	movl	$67, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_37
# BB#235:
	cmpl	$64, %edi
	setb	%bl
	leaq	50003384(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	cmpl	$64, %esi
	seta	%al
	orb	%bl, %al
	jne	.LBB89_237
# BB#236:
	movl	$64, 40(%rsp)
	movl	$64, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_237
# BB#244:
	leaq	49605944(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_237:
	cmpl	$65, %edi
	setb	%al
	cmpl	$65, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_239
# BB#238:
	movl	$65, 40(%rsp)
	movl	$65, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_239
# BB#245:
	leaq	49600536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_239:
	cmpl	$66, %edi
	setb	%al
	cmpl	$66, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_241
# BB#240:
	movl	$66, 40(%rsp)
	movl	$66, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_241
# BB#246:
	leaq	49595128(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_241:
	cmpl	$67, %edi
	setb	%al
	cmpl	$67, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_37
# BB#242:
	movl	$67, 40(%rsp)
	movl	$67, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_37
# BB#243:
	leaq	49589720(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_37:
	cmpl	$68, %edi
	setb	%al
	cmpl	$68, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_39
# BB#38:
	movl	$68, 40(%rsp)
	movl	$68, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_39
# BB#247:
	leaq	49616760(%r14), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %rbx
	callq	*%rbx
	leaq	49007224(%r14), %rcx
	callq	*%rbx
.LBB89_39:
	cmpl	$69, %edi
	setb	%al
	cmpl	$69, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB89_41
# BB#40:
	movl	$69, 40(%rsp)
	movl	$69, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB89_41
# BB#248:
	addq	$49611352, %r14         # imm = 0x2F50258
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB89_41:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB89_42:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_164;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_164
	.align	16, 0x90
_transaction_164:                       # @_transaction_164
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	612344(%rbx), %r15
	cmpl	$0, 612360(%rbx)
	je	.LBB90_2
# BB#1:
	leaq	612208(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB90_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB90_26
# BB#3:
	testl	%esi, %esi
	jne	.LBB90_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_5
# BB#27:
	leaq	ng11(%rip), %rcx
	movl	$23, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
.LBB90_5:
	testl	%r14d, %r14d
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_7
# BB#28:
	leaq	49057216(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50612312(%rbx), %rcx
	callq	*%r13
	leaq	50622368(%rbx), %rcx
	callq	*%r13
	leaq	50625792(%rbx), %rcx
	callq	*%r13
	leaq	50855824(%rbx), %rcx
	callq	*%r13
	leaq	51027728(%rbx), %rcx
	callq	*%r13
.LBB90_7:
	cmpl	$2, %r14d
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_9
# BB#29:
	leaq	ng12(%rip), %rcx
	movl	$20, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
.LBB90_9:
	cmpl	$3, %r14d
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_11
# BB#30:
	leaq	ng13(%rip), %rcx
	movl	$22, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
.LBB90_11:
	cmpl	$4, %r14d
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_13
# BB#31:
	leaq	ng14(%rip), %rcx
	movl	$22, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
.LBB90_13:
	cmpl	$5, %r14d
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_15
# BB#32:
	leaq	ng15(%rip), %rcx
	movl	$38, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
.LBB90_15:
	cmpl	$6, %r14d
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_17
# BB#33:
	leaq	49081656(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r13
	callq	*%r13
	leaq	50635240(%rbx), %rcx
	callq	*%r13
	leaq	50638120(%rbx), %rcx
	callq	*%r13
	leaq	51027224(%rbx), %rcx
	callq	*%r13
.LBB90_17:
	cmpl	$7, %r14d
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_19
# BB#34:
	leaq	49086544(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB90_19:
	cmpl	$8, %r14d
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_21
# BB#35:
	leaq	ng16(%rip), %rcx
	movl	$71, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
.LBB90_21:
	cmpl	$9, %r14d
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_23
# BB#36:
	leaq	49042552(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB90_23:
	cmpl	$10, %r14d
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB90_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB90_25
# BB#37:
	leaq	49047440(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB90_25:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	612208(%rbx), %rcx
	addq	$47742696, %rbx         # imm = 0x2D87EE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB90_26:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_165;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_165
	.align	16, 0x90
_transaction_165:                       # @_transaction_165
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	615248(%rbx), %r15
	cmpl	$0, 615264(%rbx)
	je	.LBB91_2
# BB#1:
	leaq	615112(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB91_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB91_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	615112(%rbx), %rcx
	addq	$47723920, %rbx         # imm = 0x2D83590
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB91_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_166;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_166
	.align	16, 0x90
_transaction_166:                       # @_transaction_166
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	615408(%rbx), %r15
	cmpl	$0, 615424(%rbx)
	je	.LBB92_2
# BB#1:
	leaq	615272(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB92_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB92_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	615272(%rbx), %rcx
	addq	$47723920, %rbx         # imm = 0x2D83590
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB92_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_167;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_167
	.align	16, 0x90
_transaction_167:                       # @_transaction_167
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	615568(%rbx), %r15
	cmpl	$0, 615584(%rbx)
	je	.LBB93_2
# BB#1:
	leaq	615432(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB93_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB93_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	615432(%rbx), %rcx
	addq	$47723920, %rbx         # imm = 0x2D83590
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB93_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_168;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_168
	.align	16, 0x90
_transaction_168:                       # @_transaction_168
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	615728(%rbx), %r15
	cmpl	$0, 615744(%rbx)
	je	.LBB94_2
# BB#1:
	leaq	615592(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB94_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB94_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	615592(%rbx), %rcx
	addq	$47723920, %rbx         # imm = 0x2D83590
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB94_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_169;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_169
	.align	16, 0x90
_transaction_169:                       # @_transaction_169
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	615888(%rbx), %r15
	cmpl	$0, 615904(%rbx)
	je	.LBB95_2
# BB#1:
	leaq	615752(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB95_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB95_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	615752(%rbx), %rcx
	addq	$47724976, %rbx         # imm = 0x2D839B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB95_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_170;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_170
	.align	16, 0x90
_transaction_170:                       # @_transaction_170
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	616048(%rbx), %r15
	cmpl	$0, 616064(%rbx)
	je	.LBB96_2
# BB#1:
	leaq	615912(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB96_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB96_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	615912(%rbx), %rcx
	addq	$47724976, %rbx         # imm = 0x2D839B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB96_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_171;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_171
	.align	16, 0x90
_transaction_171:                       # @_transaction_171
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	616208(%rbx), %r15
	cmpl	$0, 616224(%rbx)
	je	.LBB97_2
# BB#1:
	leaq	616072(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB97_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB97_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	616072(%rbx), %rcx
	addq	$47724976, %rbx         # imm = 0x2D839B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB97_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_172;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_172
	.align	16, 0x90
_transaction_172:                       # @_transaction_172
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	616368(%rbx), %r15
	cmpl	$0, 616384(%rbx)
	je	.LBB98_2
# BB#1:
	leaq	616232(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB98_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB98_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	616232(%rbx), %rcx
	addq	$47724976, %rbx         # imm = 0x2D839B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB98_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_173;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_173
	.align	16, 0x90
_transaction_173:                       # @_transaction_173
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	616528(%rbx), %r15
	cmpl	$0, 616544(%rbx)
	je	.LBB99_2
# BB#1:
	leaq	616392(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB99_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB99_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	616392(%rbx), %rcx
	addq	$47726032, %rbx         # imm = 0x2D83DD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB99_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_174;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_174
	.align	16, 0x90
_transaction_174:                       # @_transaction_174
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	616688(%rbx), %r15
	cmpl	$0, 616704(%rbx)
	je	.LBB100_2
# BB#1:
	leaq	616552(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB100_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB100_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	616552(%rbx), %rcx
	addq	$47726032, %rbx         # imm = 0x2D83DD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB100_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_175;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_175
	.align	16, 0x90
_transaction_175:                       # @_transaction_175
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	616848(%rbx), %r15
	cmpl	$0, 616864(%rbx)
	je	.LBB101_2
# BB#1:
	leaq	616712(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB101_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB101_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	616712(%rbx), %rcx
	addq	$47726032, %rbx         # imm = 0x2D83DD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB101_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_176;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_176
	.align	16, 0x90
_transaction_176:                       # @_transaction_176
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617008(%rbx), %r15
	cmpl	$0, 617024(%rbx)
	je	.LBB102_2
# BB#1:
	leaq	616872(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB102_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB102_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	616872(%rbx), %rcx
	addq	$47726032, %rbx         # imm = 0x2D83DD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB102_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_177;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_177
	.align	16, 0x90
_transaction_177:                       # @_transaction_177
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617168(%rbx), %r15
	cmpl	$0, 617184(%rbx)
	je	.LBB103_2
# BB#1:
	leaq	617032(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB103_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB103_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617032(%rbx), %rcx
	addq	$47727088, %rbx         # imm = 0x2D841F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB103_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_178;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_178
	.align	16, 0x90
_transaction_178:                       # @_transaction_178
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617328(%rbx), %r15
	cmpl	$0, 617344(%rbx)
	je	.LBB104_2
# BB#1:
	leaq	617192(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB104_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB104_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617192(%rbx), %rcx
	addq	$47727088, %rbx         # imm = 0x2D841F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB104_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_179;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_179
	.align	16, 0x90
_transaction_179:                       # @_transaction_179
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617488(%rbx), %r15
	cmpl	$0, 617504(%rbx)
	je	.LBB105_2
# BB#1:
	leaq	617352(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB105_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB105_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617352(%rbx), %rcx
	addq	$47727088, %rbx         # imm = 0x2D841F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB105_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_180;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_180
	.align	16, 0x90
_transaction_180:                       # @_transaction_180
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617648(%rbx), %r15
	cmpl	$0, 617664(%rbx)
	je	.LBB106_2
# BB#1:
	leaq	617512(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB106_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB106_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617512(%rbx), %rcx
	addq	$47727088, %rbx         # imm = 0x2D841F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB106_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_181;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_181
	.align	16, 0x90
_transaction_181:                       # @_transaction_181
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617808(%rbx), %r15
	cmpl	$0, 617824(%rbx)
	je	.LBB107_2
# BB#1:
	leaq	617672(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB107_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB107_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617672(%rbx), %rcx
	addq	$47728144, %rbx         # imm = 0x2D84610
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB107_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_182;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_182
	.align	16, 0x90
_transaction_182:                       # @_transaction_182
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	617968(%rbx), %r15
	cmpl	$0, 617984(%rbx)
	je	.LBB108_2
# BB#1:
	leaq	617832(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB108_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB108_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617832(%rbx), %rcx
	addq	$47728144, %rbx         # imm = 0x2D84610
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB108_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_183;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_183
	.align	16, 0x90
_transaction_183:                       # @_transaction_183
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	618128(%rbx), %r15
	cmpl	$0, 618144(%rbx)
	je	.LBB109_2
# BB#1:
	leaq	617992(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB109_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB109_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	617992(%rbx), %rcx
	addq	$47728144, %rbx         # imm = 0x2D84610
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB109_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_184;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_184
	.align	16, 0x90
_transaction_184:                       # @_transaction_184
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	618288(%rbx), %r15
	cmpl	$0, 618304(%rbx)
	je	.LBB110_2
# BB#1:
	leaq	618152(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB110_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB110_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	618152(%rbx), %rcx
	addq	$47728144, %rbx         # imm = 0x2D84610
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB110_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_185;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_185
	.align	16, 0x90
_transaction_185:                       # @_transaction_185
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	618448(%rbx), %r15
	cmpl	$0, 618464(%rbx)
	je	.LBB111_2
# BB#1:
	leaq	618312(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB111_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB111_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	618312(%rbx), %rcx
	addq	$47729200, %rbx         # imm = 0x2D84A30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB111_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_186;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_186
	.align	16, 0x90
_transaction_186:                       # @_transaction_186
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	618608(%rbx), %r15
	cmpl	$0, 618624(%rbx)
	je	.LBB112_2
# BB#1:
	leaq	618472(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB112_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB112_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	618472(%rbx), %rcx
	addq	$47729200, %rbx         # imm = 0x2D84A30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB112_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_187;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_187
	.align	16, 0x90
_transaction_187:                       # @_transaction_187
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	618768(%rbx), %r15
	cmpl	$0, 618784(%rbx)
	je	.LBB113_2
# BB#1:
	leaq	618632(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB113_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB113_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	618632(%rbx), %rcx
	addq	$47729200, %rbx         # imm = 0x2D84A30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB113_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_188;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_188
	.align	16, 0x90
_transaction_188:                       # @_transaction_188
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	618928(%rbx), %r15
	cmpl	$0, 618944(%rbx)
	je	.LBB114_2
# BB#1:
	leaq	618792(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB114_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB114_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	618792(%rbx), %rcx
	addq	$47729200, %rbx         # imm = 0x2D84A30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB114_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_189;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_189
	.align	16, 0x90
_transaction_189:                       # @_transaction_189
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	619088(%rbx), %r15
	cmpl	$0, 619104(%rbx)
	je	.LBB115_2
# BB#1:
	leaq	618952(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB115_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB115_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	618952(%rbx), %rcx
	addq	$47730256, %rbx         # imm = 0x2D84E50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB115_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_190;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_190
	.align	16, 0x90
_transaction_190:                       # @_transaction_190
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	619248(%rbx), %r15
	cmpl	$0, 619264(%rbx)
	je	.LBB116_2
# BB#1:
	leaq	619112(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB116_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB116_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	619112(%rbx), %rcx
	addq	$47730256, %rbx         # imm = 0x2D84E50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB116_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_191;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_191
	.align	16, 0x90
_transaction_191:                       # @_transaction_191
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	619408(%rbx), %r15
	cmpl	$0, 619424(%rbx)
	je	.LBB117_2
# BB#1:
	leaq	619272(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB117_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB117_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	619272(%rbx), %rcx
	addq	$47730256, %rbx         # imm = 0x2D84E50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB117_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_192;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_192
	.align	16, 0x90
_transaction_192:                       # @_transaction_192
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	619568(%rbx), %r15
	cmpl	$0, 619584(%rbx)
	je	.LBB118_2
# BB#1:
	leaq	619432(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB118_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB118_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	619432(%rbx), %rcx
	addq	$47730256, %rbx         # imm = 0x2D84E50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB118_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_193;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_193
	.align	16, 0x90
_transaction_193:                       # @_transaction_193
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	619728(%rbx), %r15
	cmpl	$0, 619744(%rbx)
	je	.LBB119_2
# BB#1:
	leaq	619592(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB119_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB119_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	619592(%rbx), %rcx
	addq	$47731312, %rbx         # imm = 0x2D85270
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB119_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_194;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_194
	.align	16, 0x90
_transaction_194:                       # @_transaction_194
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	619888(%rbx), %r15
	cmpl	$0, 619904(%rbx)
	je	.LBB120_2
# BB#1:
	leaq	619752(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB120_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB120_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	619752(%rbx), %rcx
	addq	$47731312, %rbx         # imm = 0x2D85270
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB120_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_195;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_195
	.align	16, 0x90
_transaction_195:                       # @_transaction_195
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	620048(%rbx), %r15
	cmpl	$0, 620064(%rbx)
	je	.LBB121_2
# BB#1:
	leaq	619912(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB121_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB121_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	619912(%rbx), %rcx
	addq	$47731312, %rbx         # imm = 0x2D85270
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB121_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_196;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_196
	.align	16, 0x90
_transaction_196:                       # @_transaction_196
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	620208(%rbx), %r15
	cmpl	$0, 620224(%rbx)
	je	.LBB122_2
# BB#1:
	leaq	620072(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB122_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB122_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	620072(%rbx), %rcx
	addq	$47731312, %rbx         # imm = 0x2D85270
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB122_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_197;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_197
	.align	16, 0x90
_transaction_197:                       # @_transaction_197
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	620368(%rbx), %r15
	cmpl	$0, 620384(%rbx)
	je	.LBB123_2
# BB#1:
	leaq	620232(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB123_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB123_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	620232(%rbx), %rcx
	addq	$47732368, %rbx         # imm = 0x2D85690
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB123_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_198;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_198
	.align	16, 0x90
_transaction_198:                       # @_transaction_198
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	620528(%rbx), %r15
	cmpl	$0, 620544(%rbx)
	je	.LBB124_2
# BB#1:
	leaq	620392(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB124_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB124_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	620392(%rbx), %rcx
	addq	$47732368, %rbx         # imm = 0x2D85690
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB124_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_199;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_199
	.align	16, 0x90
_transaction_199:                       # @_transaction_199
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	620688(%rbx), %r15
	cmpl	$0, 620704(%rbx)
	je	.LBB125_2
# BB#1:
	leaq	620552(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB125_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB125_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	620552(%rbx), %rcx
	addq	$47732368, %rbx         # imm = 0x2D85690
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB125_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_200;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_200
	.align	16, 0x90
_transaction_200:                       # @_transaction_200
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	620848(%rbx), %r15
	cmpl	$0, 620864(%rbx)
	je	.LBB126_2
# BB#1:
	leaq	620712(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB126_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB126_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	620712(%rbx), %rcx
	addq	$47732368, %rbx         # imm = 0x2D85690
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB126_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_201;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_201
	.align	16, 0x90
_transaction_201:                       # @_transaction_201
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621008(%rbx), %r15
	cmpl	$0, 621024(%rbx)
	je	.LBB127_2
# BB#1:
	leaq	620872(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB127_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB127_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	620872(%rbx), %rcx
	addq	$47733424, %rbx         # imm = 0x2D85AB0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB127_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_202;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_202
	.align	16, 0x90
_transaction_202:                       # @_transaction_202
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621168(%rbx), %r15
	cmpl	$0, 621184(%rbx)
	je	.LBB128_2
# BB#1:
	leaq	621032(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB128_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB128_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621032(%rbx), %rcx
	addq	$47733424, %rbx         # imm = 0x2D85AB0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB128_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_203;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_203
	.align	16, 0x90
_transaction_203:                       # @_transaction_203
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621328(%rbx), %r15
	cmpl	$0, 621344(%rbx)
	je	.LBB129_2
# BB#1:
	leaq	621192(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB129_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB129_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621192(%rbx), %rcx
	addq	$47733424, %rbx         # imm = 0x2D85AB0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB129_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_204;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_204
	.align	16, 0x90
_transaction_204:                       # @_transaction_204
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621488(%rbx), %r15
	cmpl	$0, 621504(%rbx)
	je	.LBB130_2
# BB#1:
	leaq	621352(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB130_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB130_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621352(%rbx), %rcx
	addq	$47733424, %rbx         # imm = 0x2D85AB0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB130_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_205;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_205
	.align	16, 0x90
_transaction_205:                       # @_transaction_205
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621648(%rbx), %r15
	cmpl	$0, 621664(%rbx)
	je	.LBB131_2
# BB#1:
	leaq	621512(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB131_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB131_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621512(%rbx), %rcx
	addq	$47734480, %rbx         # imm = 0x2D85ED0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB131_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_206;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_206
	.align	16, 0x90
_transaction_206:                       # @_transaction_206
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621808(%rbx), %r15
	cmpl	$0, 621824(%rbx)
	je	.LBB132_2
# BB#1:
	leaq	621672(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB132_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB132_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621672(%rbx), %rcx
	addq	$47734480, %rbx         # imm = 0x2D85ED0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB132_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_207;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_207
	.align	16, 0x90
_transaction_207:                       # @_transaction_207
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	621968(%rbx), %r15
	cmpl	$0, 621984(%rbx)
	je	.LBB133_2
# BB#1:
	leaq	621832(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB133_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB133_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621832(%rbx), %rcx
	addq	$47734480, %rbx         # imm = 0x2D85ED0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB133_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_208;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_208
	.align	16, 0x90
_transaction_208:                       # @_transaction_208
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	622128(%rbx), %r15
	cmpl	$0, 622144(%rbx)
	je	.LBB134_2
# BB#1:
	leaq	621992(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB134_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB134_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	621992(%rbx), %rcx
	addq	$47734480, %rbx         # imm = 0x2D85ED0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB134_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_209;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_209
	.align	16, 0x90
_transaction_209:                       # @_transaction_209
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	622288(%rbx), %r15
	cmpl	$0, 622304(%rbx)
	je	.LBB135_2
# BB#1:
	leaq	622152(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB135_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB135_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	622152(%rbx), %rcx
	addq	$47735536, %rbx         # imm = 0x2D862F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB135_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_210;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_210
	.align	16, 0x90
_transaction_210:                       # @_transaction_210
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	622448(%rbx), %r15
	cmpl	$0, 622464(%rbx)
	je	.LBB136_2
# BB#1:
	leaq	622312(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB136_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB136_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	622312(%rbx), %rcx
	addq	$47735536, %rbx         # imm = 0x2D862F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB136_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_211;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_211
	.align	16, 0x90
_transaction_211:                       # @_transaction_211
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	622608(%rbx), %r15
	cmpl	$0, 622624(%rbx)
	je	.LBB137_2
# BB#1:
	leaq	622472(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB137_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB137_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	622472(%rbx), %rcx
	addq	$47735536, %rbx         # imm = 0x2D862F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB137_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_212;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_212
	.align	16, 0x90
_transaction_212:                       # @_transaction_212
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	622768(%rbx), %r15
	cmpl	$0, 622784(%rbx)
	je	.LBB138_2
# BB#1:
	leaq	622632(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB138_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB138_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	622632(%rbx), %rcx
	addq	$47735536, %rbx         # imm = 0x2D862F0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB138_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_213;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_213
	.align	16, 0x90
_transaction_213:                       # @_transaction_213
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	622928(%rbx), %r15
	cmpl	$0, 622944(%rbx)
	je	.LBB139_2
# BB#1:
	leaq	622792(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB139_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB139_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	622792(%rbx), %rcx
	addq	$47736592, %rbx         # imm = 0x2D86710
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB139_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_214;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_214
	.align	16, 0x90
_transaction_214:                       # @_transaction_214
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	623088(%rbx), %r15
	cmpl	$0, 623104(%rbx)
	je	.LBB140_2
# BB#1:
	leaq	622952(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB140_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB140_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	622952(%rbx), %rcx
	addq	$47736592, %rbx         # imm = 0x2D86710
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB140_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_215;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_215
	.align	16, 0x90
_transaction_215:                       # @_transaction_215
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	623248(%rbx), %r15
	cmpl	$0, 623264(%rbx)
	je	.LBB141_2
# BB#1:
	leaq	623112(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB141_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB141_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	623112(%rbx), %rcx
	addq	$47736592, %rbx         # imm = 0x2D86710
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB141_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_216;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_216
	.align	16, 0x90
_transaction_216:                       # @_transaction_216
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	623408(%rbx), %r15
	cmpl	$0, 623424(%rbx)
	je	.LBB142_2
# BB#1:
	leaq	623272(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB142_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB142_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	623272(%rbx), %rcx
	addq	$47736592, %rbx         # imm = 0x2D86710
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB142_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_217;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_217
	.align	16, 0x90
_transaction_217:                       # @_transaction_217
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	623568(%rbx), %r15
	cmpl	$0, 623584(%rbx)
	je	.LBB143_2
# BB#1:
	leaq	623432(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB143_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB143_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	623432(%rbx), %rcx
	addq	$47737648, %rbx         # imm = 0x2D86B30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB143_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_218;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_218
	.align	16, 0x90
_transaction_218:                       # @_transaction_218
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	623728(%rbx), %r15
	cmpl	$0, 623744(%rbx)
	je	.LBB144_2
# BB#1:
	leaq	623592(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB144_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB144_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	623592(%rbx), %rcx
	addq	$47737648, %rbx         # imm = 0x2D86B30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB144_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_219;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_219
	.align	16, 0x90
_transaction_219:                       # @_transaction_219
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	623888(%rbx), %r15
	cmpl	$0, 623904(%rbx)
	je	.LBB145_2
# BB#1:
	leaq	623752(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB145_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB145_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	623752(%rbx), %rcx
	addq	$47737648, %rbx         # imm = 0x2D86B30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB145_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_220;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_220
	.align	16, 0x90
_transaction_220:                       # @_transaction_220
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	624048(%rbx), %r15
	cmpl	$0, 624064(%rbx)
	je	.LBB146_2
# BB#1:
	leaq	623912(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB146_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB146_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	623912(%rbx), %rcx
	addq	$47737648, %rbx         # imm = 0x2D86B30
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB146_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_221;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_221
	.align	16, 0x90
_transaction_221:                       # @_transaction_221
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	624208(%rbx), %r15
	cmpl	$0, 624224(%rbx)
	je	.LBB147_2
# BB#1:
	leaq	624072(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB147_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB147_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	624072(%rbx), %rcx
	addq	$47738704, %rbx         # imm = 0x2D86F50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB147_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_222;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_222
	.align	16, 0x90
_transaction_222:                       # @_transaction_222
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	624368(%rbx), %r15
	cmpl	$0, 624384(%rbx)
	je	.LBB148_2
# BB#1:
	leaq	624232(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB148_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB148_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	624232(%rbx), %rcx
	addq	$47738704, %rbx         # imm = 0x2D86F50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB148_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_223;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_223
	.align	16, 0x90
_transaction_223:                       # @_transaction_223
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	624528(%rbx), %r15
	cmpl	$0, 624544(%rbx)
	je	.LBB149_2
# BB#1:
	leaq	624392(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB149_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB149_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	624392(%rbx), %rcx
	addq	$47738704, %rbx         # imm = 0x2D86F50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB149_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_224;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_224
	.align	16, 0x90
_transaction_224:                       # @_transaction_224
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	624688(%rbx), %r15
	cmpl	$0, 624704(%rbx)
	je	.LBB150_2
# BB#1:
	leaq	624552(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB150_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB150_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	624552(%rbx), %rcx
	addq	$47738704, %rbx         # imm = 0x2D86F50
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB150_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_225;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_225
	.align	16, 0x90
_transaction_225:                       # @_transaction_225
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	624848(%rbx), %r15
	cmpl	$0, 624864(%rbx)
	je	.LBB151_2
# BB#1:
	leaq	624712(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB151_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB151_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	624712(%rbx), %rcx
	addq	$47739760, %rbx         # imm = 0x2D87370
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB151_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_226;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_226
	.align	16, 0x90
_transaction_226:                       # @_transaction_226
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	625008(%rbx), %r15
	cmpl	$0, 625024(%rbx)
	je	.LBB152_2
# BB#1:
	leaq	624872(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB152_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB152_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	624872(%rbx), %rcx
	addq	$47739760, %rbx         # imm = 0x2D87370
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB152_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_227;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_227
	.align	16, 0x90
_transaction_227:                       # @_transaction_227
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	625168(%rbx), %r15
	cmpl	$0, 625184(%rbx)
	je	.LBB153_2
# BB#1:
	leaq	625032(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB153_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB153_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	625032(%rbx), %rcx
	addq	$47739760, %rbx         # imm = 0x2D87370
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB153_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_228;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_228
	.align	16, 0x90
_transaction_228:                       # @_transaction_228
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	625328(%rbx), %r15
	cmpl	$0, 625344(%rbx)
	je	.LBB154_2
# BB#1:
	leaq	625192(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB154_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB154_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	625192(%rbx), %rcx
	addq	$47739760, %rbx         # imm = 0x2D87370
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB154_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_229;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_229
	.align	16, 0x90
_transaction_229:                       # @_transaction_229
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	625488(%rbx), %r14
	cmpl	$0, 625504(%rbx)
	je	.LBB155_2
# BB#1:
	leaq	625352(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB155_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB155_4
# BB#3:
	addq	$49007392, %rbx         # imm = 0x2EBCB20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB155_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_230;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_230
	.align	16, 0x90
_transaction_230:                       # @_transaction_230
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	625648(%rbx), %r14
	cmpl	$0, 625664(%rbx)
	je	.LBB156_2
# BB#1:
	leaq	625512(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB156_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB156_4
# BB#3:
	addq	$49007392, %rbx         # imm = 0x2EBCB20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB156_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_231;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_231
	.align	16, 0x90
_transaction_231:                       # @_transaction_231
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	625808(%rbx), %r15
	cmpl	$0, 625824(%rbx)
	je	.LBB157_2
# BB#1:
	leaq	625672(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB157_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB157_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	625672(%rbx), %rcx
	addq	$47741368, %rbx         # imm = 0x2D879B8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB157_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_232;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_232
	.align	16, 0x90
_transaction_232:                       # @_transaction_232
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	625968(%rbx), %r15
	cmpl	$0, 625984(%rbx)
	je	.LBB158_2
# BB#1:
	leaq	625832(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB158_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB158_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	625832(%rbx), %rcx
	addq	$47741368, %rbx         # imm = 0x2D879B8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB158_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_233;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_233
	.align	16, 0x90
_transaction_233:                       # @_transaction_233
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	626128(%rbx), %r15
	cmpl	$0, 626144(%rbx)
	je	.LBB159_2
# BB#1:
	leaq	625992(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB159_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB159_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	625992(%rbx), %rcx
	addq	$47741368, %rbx         # imm = 0x2D879B8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB159_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_234;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_234
	.align	16, 0x90
_transaction_234:                       # @_transaction_234
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	626288(%rbx), %r15
	cmpl	$0, 626304(%rbx)
	je	.LBB160_2
# BB#1:
	leaq	626152(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB160_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB160_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	626152(%rbx), %rcx
	addq	$47741368, %rbx         # imm = 0x2D879B8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB160_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_235;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_235
	.align	16, 0x90
_transaction_235:                       # @_transaction_235
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	626320(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB161_6
# BB#1:
	leaq	626456(%rbx), %r12
	cmpl	$0, 626472(%rbx)
	je	.LBB161_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB161_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB161_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB161_6
.LBB161_5:
	leaq	49680976(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47723200, %rbx         # imm = 0x2D832C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB161_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_236;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_236
	.align	16, 0x90
_transaction_236:                       # @_transaction_236
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	626744(%rbx), %r15
	cmpl	$0, 626760(%rbx)
	je	.LBB162_2
# BB#1:
	leaq	626608(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB162_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB162_4
# BB#3:
	leaq	626608(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB162_5
.LBB162_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	626608(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47723200, %rbx         # imm = 0x2D832C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB162_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_237;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_237
	.align	16, 0x90
_transaction_237:                       # @_transaction_237
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	626992(%rbx), %r15
	cmpl	$0, 627008(%rbx)
	je	.LBB163_2
# BB#1:
	leaq	626856(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB163_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB163_4
# BB#3:
	leaq	626856(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB163_5
.LBB163_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	626856(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47723200, %rbx         # imm = 0x2D832C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB163_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_238;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_238
	.align	16, 0x90
_transaction_238:                       # @_transaction_238
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	627240(%rbx), %r15
	cmpl	$0, 627256(%rbx)
	je	.LBB164_2
# BB#1:
	leaq	627104(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB164_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB164_4
# BB#3:
	leaq	627104(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB164_5
.LBB164_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	627104(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47723200, %rbx         # imm = 0x2D832C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB164_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_239;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_239
	.align	16, 0x90
_transaction_239:                       # @_transaction_239
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	627480(%rbx), %r15
	cmpl	$0, 627496(%rbx)
	je	.LBB165_2
# BB#1:
	leaq	627344(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB165_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB165_4
# BB#3:
	leaq	49655736(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	627344(%rbx), %rcx
	addq	$47723560, %rbx         # imm = 0x2D83428
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB165_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_240;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_240
	.align	16, 0x90
_transaction_240:                       # @_transaction_240
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	627720(%rbx), %r15
	cmpl	$0, 627736(%rbx)
	je	.LBB166_2
# BB#1:
	leaq	627584(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB166_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB166_4
# BB#3:
	leaq	49650848(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	627584(%rbx), %rcx
	addq	$47723560, %rbx         # imm = 0x2D83428
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB166_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_241;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_241
	.align	16, 0x90
_transaction_241:                       # @_transaction_241
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	627960(%rbx), %r15
	cmpl	$0, 627976(%rbx)
	je	.LBB167_2
# BB#1:
	leaq	627824(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB167_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB167_4
# BB#3:
	leaq	50039104(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	627824(%rbx), %rcx
	addq	$47723560, %rbx         # imm = 0x2D83428
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB167_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_242;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_242
	.align	16, 0x90
_transaction_242:                       # @_transaction_242
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	628200(%rbx), %r15
	cmpl	$0, 628216(%rbx)
	je	.LBB168_2
# BB#1:
	leaq	628064(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB168_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB168_4
# BB#3:
	leaq	50034216(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	628064(%rbx), %rcx
	addq	$47723560, %rbx         # imm = 0x2D83428
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB168_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_243;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_243
	.align	16, 0x90
_transaction_243:                       # @_transaction_243
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	628312(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB169_6
# BB#1:
	leaq	628448(%rbx), %r12
	cmpl	$0, 628464(%rbx)
	je	.LBB169_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB169_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB169_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB169_6
.LBB169_5:
	leaq	49703632(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47724256, %rbx         # imm = 0x2D836E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB169_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_244;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_244
	.align	16, 0x90
_transaction_244:                       # @_transaction_244
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	628736(%rbx), %r15
	cmpl	$0, 628752(%rbx)
	je	.LBB170_2
# BB#1:
	leaq	628600(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB170_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB170_4
# BB#3:
	leaq	628600(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB170_5
.LBB170_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	628600(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47724256, %rbx         # imm = 0x2D836E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB170_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_245;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_245
	.align	16, 0x90
_transaction_245:                       # @_transaction_245
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	628984(%rbx), %r15
	cmpl	$0, 629000(%rbx)
	je	.LBB171_2
# BB#1:
	leaq	628848(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB171_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB171_4
# BB#3:
	leaq	628848(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB171_5
.LBB171_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	628848(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47724256, %rbx         # imm = 0x2D836E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB171_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_246;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_246
	.align	16, 0x90
_transaction_246:                       # @_transaction_246
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	629232(%rbx), %r15
	cmpl	$0, 629248(%rbx)
	je	.LBB172_2
# BB#1:
	leaq	629096(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB172_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB172_4
# BB#3:
	leaq	629096(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB172_5
.LBB172_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	629096(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47724256, %rbx         # imm = 0x2D836E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB172_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_247;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_247
	.align	16, 0x90
_transaction_247:                       # @_transaction_247
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	629472(%rbx), %r15
	cmpl	$0, 629488(%rbx)
	je	.LBB173_2
# BB#1:
	leaq	629336(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB173_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB173_4
# BB#3:
	leaq	49678392(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	629336(%rbx), %rcx
	addq	$47724616, %rbx         # imm = 0x2D83848
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB173_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_248;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_248
	.align	16, 0x90
_transaction_248:                       # @_transaction_248
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	629712(%rbx), %r15
	cmpl	$0, 629728(%rbx)
	je	.LBB174_2
# BB#1:
	leaq	629576(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB174_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB174_4
# BB#3:
	leaq	49673504(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	629576(%rbx), %rcx
	addq	$47724616, %rbx         # imm = 0x2D83848
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB174_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_249;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_249
	.align	16, 0x90
_transaction_249:                       # @_transaction_249
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	629952(%rbx), %r15
	cmpl	$0, 629968(%rbx)
	je	.LBB175_2
# BB#1:
	leaq	629816(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB175_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB175_4
# BB#3:
	leaq	49668616(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	629816(%rbx), %rcx
	addq	$47724616, %rbx         # imm = 0x2D83848
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB175_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_250;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_250
	.align	16, 0x90
_transaction_250:                       # @_transaction_250
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	630192(%rbx), %r15
	cmpl	$0, 630208(%rbx)
	je	.LBB176_2
# BB#1:
	leaq	630056(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB176_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB176_4
# BB#3:
	leaq	49663728(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	630056(%rbx), %rcx
	addq	$47724616, %rbx         # imm = 0x2D83848
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB176_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_251;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_251
	.align	16, 0x90
_transaction_251:                       # @_transaction_251
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	630304(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB177_6
# BB#1:
	leaq	630440(%rbx), %r12
	cmpl	$0, 630456(%rbx)
	je	.LBB177_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB177_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB177_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB177_6
.LBB177_5:
	leaq	49731176(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47725312, %rbx         # imm = 0x2D83B00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB177_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_252;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_252
	.align	16, 0x90
_transaction_252:                       # @_transaction_252
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	630728(%rbx), %r15
	cmpl	$0, 630744(%rbx)
	je	.LBB178_2
# BB#1:
	leaq	630592(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB178_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB178_4
# BB#3:
	leaq	630592(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB178_5
.LBB178_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	630592(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47725312, %rbx         # imm = 0x2D83B00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB178_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_253;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_253
	.align	16, 0x90
_transaction_253:                       # @_transaction_253
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	630976(%rbx), %r15
	cmpl	$0, 630992(%rbx)
	je	.LBB179_2
# BB#1:
	leaq	630840(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB179_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB179_4
# BB#3:
	leaq	630840(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB179_5
.LBB179_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	630840(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47725312, %rbx         # imm = 0x2D83B00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB179_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_254;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_254
	.align	16, 0x90
_transaction_254:                       # @_transaction_254
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	631224(%rbx), %r15
	cmpl	$0, 631240(%rbx)
	je	.LBB180_2
# BB#1:
	leaq	631088(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB180_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB180_4
# BB#3:
	leaq	631088(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB180_5
.LBB180_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	631088(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47725312, %rbx         # imm = 0x2D83B00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB180_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_255;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_255
	.align	16, 0x90
_transaction_255:                       # @_transaction_255
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	631464(%rbx), %r15
	cmpl	$0, 631480(%rbx)
	je	.LBB181_2
# BB#1:
	leaq	631328(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB181_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB181_4
# BB#3:
	leaq	49701048(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	631328(%rbx), %rcx
	addq	$47725672, %rbx         # imm = 0x2D83C68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB181_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_256;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_256
	.align	16, 0x90
_transaction_256:                       # @_transaction_256
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	631704(%rbx), %r15
	cmpl	$0, 631720(%rbx)
	je	.LBB182_2
# BB#1:
	leaq	631568(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB182_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB182_4
# BB#3:
	leaq	49696160(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	631568(%rbx), %rcx
	addq	$47725672, %rbx         # imm = 0x2D83C68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB182_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_257;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_257
	.align	16, 0x90
_transaction_257:                       # @_transaction_257
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	631944(%rbx), %r15
	cmpl	$0, 631960(%rbx)
	je	.LBB183_2
# BB#1:
	leaq	631808(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB183_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB183_4
# BB#3:
	leaq	49691272(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	631808(%rbx), %rcx
	addq	$47725672, %rbx         # imm = 0x2D83C68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB183_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_258;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_258
	.align	16, 0x90
_transaction_258:                       # @_transaction_258
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	632184(%rbx), %r15
	cmpl	$0, 632200(%rbx)
	je	.LBB184_2
# BB#1:
	leaq	632048(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB184_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB184_4
# BB#3:
	leaq	49686384(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	632048(%rbx), %rcx
	addq	$47725672, %rbx         # imm = 0x2D83C68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB184_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_259;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_259
	.align	16, 0x90
_transaction_259:                       # @_transaction_259
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	632296(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB185_6
# BB#1:
	leaq	632432(%rbx), %r12
	cmpl	$0, 632448(%rbx)
	je	.LBB185_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB185_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB185_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB185_6
.LBB185_5:
	leaq	49753832(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47726368, %rbx         # imm = 0x2D83F20
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB185_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_260;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_260
	.align	16, 0x90
_transaction_260:                       # @_transaction_260
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	632720(%rbx), %r15
	cmpl	$0, 632736(%rbx)
	je	.LBB186_2
# BB#1:
	leaq	632584(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB186_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB186_4
# BB#3:
	leaq	632584(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB186_5
.LBB186_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	632584(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47726368, %rbx         # imm = 0x2D83F20
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB186_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_261;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_261
	.align	16, 0x90
_transaction_261:                       # @_transaction_261
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	632968(%rbx), %r15
	cmpl	$0, 632984(%rbx)
	je	.LBB187_2
# BB#1:
	leaq	632832(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB187_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB187_4
# BB#3:
	leaq	632832(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB187_5
.LBB187_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	632832(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47726368, %rbx         # imm = 0x2D83F20
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB187_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_262;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_262
	.align	16, 0x90
_transaction_262:                       # @_transaction_262
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	633216(%rbx), %r15
	cmpl	$0, 633232(%rbx)
	je	.LBB188_2
# BB#1:
	leaq	633080(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB188_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB188_4
# BB#3:
	leaq	633080(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB188_5
.LBB188_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	633080(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47726368, %rbx         # imm = 0x2D83F20
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB188_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_263;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_263
	.align	16, 0x90
_transaction_263:                       # @_transaction_263
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	633456(%rbx), %r15
	cmpl	$0, 633472(%rbx)
	je	.LBB189_2
# BB#1:
	leaq	633320(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB189_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB189_4
# BB#3:
	leaq	49728592(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	633320(%rbx), %rcx
	addq	$47726728, %rbx         # imm = 0x2D84088
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB189_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_264;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_264
	.align	16, 0x90
_transaction_264:                       # @_transaction_264
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	633696(%rbx), %r15
	cmpl	$0, 633712(%rbx)
	je	.LBB190_2
# BB#1:
	leaq	633560(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB190_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB190_4
# BB#3:
	leaq	49723704(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	633560(%rbx), %rcx
	addq	$47726728, %rbx         # imm = 0x2D84088
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB190_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_265;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_265
	.align	16, 0x90
_transaction_265:                       # @_transaction_265
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	633936(%rbx), %r15
	cmpl	$0, 633952(%rbx)
	je	.LBB191_2
# BB#1:
	leaq	633800(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB191_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB191_4
# BB#3:
	leaq	49718816(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	633800(%rbx), %rcx
	addq	$47726728, %rbx         # imm = 0x2D84088
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB191_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_266;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_266
	.align	16, 0x90
_transaction_266:                       # @_transaction_266
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	634176(%rbx), %r15
	cmpl	$0, 634192(%rbx)
	je	.LBB192_2
# BB#1:
	leaq	634040(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB192_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB192_4
# BB#3:
	leaq	49713928(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	634040(%rbx), %rcx
	addq	$47726728, %rbx         # imm = 0x2D84088
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB192_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_267;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_267
	.align	16, 0x90
_transaction_267:                       # @_transaction_267
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	634288(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB193_6
# BB#1:
	leaq	634424(%rbx), %r12
	cmpl	$0, 634440(%rbx)
	je	.LBB193_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB193_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB193_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB193_6
.LBB193_5:
	leaq	49781376(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47727424, %rbx         # imm = 0x2D84340
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB193_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_268;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_268
	.align	16, 0x90
_transaction_268:                       # @_transaction_268
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	634712(%rbx), %r15
	cmpl	$0, 634728(%rbx)
	je	.LBB194_2
# BB#1:
	leaq	634576(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB194_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB194_4
# BB#3:
	leaq	634576(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB194_5
.LBB194_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	634576(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47727424, %rbx         # imm = 0x2D84340
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB194_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_269;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_269
	.align	16, 0x90
_transaction_269:                       # @_transaction_269
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	634960(%rbx), %r15
	cmpl	$0, 634976(%rbx)
	je	.LBB195_2
# BB#1:
	leaq	634824(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB195_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB195_4
# BB#3:
	leaq	634824(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB195_5
.LBB195_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	634824(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47727424, %rbx         # imm = 0x2D84340
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB195_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_270;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_270
	.align	16, 0x90
_transaction_270:                       # @_transaction_270
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	635208(%rbx), %r15
	cmpl	$0, 635224(%rbx)
	je	.LBB196_2
# BB#1:
	leaq	635072(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB196_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB196_4
# BB#3:
	leaq	635072(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB196_5
.LBB196_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	635072(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47727424, %rbx         # imm = 0x2D84340
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB196_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_271;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_271
	.align	16, 0x90
_transaction_271:                       # @_transaction_271
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	635448(%rbx), %r15
	cmpl	$0, 635464(%rbx)
	je	.LBB197_2
# BB#1:
	leaq	635312(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB197_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB197_4
# BB#3:
	leaq	49751248(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	635312(%rbx), %rcx
	addq	$47727784, %rbx         # imm = 0x2D844A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB197_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_272;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_272
	.align	16, 0x90
_transaction_272:                       # @_transaction_272
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	635688(%rbx), %r15
	cmpl	$0, 635704(%rbx)
	je	.LBB198_2
# BB#1:
	leaq	635552(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB198_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB198_4
# BB#3:
	leaq	49746360(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	635552(%rbx), %rcx
	addq	$47727784, %rbx         # imm = 0x2D844A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB198_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_273;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_273
	.align	16, 0x90
_transaction_273:                       # @_transaction_273
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	635928(%rbx), %r15
	cmpl	$0, 635944(%rbx)
	je	.LBB199_2
# BB#1:
	leaq	635792(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB199_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB199_4
# BB#3:
	leaq	49741472(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	635792(%rbx), %rcx
	addq	$47727784, %rbx         # imm = 0x2D844A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB199_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_274;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_274
	.align	16, 0x90
_transaction_274:                       # @_transaction_274
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	636168(%rbx), %r15
	cmpl	$0, 636184(%rbx)
	je	.LBB200_2
# BB#1:
	leaq	636032(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB200_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB200_4
# BB#3:
	leaq	49736584(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	636032(%rbx), %rcx
	addq	$47727784, %rbx         # imm = 0x2D844A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB200_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_275;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_275
	.align	16, 0x90
_transaction_275:                       # @_transaction_275
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	636280(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB201_6
# BB#1:
	leaq	636416(%rbx), %r12
	cmpl	$0, 636432(%rbx)
	je	.LBB201_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB201_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB201_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB201_6
.LBB201_5:
	leaq	49804032(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47728480, %rbx         # imm = 0x2D84760
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB201_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_276;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_276
	.align	16, 0x90
_transaction_276:                       # @_transaction_276
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	636704(%rbx), %r15
	cmpl	$0, 636720(%rbx)
	je	.LBB202_2
# BB#1:
	leaq	636568(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB202_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB202_4
# BB#3:
	leaq	636568(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB202_5
.LBB202_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	636568(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47728480, %rbx         # imm = 0x2D84760
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB202_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_277;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_277
	.align	16, 0x90
_transaction_277:                       # @_transaction_277
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	636952(%rbx), %r15
	cmpl	$0, 636968(%rbx)
	je	.LBB203_2
# BB#1:
	leaq	636816(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB203_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB203_4
# BB#3:
	leaq	636816(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB203_5
.LBB203_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	636816(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47728480, %rbx         # imm = 0x2D84760
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB203_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_278;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_278
	.align	16, 0x90
_transaction_278:                       # @_transaction_278
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	637200(%rbx), %r15
	cmpl	$0, 637216(%rbx)
	je	.LBB204_2
# BB#1:
	leaq	637064(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB204_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB204_4
# BB#3:
	leaq	637064(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB204_5
.LBB204_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	637064(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47728480, %rbx         # imm = 0x2D84760
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB204_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_279;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_279
	.align	16, 0x90
_transaction_279:                       # @_transaction_279
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	637440(%rbx), %r15
	cmpl	$0, 637456(%rbx)
	je	.LBB205_2
# BB#1:
	leaq	637304(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB205_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB205_4
# BB#3:
	leaq	49778792(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	637304(%rbx), %rcx
	addq	$47728840, %rbx         # imm = 0x2D848C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB205_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_280;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_280
	.align	16, 0x90
_transaction_280:                       # @_transaction_280
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	637680(%rbx), %r15
	cmpl	$0, 637696(%rbx)
	je	.LBB206_2
# BB#1:
	leaq	637544(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB206_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB206_4
# BB#3:
	leaq	49773904(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	637544(%rbx), %rcx
	addq	$47728840, %rbx         # imm = 0x2D848C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB206_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_281;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_281
	.align	16, 0x90
_transaction_281:                       # @_transaction_281
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	637920(%rbx), %r15
	cmpl	$0, 637936(%rbx)
	je	.LBB207_2
# BB#1:
	leaq	637784(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB207_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB207_4
# BB#3:
	leaq	49764128(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	637784(%rbx), %rcx
	addq	$47728840, %rbx         # imm = 0x2D848C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB207_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_282;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_282
	.align	16, 0x90
_transaction_282:                       # @_transaction_282
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	638160(%rbx), %r15
	cmpl	$0, 638176(%rbx)
	je	.LBB208_2
# BB#1:
	leaq	638024(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB208_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB208_4
# BB#3:
	leaq	49759240(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	638024(%rbx), %rcx
	addq	$47728840, %rbx         # imm = 0x2D848C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB208_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_283;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_283
	.align	16, 0x90
_transaction_283:                       # @_transaction_283
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	638272(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB209_6
# BB#1:
	leaq	638408(%rbx), %r12
	cmpl	$0, 638424(%rbx)
	je	.LBB209_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB209_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB209_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB209_6
.LBB209_5:
	leaq	49826688(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47729536, %rbx         # imm = 0x2D84B80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB209_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_284;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_284
	.align	16, 0x90
_transaction_284:                       # @_transaction_284
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	638696(%rbx), %r15
	cmpl	$0, 638712(%rbx)
	je	.LBB210_2
# BB#1:
	leaq	638560(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB210_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB210_4
# BB#3:
	leaq	638560(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB210_5
.LBB210_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	638560(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47729536, %rbx         # imm = 0x2D84B80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB210_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_285;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_285
	.align	16, 0x90
_transaction_285:                       # @_transaction_285
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	638944(%rbx), %r15
	cmpl	$0, 638960(%rbx)
	je	.LBB211_2
# BB#1:
	leaq	638808(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB211_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB211_4
# BB#3:
	leaq	638808(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB211_5
.LBB211_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	638808(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47729536, %rbx         # imm = 0x2D84B80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB211_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_286;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_286
	.align	16, 0x90
_transaction_286:                       # @_transaction_286
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	639192(%rbx), %r15
	cmpl	$0, 639208(%rbx)
	je	.LBB212_2
# BB#1:
	leaq	639056(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB212_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB212_4
# BB#3:
	leaq	639056(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB212_5
.LBB212_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	639056(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47729536, %rbx         # imm = 0x2D84B80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB212_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_287;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_287
	.align	16, 0x90
_transaction_287:                       # @_transaction_287
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	639432(%rbx), %r15
	cmpl	$0, 639448(%rbx)
	je	.LBB213_2
# BB#1:
	leaq	639296(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB213_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB213_4
# BB#3:
	leaq	49801448(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	639296(%rbx), %rcx
	addq	$47729896, %rbx         # imm = 0x2D84CE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB213_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_288;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_288
	.align	16, 0x90
_transaction_288:                       # @_transaction_288
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	639672(%rbx), %r15
	cmpl	$0, 639688(%rbx)
	je	.LBB214_2
# BB#1:
	leaq	639536(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB214_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB214_4
# BB#3:
	leaq	49796560(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	639536(%rbx), %rcx
	addq	$47729896, %rbx         # imm = 0x2D84CE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB214_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_289;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_289
	.align	16, 0x90
_transaction_289:                       # @_transaction_289
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	639912(%rbx), %r15
	cmpl	$0, 639928(%rbx)
	je	.LBB215_2
# BB#1:
	leaq	639776(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB215_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB215_4
# BB#3:
	leaq	49791672(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	639776(%rbx), %rcx
	addq	$47729896, %rbx         # imm = 0x2D84CE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB215_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_290;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_290
	.align	16, 0x90
_transaction_290:                       # @_transaction_290
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	640152(%rbx), %r15
	cmpl	$0, 640168(%rbx)
	je	.LBB216_2
# BB#1:
	leaq	640016(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB216_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB216_4
# BB#3:
	leaq	49786784(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	640016(%rbx), %rcx
	addq	$47729896, %rbx         # imm = 0x2D84CE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB216_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_291;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_291
	.align	16, 0x90
_transaction_291:                       # @_transaction_291
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	640264(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB217_6
# BB#1:
	leaq	640400(%rbx), %r12
	cmpl	$0, 640416(%rbx)
	je	.LBB217_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB217_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB217_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB217_6
.LBB217_5:
	leaq	49857336(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47730592, %rbx         # imm = 0x2D84FA0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB217_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_292;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_292
	.align	16, 0x90
_transaction_292:                       # @_transaction_292
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	640688(%rbx), %r15
	cmpl	$0, 640704(%rbx)
	je	.LBB218_2
# BB#1:
	leaq	640552(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB218_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB218_4
# BB#3:
	leaq	640552(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB218_5
.LBB218_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	640552(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47730592, %rbx         # imm = 0x2D84FA0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB218_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_293;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_293
	.align	16, 0x90
_transaction_293:                       # @_transaction_293
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	640936(%rbx), %r15
	cmpl	$0, 640952(%rbx)
	je	.LBB219_2
# BB#1:
	leaq	640800(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB219_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB219_4
# BB#3:
	leaq	640800(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB219_5
.LBB219_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	640800(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47730592, %rbx         # imm = 0x2D84FA0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB219_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_294;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_294
	.align	16, 0x90
_transaction_294:                       # @_transaction_294
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	641184(%rbx), %r15
	cmpl	$0, 641200(%rbx)
	je	.LBB220_2
# BB#1:
	leaq	641048(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB220_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB220_4
# BB#3:
	leaq	641048(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB220_5
.LBB220_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	641048(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47730592, %rbx         # imm = 0x2D84FA0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB220_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_295;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_295
	.align	16, 0x90
_transaction_295:                       # @_transaction_295
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	641424(%rbx), %r15
	cmpl	$0, 641440(%rbx)
	je	.LBB221_2
# BB#1:
	leaq	641288(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB221_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB221_4
# BB#3:
	leaq	49824104(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	641288(%rbx), %rcx
	addq	$47730952, %rbx         # imm = 0x2D85108
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB221_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_296;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_296
	.align	16, 0x90
_transaction_296:                       # @_transaction_296
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	641664(%rbx), %r15
	cmpl	$0, 641680(%rbx)
	je	.LBB222_2
# BB#1:
	leaq	641528(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB222_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB222_4
# BB#3:
	leaq	49819216(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	641528(%rbx), %rcx
	addq	$47730952, %rbx         # imm = 0x2D85108
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB222_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_297;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_297
	.align	16, 0x90
_transaction_297:                       # @_transaction_297
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	641904(%rbx), %r15
	cmpl	$0, 641920(%rbx)
	je	.LBB223_2
# BB#1:
	leaq	641768(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB223_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB223_4
# BB#3:
	leaq	49814328(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	641768(%rbx), %rcx
	addq	$47730952, %rbx         # imm = 0x2D85108
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB223_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_298;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_298
	.align	16, 0x90
_transaction_298:                       # @_transaction_298
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	642144(%rbx), %r15
	cmpl	$0, 642160(%rbx)
	je	.LBB224_2
# BB#1:
	leaq	642008(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB224_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB224_4
# BB#3:
	leaq	49809440(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	642008(%rbx), %rcx
	addq	$47730952, %rbx         # imm = 0x2D85108
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB224_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_299;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_299
	.align	16, 0x90
_transaction_299:                       # @_transaction_299
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	642256(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB225_6
# BB#1:
	leaq	642392(%rbx), %r12
	cmpl	$0, 642408(%rbx)
	je	.LBB225_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB225_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB225_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB225_6
.LBB225_5:
	leaq	50028808(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47731648, %rbx         # imm = 0x2D853C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB225_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_300;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_300
	.align	16, 0x90
_transaction_300:                       # @_transaction_300
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	642680(%rbx), %r15
	cmpl	$0, 642696(%rbx)
	je	.LBB226_2
# BB#1:
	leaq	642544(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB226_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB226_4
# BB#3:
	leaq	642544(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB226_5
.LBB226_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	642544(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47731648, %rbx         # imm = 0x2D853C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB226_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_301;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_301
	.align	16, 0x90
_transaction_301:                       # @_transaction_301
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	642928(%rbx), %r15
	cmpl	$0, 642944(%rbx)
	je	.LBB227_2
# BB#1:
	leaq	642792(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB227_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB227_4
# BB#3:
	leaq	642792(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB227_5
.LBB227_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	642792(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47731648, %rbx         # imm = 0x2D853C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB227_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_302;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_302
	.align	16, 0x90
_transaction_302:                       # @_transaction_302
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	643176(%rbx), %r15
	cmpl	$0, 643192(%rbx)
	je	.LBB228_2
# BB#1:
	leaq	643040(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB228_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB228_4
# BB#3:
	leaq	643040(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB228_5
.LBB228_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	643040(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47731648, %rbx         # imm = 0x2D853C0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB228_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_303;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_303
	.align	16, 0x90
_transaction_303:                       # @_transaction_303
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	643416(%rbx), %r15
	cmpl	$0, 643432(%rbx)
	je	.LBB229_2
# BB#1:
	leaq	643280(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB229_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB229_4
# BB#3:
	leaq	49832096(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	643280(%rbx), %rcx
	addq	$47732008, %rbx         # imm = 0x2D85528
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB229_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_304;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_304
	.align	16, 0x90
_transaction_304:                       # @_transaction_304
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	643656(%rbx), %r15
	cmpl	$0, 643672(%rbx)
	je	.LBB230_2
# BB#1:
	leaq	643520(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB230_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB230_4
# BB#3:
	leaq	49769016(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	643520(%rbx), %rcx
	addq	$47732008, %rbx         # imm = 0x2D85528
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB230_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_305;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_305
	.align	16, 0x90
_transaction_305:                       # @_transaction_305
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	643896(%rbx), %r15
	cmpl	$0, 643912(%rbx)
	je	.LBB231_2
# BB#1:
	leaq	643760(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB231_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB231_4
# BB#3:
	leaq	49709040(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	643760(%rbx), %rcx
	addq	$47732008, %rbx         # imm = 0x2D85528
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB231_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_306;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_306
	.align	16, 0x90
_transaction_306:                       # @_transaction_306
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	644136(%rbx), %r15
	cmpl	$0, 644152(%rbx)
	je	.LBB232_2
# BB#1:
	leaq	644000(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB232_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB232_4
# BB#3:
	leaq	49645960(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	644000(%rbx), %rcx
	addq	$47732008, %rbx         # imm = 0x2D85528
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB232_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_307;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_307
	.align	16, 0x90
_transaction_307:                       # @_transaction_307
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	644248(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB233_6
# BB#1:
	leaq	644384(%rbx), %r12
	cmpl	$0, 644400(%rbx)
	je	.LBB233_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB233_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB233_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB233_6
.LBB233_5:
	leaq	49879992(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47732704, %rbx         # imm = 0x2D857E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB233_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_308;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_308
	.align	16, 0x90
_transaction_308:                       # @_transaction_308
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	644672(%rbx), %r15
	cmpl	$0, 644688(%rbx)
	je	.LBB234_2
# BB#1:
	leaq	644536(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB234_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB234_4
# BB#3:
	leaq	644536(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB234_5
.LBB234_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	644536(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47732704, %rbx         # imm = 0x2D857E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB234_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_309;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_309
	.align	16, 0x90
_transaction_309:                       # @_transaction_309
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	644920(%rbx), %r15
	cmpl	$0, 644936(%rbx)
	je	.LBB235_2
# BB#1:
	leaq	644784(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB235_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB235_4
# BB#3:
	leaq	644784(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB235_5
.LBB235_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	644784(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47732704, %rbx         # imm = 0x2D857E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB235_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_310;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_310
	.align	16, 0x90
_transaction_310:                       # @_transaction_310
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	645168(%rbx), %r15
	cmpl	$0, 645184(%rbx)
	je	.LBB236_2
# BB#1:
	leaq	645032(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB236_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB236_4
# BB#3:
	leaq	645032(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB236_5
.LBB236_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	645032(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47732704, %rbx         # imm = 0x2D857E0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB236_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_311;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_311
	.align	16, 0x90
_transaction_311:                       # @_transaction_311
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	645408(%rbx), %r15
	cmpl	$0, 645424(%rbx)
	je	.LBB237_2
# BB#1:
	leaq	645272(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB237_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB237_4
# BB#3:
	leaq	49854752(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	645272(%rbx), %rcx
	addq	$47733064, %rbx         # imm = 0x2D85948
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB237_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_312;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_312
	.align	16, 0x90
_transaction_312:                       # @_transaction_312
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	645648(%rbx), %r15
	cmpl	$0, 645664(%rbx)
	je	.LBB238_2
# BB#1:
	leaq	645512(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB238_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB238_4
# BB#3:
	leaq	49849864(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	645512(%rbx), %rcx
	addq	$47733064, %rbx         # imm = 0x2D85948
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB238_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_313;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_313
	.align	16, 0x90
_transaction_313:                       # @_transaction_313
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	645888(%rbx), %r15
	cmpl	$0, 645904(%rbx)
	je	.LBB239_2
# BB#1:
	leaq	645752(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB239_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB239_4
# BB#3:
	leaq	49844976(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	645752(%rbx), %rcx
	addq	$47733064, %rbx         # imm = 0x2D85948
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB239_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_314;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_314
	.align	16, 0x90
_transaction_314:                       # @_transaction_314
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	646128(%rbx), %r15
	cmpl	$0, 646144(%rbx)
	je	.LBB240_2
# BB#1:
	leaq	645992(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB240_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB240_4
# BB#3:
	leaq	49840088(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	645992(%rbx), %rcx
	addq	$47733064, %rbx         # imm = 0x2D85948
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB240_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_315;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_315
	.align	16, 0x90
_transaction_315:                       # @_transaction_315
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	646240(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB241_6
# BB#1:
	leaq	646376(%rbx), %r12
	cmpl	$0, 646392(%rbx)
	je	.LBB241_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB241_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB241_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB241_6
.LBB241_5:
	leaq	49907536(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47733760, %rbx         # imm = 0x2D85C00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB241_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_316;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_316
	.align	16, 0x90
_transaction_316:                       # @_transaction_316
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	646664(%rbx), %r15
	cmpl	$0, 646680(%rbx)
	je	.LBB242_2
# BB#1:
	leaq	646528(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB242_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB242_4
# BB#3:
	leaq	646528(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB242_5
.LBB242_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	646528(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47733760, %rbx         # imm = 0x2D85C00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB242_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_317;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_317
	.align	16, 0x90
_transaction_317:                       # @_transaction_317
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	646912(%rbx), %r15
	cmpl	$0, 646928(%rbx)
	je	.LBB243_2
# BB#1:
	leaq	646776(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB243_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB243_4
# BB#3:
	leaq	646776(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB243_5
.LBB243_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	646776(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47733760, %rbx         # imm = 0x2D85C00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB243_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_318;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_318
	.align	16, 0x90
_transaction_318:                       # @_transaction_318
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	647160(%rbx), %r15
	cmpl	$0, 647176(%rbx)
	je	.LBB244_2
# BB#1:
	leaq	647024(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB244_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB244_4
# BB#3:
	leaq	647024(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB244_5
.LBB244_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	647024(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47733760, %rbx         # imm = 0x2D85C00
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB244_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_319;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_319
	.align	16, 0x90
_transaction_319:                       # @_transaction_319
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	647400(%rbx), %r15
	cmpl	$0, 647416(%rbx)
	je	.LBB245_2
# BB#1:
	leaq	647264(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB245_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB245_4
# BB#3:
	leaq	49877408(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	647264(%rbx), %rcx
	addq	$47734120, %rbx         # imm = 0x2D85D68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB245_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_320;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_320
	.align	16, 0x90
_transaction_320:                       # @_transaction_320
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	647640(%rbx), %r15
	cmpl	$0, 647656(%rbx)
	je	.LBB246_2
# BB#1:
	leaq	647504(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB246_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB246_4
# BB#3:
	leaq	49872520(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	647504(%rbx), %rcx
	addq	$47734120, %rbx         # imm = 0x2D85D68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB246_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_321;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_321
	.align	16, 0x90
_transaction_321:                       # @_transaction_321
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	647880(%rbx), %r15
	cmpl	$0, 647896(%rbx)
	je	.LBB247_2
# BB#1:
	leaq	647744(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB247_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB247_4
# BB#3:
	leaq	49867632(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	647744(%rbx), %rcx
	addq	$47734120, %rbx         # imm = 0x2D85D68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB247_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_322;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_322
	.align	16, 0x90
_transaction_322:                       # @_transaction_322
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	648120(%rbx), %r15
	cmpl	$0, 648136(%rbx)
	je	.LBB248_2
# BB#1:
	leaq	647984(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB248_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB248_4
# BB#3:
	leaq	49862744(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	647984(%rbx), %rcx
	addq	$47734120, %rbx         # imm = 0x2D85D68
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB248_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_323;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_323
	.align	16, 0x90
_transaction_323:                       # @_transaction_323
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	648232(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB249_6
# BB#1:
	leaq	648368(%rbx), %r12
	cmpl	$0, 648384(%rbx)
	je	.LBB249_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB249_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB249_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB249_6
.LBB249_5:
	leaq	49930192(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47734816, %rbx         # imm = 0x2D86020
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB249_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_324;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_324
	.align	16, 0x90
_transaction_324:                       # @_transaction_324
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	648656(%rbx), %r15
	cmpl	$0, 648672(%rbx)
	je	.LBB250_2
# BB#1:
	leaq	648520(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB250_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB250_4
# BB#3:
	leaq	648520(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB250_5
.LBB250_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	648520(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47734816, %rbx         # imm = 0x2D86020
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB250_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_325;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_325
	.align	16, 0x90
_transaction_325:                       # @_transaction_325
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	648904(%rbx), %r15
	cmpl	$0, 648920(%rbx)
	je	.LBB251_2
# BB#1:
	leaq	648768(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB251_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB251_4
# BB#3:
	leaq	648768(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB251_5
.LBB251_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	648768(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47734816, %rbx         # imm = 0x2D86020
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB251_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_326;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_326
	.align	16, 0x90
_transaction_326:                       # @_transaction_326
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	649152(%rbx), %r15
	cmpl	$0, 649168(%rbx)
	je	.LBB252_2
# BB#1:
	leaq	649016(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB252_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB252_4
# BB#3:
	leaq	649016(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB252_5
.LBB252_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	649016(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47734816, %rbx         # imm = 0x2D86020
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB252_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_327;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_327
	.align	16, 0x90
_transaction_327:                       # @_transaction_327
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	649392(%rbx), %r15
	cmpl	$0, 649408(%rbx)
	je	.LBB253_2
# BB#1:
	leaq	649256(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB253_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB253_4
# BB#3:
	leaq	49904952(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	649256(%rbx), %rcx
	addq	$47735176, %rbx         # imm = 0x2D86188
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB253_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_328;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_328
	.align	16, 0x90
_transaction_328:                       # @_transaction_328
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	649632(%rbx), %r15
	cmpl	$0, 649648(%rbx)
	je	.LBB254_2
# BB#1:
	leaq	649496(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB254_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB254_4
# BB#3:
	leaq	49900064(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	649496(%rbx), %rcx
	addq	$47735176, %rbx         # imm = 0x2D86188
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB254_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_329;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_329
	.align	16, 0x90
_transaction_329:                       # @_transaction_329
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	649872(%rbx), %r15
	cmpl	$0, 649888(%rbx)
	je	.LBB255_2
# BB#1:
	leaq	649736(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB255_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB255_4
# BB#3:
	leaq	49890288(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	649736(%rbx), %rcx
	addq	$47735176, %rbx         # imm = 0x2D86188
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB255_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_330;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_330
	.align	16, 0x90
_transaction_330:                       # @_transaction_330
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	650112(%rbx), %r15
	cmpl	$0, 650128(%rbx)
	je	.LBB256_2
# BB#1:
	leaq	649976(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB256_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB256_4
# BB#3:
	leaq	49885400(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	649976(%rbx), %rcx
	addq	$47735176, %rbx         # imm = 0x2D86188
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB256_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_331;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_331
	.align	16, 0x90
_transaction_331:                       # @_transaction_331
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	650224(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB257_6
# BB#1:
	leaq	650360(%rbx), %r12
	cmpl	$0, 650376(%rbx)
	je	.LBB257_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB257_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB257_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB257_6
.LBB257_5:
	leaq	49952848(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47735872, %rbx         # imm = 0x2D86440
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB257_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_332;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_332
	.align	16, 0x90
_transaction_332:                       # @_transaction_332
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	650648(%rbx), %r15
	cmpl	$0, 650664(%rbx)
	je	.LBB258_2
# BB#1:
	leaq	650512(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB258_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB258_4
# BB#3:
	leaq	650512(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB258_5
.LBB258_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	650512(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47735872, %rbx         # imm = 0x2D86440
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB258_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_333;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_333
	.align	16, 0x90
_transaction_333:                       # @_transaction_333
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	650896(%rbx), %r15
	cmpl	$0, 650912(%rbx)
	je	.LBB259_2
# BB#1:
	leaq	650760(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB259_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB259_4
# BB#3:
	leaq	650760(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB259_5
.LBB259_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	650760(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47735872, %rbx         # imm = 0x2D86440
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB259_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_334;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_334
	.align	16, 0x90
_transaction_334:                       # @_transaction_334
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	651144(%rbx), %r15
	cmpl	$0, 651160(%rbx)
	je	.LBB260_2
# BB#1:
	leaq	651008(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB260_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB260_4
# BB#3:
	leaq	651008(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB260_5
.LBB260_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	651008(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47735872, %rbx         # imm = 0x2D86440
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB260_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_335;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_335
	.align	16, 0x90
_transaction_335:                       # @_transaction_335
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	651384(%rbx), %r15
	cmpl	$0, 651400(%rbx)
	je	.LBB261_2
# BB#1:
	leaq	651248(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB261_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB261_4
# BB#3:
	leaq	49927608(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	651248(%rbx), %rcx
	addq	$47736232, %rbx         # imm = 0x2D865A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB261_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_336;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_336
	.align	16, 0x90
_transaction_336:                       # @_transaction_336
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	651624(%rbx), %r15
	cmpl	$0, 651640(%rbx)
	je	.LBB262_2
# BB#1:
	leaq	651488(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB262_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB262_4
# BB#3:
	leaq	49922720(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	651488(%rbx), %rcx
	addq	$47736232, %rbx         # imm = 0x2D865A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB262_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_337;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_337
	.align	16, 0x90
_transaction_337:                       # @_transaction_337
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	651864(%rbx), %r15
	cmpl	$0, 651880(%rbx)
	je	.LBB263_2
# BB#1:
	leaq	651728(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB263_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB263_4
# BB#3:
	leaq	49917832(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	651728(%rbx), %rcx
	addq	$47736232, %rbx         # imm = 0x2D865A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB263_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_338;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_338
	.align	16, 0x90
_transaction_338:                       # @_transaction_338
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	652104(%rbx), %r15
	cmpl	$0, 652120(%rbx)
	je	.LBB264_2
# BB#1:
	leaq	651968(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB264_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB264_4
# BB#3:
	leaq	49912944(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	651968(%rbx), %rcx
	addq	$47736232, %rbx         # imm = 0x2D865A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB264_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_339;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_339
	.align	16, 0x90
_transaction_339:                       # @_transaction_339
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	652216(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB265_6
# BB#1:
	leaq	652352(%rbx), %r12
	cmpl	$0, 652368(%rbx)
	je	.LBB265_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB265_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB265_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB265_6
.LBB265_5:
	leaq	49980392(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47736928, %rbx         # imm = 0x2D86860
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB265_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_340;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_340
	.align	16, 0x90
_transaction_340:                       # @_transaction_340
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	652640(%rbx), %r15
	cmpl	$0, 652656(%rbx)
	je	.LBB266_2
# BB#1:
	leaq	652504(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB266_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB266_4
# BB#3:
	leaq	652504(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB266_5
.LBB266_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	652504(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47736928, %rbx         # imm = 0x2D86860
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB266_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_341;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_341
	.align	16, 0x90
_transaction_341:                       # @_transaction_341
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	652888(%rbx), %r15
	cmpl	$0, 652904(%rbx)
	je	.LBB267_2
# BB#1:
	leaq	652752(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB267_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB267_4
# BB#3:
	leaq	652752(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB267_5
.LBB267_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	652752(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47736928, %rbx         # imm = 0x2D86860
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB267_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_342;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_342
	.align	16, 0x90
_transaction_342:                       # @_transaction_342
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	653136(%rbx), %r15
	cmpl	$0, 653152(%rbx)
	je	.LBB268_2
# BB#1:
	leaq	653000(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB268_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB268_4
# BB#3:
	leaq	653000(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB268_5
.LBB268_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	653000(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47736928, %rbx         # imm = 0x2D86860
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB268_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_343;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_343
	.align	16, 0x90
_transaction_343:                       # @_transaction_343
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	653376(%rbx), %r15
	cmpl	$0, 653392(%rbx)
	je	.LBB269_2
# BB#1:
	leaq	653240(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB269_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB269_4
# BB#3:
	leaq	49950264(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	653240(%rbx), %rcx
	addq	$47737288, %rbx         # imm = 0x2D869C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB269_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_344;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_344
	.align	16, 0x90
_transaction_344:                       # @_transaction_344
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	653616(%rbx), %r15
	cmpl	$0, 653632(%rbx)
	je	.LBB270_2
# BB#1:
	leaq	653480(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB270_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB270_4
# BB#3:
	leaq	49945376(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	653480(%rbx), %rcx
	addq	$47737288, %rbx         # imm = 0x2D869C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB270_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_345;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_345
	.align	16, 0x90
_transaction_345:                       # @_transaction_345
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	653856(%rbx), %r15
	cmpl	$0, 653872(%rbx)
	je	.LBB271_2
# BB#1:
	leaq	653720(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB271_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB271_4
# BB#3:
	leaq	49940488(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	653720(%rbx), %rcx
	addq	$47737288, %rbx         # imm = 0x2D869C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB271_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_346;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_346
	.align	16, 0x90
_transaction_346:                       # @_transaction_346
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	654096(%rbx), %r15
	cmpl	$0, 654112(%rbx)
	je	.LBB272_2
# BB#1:
	leaq	653960(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB272_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB272_4
# BB#3:
	leaq	49935600(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	653960(%rbx), %rcx
	addq	$47737288, %rbx         # imm = 0x2D869C8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB272_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_347;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_347
	.align	16, 0x90
_transaction_347:                       # @_transaction_347
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	654208(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB273_6
# BB#1:
	leaq	654344(%rbx), %r12
	cmpl	$0, 654360(%rbx)
	je	.LBB273_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB273_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB273_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB273_6
.LBB273_5:
	leaq	50003048(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47737984, %rbx         # imm = 0x2D86C80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB273_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_348;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_348
	.align	16, 0x90
_transaction_348:                       # @_transaction_348
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	654632(%rbx), %r15
	cmpl	$0, 654648(%rbx)
	je	.LBB274_2
# BB#1:
	leaq	654496(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB274_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB274_4
# BB#3:
	leaq	654496(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB274_5
.LBB274_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	654496(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47737984, %rbx         # imm = 0x2D86C80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB274_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_349;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_349
	.align	16, 0x90
_transaction_349:                       # @_transaction_349
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	654880(%rbx), %r15
	cmpl	$0, 654896(%rbx)
	je	.LBB275_2
# BB#1:
	leaq	654744(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB275_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB275_4
# BB#3:
	leaq	654744(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB275_5
.LBB275_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	654744(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47737984, %rbx         # imm = 0x2D86C80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB275_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_350;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_350
	.align	16, 0x90
_transaction_350:                       # @_transaction_350
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	655128(%rbx), %r15
	cmpl	$0, 655144(%rbx)
	je	.LBB276_2
# BB#1:
	leaq	654992(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB276_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB276_4
# BB#3:
	leaq	654992(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB276_5
.LBB276_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	654992(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47737984, %rbx         # imm = 0x2D86C80
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB276_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_351;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_351
	.align	16, 0x90
_transaction_351:                       # @_transaction_351
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	655368(%rbx), %r15
	cmpl	$0, 655384(%rbx)
	je	.LBB277_2
# BB#1:
	leaq	655232(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB277_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB277_4
# BB#3:
	leaq	49977808(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	655232(%rbx), %rcx
	addq	$47738344, %rbx         # imm = 0x2D86DE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB277_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_352;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_352
	.align	16, 0x90
_transaction_352:                       # @_transaction_352
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	655608(%rbx), %r15
	cmpl	$0, 655624(%rbx)
	je	.LBB278_2
# BB#1:
	leaq	655472(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB278_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB278_4
# BB#3:
	leaq	49972920(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	655472(%rbx), %rcx
	addq	$47738344, %rbx         # imm = 0x2D86DE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB278_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_353;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_353
	.align	16, 0x90
_transaction_353:                       # @_transaction_353
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	655848(%rbx), %r15
	cmpl	$0, 655864(%rbx)
	je	.LBB279_2
# BB#1:
	leaq	655712(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB279_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB279_4
# BB#3:
	leaq	49968032(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	655712(%rbx), %rcx
	addq	$47738344, %rbx         # imm = 0x2D86DE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB279_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_354;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_354
	.align	16, 0x90
_transaction_354:                       # @_transaction_354
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	656088(%rbx), %r15
	cmpl	$0, 656104(%rbx)
	je	.LBB280_2
# BB#1:
	leaq	655952(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB280_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB280_4
# BB#3:
	leaq	49963144(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	655952(%rbx), %rcx
	addq	$47738344, %rbx         # imm = 0x2D86DE8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB280_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_355;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_355
	.align	16, 0x90
_transaction_355:                       # @_transaction_355
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	656200(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB281_6
# BB#1:
	leaq	656336(%rbx), %r12
	cmpl	$0, 656352(%rbx)
	je	.LBB281_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB281_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB281_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB281_6
.LBB281_5:
	leaq	50015928(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47739040, %rbx         # imm = 0x2D870A0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB281_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_356;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_356
	.align	16, 0x90
_transaction_356:                       # @_transaction_356
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	656624(%rbx), %r15
	cmpl	$0, 656640(%rbx)
	je	.LBB282_2
# BB#1:
	leaq	656488(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB282_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB282_4
# BB#3:
	leaq	656488(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB282_5
.LBB282_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	656488(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47739040, %rbx         # imm = 0x2D870A0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB282_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_357;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_357
	.align	16, 0x90
_transaction_357:                       # @_transaction_357
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	656872(%rbx), %r15
	cmpl	$0, 656888(%rbx)
	je	.LBB283_2
# BB#1:
	leaq	656736(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB283_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB283_4
# BB#3:
	leaq	656736(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB283_5
.LBB283_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	656736(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47739040, %rbx         # imm = 0x2D870A0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB283_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_358;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_358
	.align	16, 0x90
_transaction_358:                       # @_transaction_358
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	657120(%rbx), %r15
	cmpl	$0, 657136(%rbx)
	je	.LBB284_2
# BB#1:
	leaq	656984(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB284_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB284_4
# BB#3:
	leaq	656984(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB284_5
.LBB284_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	656984(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47739040, %rbx         # imm = 0x2D870A0
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB284_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_359;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_359
	.align	16, 0x90
_transaction_359:                       # @_transaction_359
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	657360(%rbx), %r15
	cmpl	$0, 657376(%rbx)
	je	.LBB285_2
# BB#1:
	leaq	657224(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB285_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB285_4
# BB#3:
	leaq	50000464(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	657224(%rbx), %rcx
	addq	$47739400, %rbx         # imm = 0x2D87208
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB285_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_360;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_360
	.align	16, 0x90
_transaction_360:                       # @_transaction_360
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	657600(%rbx), %r15
	cmpl	$0, 657616(%rbx)
	je	.LBB286_2
# BB#1:
	leaq	657464(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB286_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB286_4
# BB#3:
	leaq	49995576(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	657464(%rbx), %rcx
	addq	$47739400, %rbx         # imm = 0x2D87208
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB286_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_361;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_361
	.align	16, 0x90
_transaction_361:                       # @_transaction_361
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	657840(%rbx), %r15
	cmpl	$0, 657856(%rbx)
	je	.LBB287_2
# BB#1:
	leaq	657704(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB287_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB287_4
# BB#3:
	leaq	49990688(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	657704(%rbx), %rcx
	addq	$47739400, %rbx         # imm = 0x2D87208
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB287_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_362;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_362
	.align	16, 0x90
_transaction_362:                       # @_transaction_362
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	658080(%rbx), %r15
	cmpl	$0, 658096(%rbx)
	je	.LBB288_2
# BB#1:
	leaq	657944(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB288_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB288_4
# BB#3:
	leaq	49985800(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	657944(%rbx), %rcx
	addq	$47739400, %rbx         # imm = 0x2D87208
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB288_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_363;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_363
	.align	16, 0x90
_transaction_363:                       # @_transaction_363
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	658320(%rbx), %r15
	cmpl	$0, 658336(%rbx)
	je	.LBB289_2
# BB#1:
	leaq	658184(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB289_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB289_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	658184(%rbx), %rcx
	addq	$47740088, %rbx         # imm = 0x2D874B8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB289_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_364;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_364
	.align	16, 0x90
_transaction_364:                       # @_transaction_364
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	658560(%rbx), %r15
	cmpl	$0, 658576(%rbx)
	je	.LBB290_2
# BB#1:
	leaq	658424(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB290_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB290_4
# BB#3:
	leaq	50013344(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	658424(%rbx), %rcx
	addq	$47740336, %rbx         # imm = 0x2D875B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB290_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_365;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_365
	.align	16, 0x90
_transaction_365:                       # @_transaction_365
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	658800(%rbx), %r15
	cmpl	$0, 658816(%rbx)
	je	.LBB291_2
# BB#1:
	leaq	658664(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB291_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB291_4
# BB#3:
	leaq	50008456(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	658664(%rbx), %rcx
	addq	$47740336, %rbx         # imm = 0x2D875B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB291_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_366;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_366
	.align	16, 0x90
_transaction_366:                       # @_transaction_366
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r13
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	658912(%rbx), %r15
	movq	%r15, 32(%rsp)
	movq	%r13, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB292_6
# BB#1:
	leaq	659048(%rbx), %r12
	cmpl	$0, 659064(%rbx)
	je	.LBB292_3
# BB#2:
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r13
.LBB292_3:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB292_5
# BB#4:
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB292_6
.LBB292_5:
	leaq	49658320(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r13, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r15, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
	addq	$47740648, %rbx         # imm = 0x2D876E8
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r13, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB292_6:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_367;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_367
	.align	16, 0x90
_transaction_367:                       # @_transaction_367
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	659336(%rbx), %r15
	cmpl	$0, 659352(%rbx)
	je	.LBB293_2
# BB#1:
	leaq	659200(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB293_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB293_4
# BB#3:
	leaq	659200(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB293_5
.LBB293_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	659200(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47740648, %rbx         # imm = 0x2D876E8
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB293_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_368;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_368
	.align	16, 0x90
_transaction_368:                       # @_transaction_368
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	659584(%rbx), %r15
	cmpl	$0, 659600(%rbx)
	je	.LBB294_2
# BB#1:
	leaq	659448(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB294_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB294_4
# BB#3:
	leaq	659448(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB294_5
.LBB294_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	659448(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47740648, %rbx         # imm = 0x2D876E8
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB294_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_369;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_369
	.align	16, 0x90
_transaction_369:                       # @_transaction_369
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	659832(%rbx), %r15
	cmpl	$0, 659848(%rbx)
	je	.LBB295_2
# BB#1:
	leaq	659696(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB295_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB295_4
# BB#3:
	leaq	659696(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB295_5
.LBB295_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	659696(%rbx), %r15
	movq	$0, 32(%rsp)
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
	addq	$47740648, %rbx         # imm = 0x2D876E8
	movq	%rbx, 32(%rsp)
	movq	%r15, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB295_5:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_370;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_370
	.align	16, 0x90
_transaction_370:                       # @_transaction_370
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	660072(%rbx), %r15
	cmpl	$0, 660088(%rbx)
	je	.LBB296_2
# BB#1:
	leaq	659936(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB296_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB296_4
# BB#3:
	leaq	50026224(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	659936(%rbx), %rcx
	addq	$47741008, %rbx         # imm = 0x2D87850
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB296_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_371;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_371
	.align	16, 0x90
_transaction_371:                       # @_transaction_371
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	660312(%rbx), %r15
	cmpl	$0, 660328(%rbx)
	je	.LBB297_2
# BB#1:
	leaq	660176(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB297_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB297_4
# BB#3:
	leaq	50021336(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	660176(%rbx), %rcx
	addq	$47741008, %rbx         # imm = 0x2D87850
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB297_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_372;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_372
	.align	16, 0x90
_transaction_372:                       # @_transaction_372
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	660552(%rbx), %r15
	cmpl	$0, 660568(%rbx)
	je	.LBB298_2
# BB#1:
	leaq	660416(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB298_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB298_4
# BB#3:
	leaq	49958256(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	660416(%rbx), %rcx
	addq	$47741008, %rbx         # imm = 0x2D87850
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB298_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_373;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_373
	.align	16, 0x90
_transaction_373:                       # @_transaction_373
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	660792(%rbx), %r15
	cmpl	$0, 660808(%rbx)
	je	.LBB299_2
# BB#1:
	leaq	660656(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB299_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB299_4
# BB#3:
	leaq	49895176(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	660656(%rbx), %rcx
	addq	$47741008, %rbx         # imm = 0x2D87850
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB299_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_374;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_374
	.align	16, 0x90
_transaction_374:                       # @_transaction_374
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	661032(%rbx), %r14
	cmpl	$0, 661048(%rbx)
	je	.LBB300_2
# BB#1:
	leaq	660896(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB300_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB300_4
# BB#3:
	leaq	50559072(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50798432, %rbx         # imm = 0x3071F60
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB300_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_375;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_375
	.align	16, 0x90
_transaction_375:                       # @_transaction_375
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	661456(%rbx), %r14
	cmpl	$0, 661472(%rbx)
	je	.LBB301_2
# BB#1:
	leaq	661320(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB301_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB301_4
# BB#3:
	leaq	50566704(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50806240, %rbx         # imm = 0x3073DE0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB301_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_376;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_376
	.align	16, 0x90
_transaction_376:                       # @_transaction_376
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	661880(%rbx), %r14
	cmpl	$0, 661896(%rbx)
	je	.LBB302_2
# BB#1:
	leaq	661744(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB302_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB302_4
# BB#3:
	leaq	50574336(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50814048, %rbx         # imm = 0x3075C60
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB302_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_377;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_377
	.align	16, 0x90
_transaction_377:                       # @_transaction_377
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	662304(%rbx), %r14
	cmpl	$0, 662320(%rbx)
	je	.LBB303_2
# BB#1:
	leaq	662168(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB303_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB303_4
# BB#3:
	leaq	50581968(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50821856, %rbx         # imm = 0x3077AE0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB303_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_378;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_378
	.align	16, 0x90
_transaction_378:                       # @_transaction_378
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	662728(%rbx), %r14
	cmpl	$0, 662744(%rbx)
	je	.LBB304_2
# BB#1:
	leaq	662592(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB304_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB304_4
# BB#3:
	leaq	50589600(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50829664, %rbx         # imm = 0x3079960
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB304_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_379;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_379
	.align	16, 0x90
_transaction_379:                       # @_transaction_379
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	663152(%rbx), %r14
	cmpl	$0, 663168(%rbx)
	je	.LBB305_2
# BB#1:
	leaq	663016(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB305_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB305_4
# BB#3:
	leaq	50597232(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50837472, %rbx         # imm = 0x307B7E0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB305_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_380;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_380
	.align	16, 0x90
_transaction_380:                       # @_transaction_380
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	663576(%rbx), %r14
	cmpl	$0, 663592(%rbx)
	je	.LBB306_2
# BB#1:
	leaq	663440(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB306_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB306_4
# BB#3:
	leaq	50604864(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50845280, %rbx         # imm = 0x307D660
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB306_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_381;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_381
	.align	16, 0x90
_transaction_381:                       # @_transaction_381
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	664000(%rbx), %r14
	cmpl	$0, 664016(%rbx)
	je	.LBB307_2
# BB#1:
	leaq	663864(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB307_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB307_4
# BB#3:
	leaq	50617904(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50853088, %rbx         # imm = 0x307F4E0
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB307_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_382;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_382
	.align	16, 0x90
_transaction_382:                       # @_transaction_382
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	664424(%rbx), %r14
	cmpl	$0, 664440(%rbx)
	je	.LBB308_2
# BB#1:
	leaq	664288(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB308_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB308_4
# BB#3:
	leaq	50644424(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50870120, %rbx         # imm = 0x3083768
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB308_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_383;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_383
	.align	16, 0x90
_transaction_383:                       # @_transaction_383
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	664848(%rbx), %r14
	cmpl	$0, 664864(%rbx)
	je	.LBB309_2
# BB#1:
	leaq	664712(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB309_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB309_4
# BB#3:
	leaq	50652056(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50877928, %rbx         # imm = 0x30855E8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB309_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_384;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_384
	.align	16, 0x90
_transaction_384:                       # @_transaction_384
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	665272(%rbx), %r14
	cmpl	$0, 665288(%rbx)
	je	.LBB310_2
# BB#1:
	leaq	665136(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB310_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB310_4
# BB#3:
	leaq	50659688(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50885736, %rbx         # imm = 0x3087468
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB310_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_385;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_385
	.align	16, 0x90
_transaction_385:                       # @_transaction_385
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	665696(%rbx), %r14
	cmpl	$0, 665712(%rbx)
	je	.LBB311_2
# BB#1:
	leaq	665560(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB311_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB311_4
# BB#3:
	leaq	50667320(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50893544, %rbx         # imm = 0x30892E8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB311_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_386;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_386
	.align	16, 0x90
_transaction_386:                       # @_transaction_386
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	666120(%rbx), %r14
	cmpl	$0, 666136(%rbx)
	je	.LBB312_2
# BB#1:
	leaq	665984(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB312_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB312_4
# BB#3:
	leaq	50674952(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50901352, %rbx         # imm = 0x308B168
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB312_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_387;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_387
	.align	16, 0x90
_transaction_387:                       # @_transaction_387
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	666544(%rbx), %r14
	cmpl	$0, 666560(%rbx)
	je	.LBB313_2
# BB#1:
	leaq	666408(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB313_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB313_4
# BB#3:
	leaq	50682584(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50909160, %rbx         # imm = 0x308CFE8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB313_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_388;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_388
	.align	16, 0x90
_transaction_388:                       # @_transaction_388
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	666968(%rbx), %r14
	cmpl	$0, 666984(%rbx)
	je	.LBB314_2
# BB#1:
	leaq	666832(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB314_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB314_4
# BB#3:
	leaq	50690216(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50916968, %rbx         # imm = 0x308EE68
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB314_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_389;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_389
	.align	16, 0x90
_transaction_389:                       # @_transaction_389
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	667392(%rbx), %r14
	cmpl	$0, 667408(%rbx)
	je	.LBB315_2
# BB#1:
	leaq	667256(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB315_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB315_4
# BB#3:
	leaq	50697848(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50924776, %rbx         # imm = 0x3090CE8
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB315_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_390;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_390
	.align	16, 0x90
_transaction_390:                       # @_transaction_390
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	667816(%rbx), %r14
	cmpl	$0, 667832(%rbx)
	je	.LBB316_2
# BB#1:
	leaq	667680(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB316_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB316_4
# BB#3:
	leaq	50705480(%rbx), %rcx
	movq	__imp__iki_schedule_process_priority(%rip), %r12
	callq	*%r12
	addq	$50932584, %rbx         # imm = 0x3092B68
	movq	%rbx, %rcx
	callq	*%r12
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB316_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_391;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_391
	.align	16, 0x90
_transaction_391:                       # @_transaction_391
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	668240(%r14), %r15
	cmpl	$0, 668256(%r14)
	je	.LBB317_2
# BB#1:
	leaq	668104(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB317_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB317_40
# BB#3:
	testl	%esi, %esi
	jne	.LBB317_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_5
# BB#41:
	leaq	50711272(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_7
# BB#42:
	leaq	50755264(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_9
# BB#43:
	leaq	50760152(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_11
# BB#44:
	leaq	50765040(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_13
# BB#45:
	leaq	50769928(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_15
# BB#46:
	leaq	50774816(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_17
# BB#47:
	leaq	50779704(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_19
# BB#48:
	leaq	50784592(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_21
# BB#49:
	leaq	50789480(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_23
# BB#50:
	leaq	50794368(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_25
# BB#51:
	leaq	50716160(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_27
# BB#52:
	leaq	50721048(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_29
# BB#53:
	leaq	50725936(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_31
# BB#54:
	leaq	50730824(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_33
# BB#55:
	leaq	50735712(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_35
# BB#56:
	leaq	50740600(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_37
# BB#57:
	leaq	50745488(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB317_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB317_39
# BB#58:
	addq	$50750376, %r14         # imm = 0x30663A8
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB317_39:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB317_40:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_392;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_392
	.align	16, 0x90
_transaction_392:                       # @_transaction_392
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	668400(%rbx), %r14
	cmpl	$0, 668416(%rbx)
	je	.LBB318_2
# BB#1:
	leaq	668264(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB318_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB318_4
# BB#3:
	addq	$50555928, %rbx         # imm = 0x3036C18
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB318_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_393;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_393
	.align	16, 0x90
_transaction_393:                       # @_transaction_393
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	668560(%rbx), %r14
	cmpl	$0, 668576(%rbx)
	je	.LBB319_2
# BB#1:
	leaq	668424(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB319_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB319_4
# BB#3:
	addq	$50563560, %rbx         # imm = 0x30389E8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB319_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_394;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_394
	.align	16, 0x90
_transaction_394:                       # @_transaction_394
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	668720(%rbx), %r14
	cmpl	$0, 668736(%rbx)
	je	.LBB320_2
# BB#1:
	leaq	668584(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB320_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB320_4
# BB#3:
	addq	$50571192, %rbx         # imm = 0x303A7B8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB320_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_395;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_395
	.align	16, 0x90
_transaction_395:                       # @_transaction_395
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	668880(%rbx), %r14
	cmpl	$0, 668896(%rbx)
	je	.LBB321_2
# BB#1:
	leaq	668744(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB321_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB321_4
# BB#3:
	addq	$50578824, %rbx         # imm = 0x303C588
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB321_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_396;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_396
	.align	16, 0x90
_transaction_396:                       # @_transaction_396
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	669040(%rbx), %r14
	cmpl	$0, 669056(%rbx)
	je	.LBB322_2
# BB#1:
	leaq	668904(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB322_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB322_4
# BB#3:
	addq	$50586456, %rbx         # imm = 0x303E358
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB322_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_397;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_397
	.align	16, 0x90
_transaction_397:                       # @_transaction_397
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	669200(%rbx), %r14
	cmpl	$0, 669216(%rbx)
	je	.LBB323_2
# BB#1:
	leaq	669064(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB323_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB323_4
# BB#3:
	addq	$50594088, %rbx         # imm = 0x3040128
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB323_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_398;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_398
	.align	16, 0x90
_transaction_398:                       # @_transaction_398
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	669360(%rbx), %r14
	cmpl	$0, 669376(%rbx)
	je	.LBB324_2
# BB#1:
	leaq	669224(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB324_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB324_4
# BB#3:
	addq	$50601720, %rbx         # imm = 0x3041EF8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB324_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_399;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_399
	.align	16, 0x90
_transaction_399:                       # @_transaction_399
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	669520(%rcx), %r14
	cmpl	$0, 669536(%rcx)
	je	.LBB325_2
# BB#1:
	addq	$669384, %rcx           # imm = 0xA36C8
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB325_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB325_4
# BB#3:
	leaq	ng17(%rip), %rcx
	movl	$17, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB325_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_400;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_400
	.align	16, 0x90
_transaction_400:                       # @_transaction_400
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	669680(%rbx), %r14
	cmpl	$0, 669696(%rbx)
	je	.LBB326_2
# BB#1:
	leaq	669544(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB326_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB326_4
# BB#3:
	addq	$50609352, %rbx         # imm = 0x3043CC8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB326_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_401;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_401
	.align	16, 0x90
_transaction_401:                       # @_transaction_401
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	669840(%rcx), %r14
	cmpl	$0, 669856(%rcx)
	je	.LBB327_2
# BB#1:
	addq	$669704, %rcx           # imm = 0xA3808
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB327_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB327_4
# BB#3:
	leaq	ng18(%rip), %rcx
	movl	$56, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB327_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_402;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_402
	.align	16, 0x90
_transaction_402:                       # @_transaction_402
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	670000(%rcx), %r14
	cmpl	$0, 670016(%rcx)
	je	.LBB328_2
# BB#1:
	addq	$669864, %rcx           # imm = 0xA38A8
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB328_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB328_4
# BB#3:
	leaq	ng19(%rip), %rcx
	movl	$18, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB328_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_403;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_403
	.align	16, 0x90
_transaction_403:                       # @_transaction_403
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	670160(%rbx), %r14
	cmpl	$0, 670176(%rbx)
	je	.LBB329_2
# BB#1:
	leaq	670024(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB329_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB329_4
# BB#3:
	addq	$50626128, %rbx         # imm = 0x3047E50
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB329_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_404;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_404
	.align	16, 0x90
_transaction_404:                       # @_transaction_404
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	670320(%rbx), %r14
	cmpl	$0, 670336(%rbx)
	je	.LBB330_2
# BB#1:
	leaq	670184(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB330_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB330_4
# BB#3:
	addq	$50626296, %rbx         # imm = 0x3047EF8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB330_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_405;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_405
	.align	16, 0x90
_transaction_405:                       # @_transaction_405
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	670480(%rbx), %r14
	cmpl	$0, 670496(%rbx)
	je	.LBB331_2
# BB#1:
	leaq	670344(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB331_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB331_4
# BB#3:
	addq	$50641280, %rbx         # imm = 0x304B980
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB331_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_406;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_406
	.align	16, 0x90
_transaction_406:                       # @_transaction_406
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	670640(%rbx), %r14
	cmpl	$0, 670656(%rbx)
	je	.LBB332_2
# BB#1:
	leaq	670504(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB332_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB332_4
# BB#3:
	addq	$50648912, %rbx         # imm = 0x304D750
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB332_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_407;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_407
	.align	16, 0x90
_transaction_407:                       # @_transaction_407
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	670800(%rbx), %r14
	cmpl	$0, 670816(%rbx)
	je	.LBB333_2
# BB#1:
	leaq	670664(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB333_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB333_4
# BB#3:
	addq	$50656544, %rbx         # imm = 0x304F520
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB333_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_408;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_408
	.align	16, 0x90
_transaction_408:                       # @_transaction_408
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	670960(%rbx), %r14
	cmpl	$0, 670976(%rbx)
	je	.LBB334_2
# BB#1:
	leaq	670824(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB334_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB334_4
# BB#3:
	addq	$50664176, %rbx         # imm = 0x30512F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB334_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_409;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_409
	.align	16, 0x90
_transaction_409:                       # @_transaction_409
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	671120(%rbx), %r14
	cmpl	$0, 671136(%rbx)
	je	.LBB335_2
# BB#1:
	leaq	670984(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB335_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB335_4
# BB#3:
	addq	$50671808, %rbx         # imm = 0x30530C0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB335_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_410;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_410
	.align	16, 0x90
_transaction_410:                       # @_transaction_410
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	671280(%rbx), %r14
	cmpl	$0, 671296(%rbx)
	je	.LBB336_2
# BB#1:
	leaq	671144(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB336_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB336_4
# BB#3:
	addq	$50679440, %rbx         # imm = 0x3054E90
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB336_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_411;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_411
	.align	16, 0x90
_transaction_411:                       # @_transaction_411
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	671440(%rbx), %r14
	cmpl	$0, 671456(%rbx)
	je	.LBB337_2
# BB#1:
	leaq	671304(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB337_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB337_4
# BB#3:
	addq	$50687072, %rbx         # imm = 0x3056C60
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB337_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_412;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_412
	.align	16, 0x90
_transaction_412:                       # @_transaction_412
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	671600(%rbx), %r14
	cmpl	$0, 671616(%rbx)
	je	.LBB338_2
# BB#1:
	leaq	671464(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB338_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB338_4
# BB#3:
	addq	$50694704, %rbx         # imm = 0x3058A30
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB338_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_413;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_413
	.align	16, 0x90
_transaction_413:                       # @_transaction_413
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	671760(%rbx), %r14
	cmpl	$0, 671776(%rbx)
	je	.LBB339_2
# BB#1:
	leaq	671624(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB339_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB339_4
# BB#3:
	addq	$50702336, %rbx         # imm = 0x305A800
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB339_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_414;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_414
	.align	16, 0x90
_transaction_414:                       # @_transaction_414
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	671920(%rbx), %r15
	cmpl	$0, 671936(%rbx)
	je	.LBB340_2
# BB#1:
	leaq	671784(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB340_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB340_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$671784, %rbx           # imm = 0xA4028
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB340_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_415;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_415
	.align	16, 0x90
_transaction_415:                       # @_transaction_415
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	672344(%rbx), %r15
	cmpl	$0, 672360(%rbx)
	je	.LBB341_2
# BB#1:
	leaq	672208(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB341_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB341_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$672208, %rbx           # imm = 0xA41D0
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB341_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_416;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_416
	.align	16, 0x90
_transaction_416:                       # @_transaction_416
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	672768(%rbx), %r15
	cmpl	$0, 672784(%rbx)
	je	.LBB342_2
# BB#1:
	leaq	672632(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB342_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB342_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$672632, %rbx           # imm = 0xA4378
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB342_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_417;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_417
	.align	16, 0x90
_transaction_417:                       # @_transaction_417
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	673192(%rbx), %r15
	cmpl	$0, 673208(%rbx)
	je	.LBB343_2
# BB#1:
	leaq	673056(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB343_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB343_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$673056, %rbx           # imm = 0xA4520
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB343_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_418;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_418
	.align	16, 0x90
_transaction_418:                       # @_transaction_418
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	673616(%rbx), %r15
	cmpl	$0, 673632(%rbx)
	je	.LBB344_2
# BB#1:
	leaq	673480(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB344_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB344_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$673480, %rbx           # imm = 0xA46C8
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB344_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_419;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_419
	.align	16, 0x90
_transaction_419:                       # @_transaction_419
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	674040(%rbx), %r15
	cmpl	$0, 674056(%rbx)
	je	.LBB345_2
# BB#1:
	leaq	673904(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB345_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB345_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$673904, %rbx           # imm = 0xA4870
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB345_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_420;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_420
	.align	16, 0x90
_transaction_420:                       # @_transaction_420
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	674464(%rbx), %r15
	cmpl	$0, 674480(%rbx)
	je	.LBB346_2
# BB#1:
	leaq	674328(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB346_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB346_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$674328, %rbx           # imm = 0xA4A18
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB346_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_421;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_421
	.align	16, 0x90
_transaction_421:                       # @_transaction_421
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	674888(%rbx), %r15
	cmpl	$0, 674904(%rbx)
	je	.LBB347_2
# BB#1:
	leaq	674752(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB347_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB347_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$674752, %rbx           # imm = 0xA4BC0
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB347_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_422;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_422
	.align	16, 0x90
_transaction_422:                       # @_transaction_422
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	675312(%rbx), %r15
	cmpl	$0, 675328(%rbx)
	je	.LBB348_2
# BB#1:
	leaq	675176(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB348_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB348_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$675176, %rbx           # imm = 0xA4D68
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB348_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_423;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_423
	.align	16, 0x90
_transaction_423:                       # @_transaction_423
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	675736(%rbx), %r15
	cmpl	$0, 675752(%rbx)
	je	.LBB349_2
# BB#1:
	leaq	675600(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB349_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB349_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$675600, %rbx           # imm = 0xA4F10
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB349_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_424;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_424
	.align	16, 0x90
_transaction_424:                       # @_transaction_424
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	676160(%rbx), %r15
	cmpl	$0, 676176(%rbx)
	je	.LBB350_2
# BB#1:
	leaq	676024(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB350_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB350_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$676024, %rbx           # imm = 0xA50B8
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB350_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_425;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_425
	.align	16, 0x90
_transaction_425:                       # @_transaction_425
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	676584(%rbx), %r15
	cmpl	$0, 676600(%rbx)
	je	.LBB351_2
# BB#1:
	leaq	676448(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB351_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB351_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$676448, %rbx           # imm = 0xA5260
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB351_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_426;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_426
	.align	16, 0x90
_transaction_426:                       # @_transaction_426
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	677008(%rbx), %r15
	cmpl	$0, 677024(%rbx)
	je	.LBB352_2
# BB#1:
	leaq	676872(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB352_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB352_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$676872, %rbx           # imm = 0xA5408
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB352_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_427;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_427
	.align	16, 0x90
_transaction_427:                       # @_transaction_427
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	677432(%rbx), %r15
	cmpl	$0, 677448(%rbx)
	je	.LBB353_2
# BB#1:
	leaq	677296(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB353_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB353_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$677296, %rbx           # imm = 0xA55B0
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB353_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_428;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_428
	.align	16, 0x90
_transaction_428:                       # @_transaction_428
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	677856(%rbx), %r15
	cmpl	$0, 677872(%rbx)
	je	.LBB354_2
# BB#1:
	leaq	677720(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB354_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB354_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$677720, %rbx           # imm = 0xA5758
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB354_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_429;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_429
	.align	16, 0x90
_transaction_429:                       # @_transaction_429
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	678280(%rbx), %r15
	cmpl	$0, 678296(%rbx)
	je	.LBB355_2
# BB#1:
	leaq	678144(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB355_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB355_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$678144, %rbx           # imm = 0xA5900
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB355_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_430;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_430
	.align	16, 0x90
_transaction_430:                       # @_transaction_430
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	678704(%rbx), %r15
	cmpl	$0, 678720(%rbx)
	je	.LBB356_2
# BB#1:
	leaq	678568(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB356_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB356_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$678568, %rbx           # imm = 0xA5AA8
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB356_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_431;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_431
	.align	16, 0x90
_transaction_431:                       # @_transaction_431
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	679128(%rbx), %r15
	cmpl	$0, 679144(%rbx)
	je	.LBB357_2
# BB#1:
	leaq	678992(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB357_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB357_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$678992, %rbx           # imm = 0xA5C50
	leaq	ng20(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 40(%rsp)
	movq	%rbx, %rcx
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction_multiple(%rip)
.LBB357_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_432;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_432
	.align	16, 0x90
_transaction_432:                       # @_transaction_432
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	679552(%r14), %r15
	cmpl	$0, 679568(%r14)
	je	.LBB358_2
# BB#1:
	leaq	679416(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB358_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB358_40
# BB#3:
	testl	%esi, %esi
	jne	.LBB358_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_5
# BB#41:
	leaq	50941216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_7
# BB#42:
	leaq	50985208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_9
# BB#43:
	leaq	50990096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_11
# BB#44:
	leaq	50994984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_13
# BB#45:
	leaq	50999872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_15
# BB#46:
	leaq	51004760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_17
# BB#47:
	leaq	51009648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_19
# BB#48:
	leaq	51014536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_21
# BB#49:
	leaq	51019424(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_23
# BB#50:
	leaq	51024312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_25
# BB#51:
	leaq	50946104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_27
# BB#52:
	leaq	50950992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_29
# BB#53:
	leaq	50955880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_31
# BB#54:
	leaq	50960768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_33
# BB#55:
	leaq	50965656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_35
# BB#56:
	leaq	50970544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_37
# BB#57:
	leaq	50975432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB358_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB358_39
# BB#58:
	addq	$50980320, %r14         # imm = 0x309E5E0
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB358_39:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB358_40:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_433;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_433
	.align	16, 0x90
_transaction_433:                       # @_transaction_433
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	679712(%rbx), %r14
	cmpl	$0, 679728(%rbx)
	je	.LBB359_2
# BB#1:
	leaq	679576(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB359_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB359_4
# BB#3:
	addq	$50798600, %rbx         # imm = 0x3072008
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB359_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_434;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_434
	.align	16, 0x90
_transaction_434:                       # @_transaction_434
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	679872(%rbx), %r14
	cmpl	$0, 679888(%rbx)
	je	.LBB360_2
# BB#1:
	leaq	679736(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB360_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB360_4
# BB#3:
	addq	$50806408, %rbx         # imm = 0x3073E88
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB360_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_435;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_435
	.align	16, 0x90
_transaction_435:                       # @_transaction_435
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	680032(%rbx), %r14
	cmpl	$0, 680048(%rbx)
	je	.LBB361_2
# BB#1:
	leaq	679896(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB361_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB361_4
# BB#3:
	addq	$50814216, %rbx         # imm = 0x3075D08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB361_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_436;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_436
	.align	16, 0x90
_transaction_436:                       # @_transaction_436
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	680192(%rbx), %r14
	cmpl	$0, 680208(%rbx)
	je	.LBB362_2
# BB#1:
	leaq	680056(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB362_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB362_4
# BB#3:
	addq	$50822024, %rbx         # imm = 0x3077B88
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB362_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_437;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_437
	.align	16, 0x90
_transaction_437:                       # @_transaction_437
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	680352(%rbx), %r14
	cmpl	$0, 680368(%rbx)
	je	.LBB363_2
# BB#1:
	leaq	680216(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB363_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB363_4
# BB#3:
	addq	$50829832, %rbx         # imm = 0x3079A08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB363_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_438;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_438
	.align	16, 0x90
_transaction_438:                       # @_transaction_438
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	680512(%rbx), %r14
	cmpl	$0, 680528(%rbx)
	je	.LBB364_2
# BB#1:
	leaq	680376(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB364_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB364_4
# BB#3:
	addq	$50837640, %rbx         # imm = 0x307B888
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB364_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_439;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_439
	.align	16, 0x90
_transaction_439:                       # @_transaction_439
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	680672(%rbx), %r14
	cmpl	$0, 680688(%rbx)
	je	.LBB365_2
# BB#1:
	leaq	680536(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB365_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB365_4
# BB#3:
	addq	$50845448, %rbx         # imm = 0x307D708
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB365_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_440;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_440
	.align	16, 0x90
_transaction_440:                       # @_transaction_440
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	680832(%rcx), %r14
	cmpl	$0, 680848(%rcx)
	je	.LBB366_2
# BB#1:
	addq	$680696, %rcx           # imm = 0xA62F8
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB366_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB366_4
# BB#3:
	leaq	ng21(%rip), %rcx
	movl	$17, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB366_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_441;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_441
	.align	16, 0x90
_transaction_441:                       # @_transaction_441
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	680992(%rbx), %r14
	cmpl	$0, 681008(%rbx)
	je	.LBB367_2
# BB#1:
	leaq	680856(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB367_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB367_4
# BB#3:
	addq	$50853256, %rbx         # imm = 0x307F588
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB367_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_442;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_442
	.align	16, 0x90
_transaction_442:                       # @_transaction_442
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	681152(%rbx), %r14
	cmpl	$0, 681168(%rbx)
	je	.LBB368_2
# BB#1:
	leaq	681016(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB368_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB368_4
# BB#3:
	addq	$50870288, %rbx         # imm = 0x3083810
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB368_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_443;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_443
	.align	16, 0x90
_transaction_443:                       # @_transaction_443
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	681312(%rbx), %r14
	cmpl	$0, 681328(%rbx)
	je	.LBB369_2
# BB#1:
	leaq	681176(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB369_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB369_4
# BB#3:
	addq	$50878096, %rbx         # imm = 0x3085690
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB369_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_444;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_444
	.align	16, 0x90
_transaction_444:                       # @_transaction_444
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	681472(%rbx), %r14
	cmpl	$0, 681488(%rbx)
	je	.LBB370_2
# BB#1:
	leaq	681336(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB370_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB370_4
# BB#3:
	addq	$50885904, %rbx         # imm = 0x3087510
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB370_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_445;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_445
	.align	16, 0x90
_transaction_445:                       # @_transaction_445
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	681632(%rbx), %r14
	cmpl	$0, 681648(%rbx)
	je	.LBB371_2
# BB#1:
	leaq	681496(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB371_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB371_4
# BB#3:
	addq	$50893712, %rbx         # imm = 0x3089390
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB371_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_446;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_446
	.align	16, 0x90
_transaction_446:                       # @_transaction_446
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	681792(%rbx), %r14
	cmpl	$0, 681808(%rbx)
	je	.LBB372_2
# BB#1:
	leaq	681656(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB372_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB372_4
# BB#3:
	addq	$50901520, %rbx         # imm = 0x308B210
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB372_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_447;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_447
	.align	16, 0x90
_transaction_447:                       # @_transaction_447
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	681952(%rbx), %r14
	cmpl	$0, 681968(%rbx)
	je	.LBB373_2
# BB#1:
	leaq	681816(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB373_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB373_4
# BB#3:
	addq	$50909328, %rbx         # imm = 0x308D090
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB373_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_448;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_448
	.align	16, 0x90
_transaction_448:                       # @_transaction_448
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	682112(%rbx), %r14
	cmpl	$0, 682128(%rbx)
	je	.LBB374_2
# BB#1:
	leaq	681976(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB374_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB374_4
# BB#3:
	addq	$50917136, %rbx         # imm = 0x308EF10
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB374_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_449;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_449
	.align	16, 0x90
_transaction_449:                       # @_transaction_449
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	682272(%rbx), %r14
	cmpl	$0, 682288(%rbx)
	je	.LBB375_2
# BB#1:
	leaq	682136(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB375_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB375_4
# BB#3:
	addq	$50924944, %rbx         # imm = 0x3090D90
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB375_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_450;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_450
	.align	16, 0x90
_transaction_450:                       # @_transaction_450
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$40, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	682432(%rbx), %r14
	cmpl	$0, 682448(%rbx)
	je	.LBB376_2
# BB#1:
	leaq	682296(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB376_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB376_4
# BB#3:
	addq	$50932752, %rbx         # imm = 0x3092C10
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB376_4:
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_451;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_451
	.align	16, 0x90
_transaction_451:                       # @_transaction_451
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	682592(%rbx), %r15
	cmpl	$0, 682608(%rbx)
	je	.LBB377_2
# BB#1:
	leaq	682456(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB377_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB377_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	682456(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB377_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_452;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_452
	.align	16, 0x90
_transaction_452:                       # @_transaction_452
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	683016(%rbx), %r15
	cmpl	$0, 683032(%rbx)
	je	.LBB378_2
# BB#1:
	leaq	682880(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB378_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB378_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	682880(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB378_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_453;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_453
	.align	16, 0x90
_transaction_453:                       # @_transaction_453
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	683440(%rbx), %r15
	cmpl	$0, 683456(%rbx)
	je	.LBB379_2
# BB#1:
	leaq	683304(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB379_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB379_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	683304(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB379_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_454;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_454
	.align	16, 0x90
_transaction_454:                       # @_transaction_454
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	683864(%rbx), %r15
	cmpl	$0, 683880(%rbx)
	je	.LBB380_2
# BB#1:
	leaq	683728(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB380_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB380_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	683728(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB380_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_455;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_455
	.align	16, 0x90
_transaction_455:                       # @_transaction_455
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	684288(%rbx), %r15
	cmpl	$0, 684304(%rbx)
	je	.LBB381_2
# BB#1:
	leaq	684152(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB381_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB381_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	684152(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB381_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_456;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_456
	.align	16, 0x90
_transaction_456:                       # @_transaction_456
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	684712(%rbx), %r15
	cmpl	$0, 684728(%rbx)
	je	.LBB382_2
# BB#1:
	leaq	684576(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB382_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB382_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	684576(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB382_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_457;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_457
	.align	16, 0x90
_transaction_457:                       # @_transaction_457
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	685136(%rbx), %r15
	cmpl	$0, 685152(%rbx)
	je	.LBB383_2
# BB#1:
	leaq	685000(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB383_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB383_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	685000(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB383_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_458;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_458
	.align	16, 0x90
_transaction_458:                       # @_transaction_458
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	685560(%rbx), %r15
	cmpl	$0, 685576(%rbx)
	je	.LBB384_2
# BB#1:
	leaq	685424(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB384_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB384_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	685424(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB384_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_459;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_459
	.align	16, 0x90
_transaction_459:                       # @_transaction_459
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	685984(%rbx), %r15
	cmpl	$0, 686000(%rbx)
	je	.LBB385_2
# BB#1:
	leaq	685848(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB385_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB385_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	685848(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB385_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_460;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_460
	.align	16, 0x90
_transaction_460:                       # @_transaction_460
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	686408(%rbx), %r15
	cmpl	$0, 686424(%rbx)
	je	.LBB386_2
# BB#1:
	leaq	686272(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB386_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB386_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	686272(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB386_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_461;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_461
	.align	16, 0x90
_transaction_461:                       # @_transaction_461
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	686832(%rbx), %r15
	cmpl	$0, 686848(%rbx)
	je	.LBB387_2
# BB#1:
	leaq	686696(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB387_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB387_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	686696(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB387_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_462;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_462
	.align	16, 0x90
_transaction_462:                       # @_transaction_462
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	687256(%rbx), %r15
	cmpl	$0, 687272(%rbx)
	je	.LBB388_2
# BB#1:
	leaq	687120(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB388_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB388_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	687120(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB388_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_463;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_463
	.align	16, 0x90
_transaction_463:                       # @_transaction_463
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	687680(%rbx), %r15
	cmpl	$0, 687696(%rbx)
	je	.LBB389_2
# BB#1:
	leaq	687544(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB389_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB389_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	687544(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB389_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_464;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_464
	.align	16, 0x90
_transaction_464:                       # @_transaction_464
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	688104(%rbx), %r15
	cmpl	$0, 688120(%rbx)
	je	.LBB390_2
# BB#1:
	leaq	687968(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB390_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB390_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	687968(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB390_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_465;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_465
	.align	16, 0x90
_transaction_465:                       # @_transaction_465
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	688528(%rbx), %r15
	cmpl	$0, 688544(%rbx)
	je	.LBB391_2
# BB#1:
	leaq	688392(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB391_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB391_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	688392(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB391_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_466;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_466
	.align	16, 0x90
_transaction_466:                       # @_transaction_466
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	688952(%rbx), %r15
	cmpl	$0, 688968(%rbx)
	je	.LBB392_2
# BB#1:
	leaq	688816(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB392_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB392_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	688816(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB392_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_467;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_467
	.align	16, 0x90
_transaction_467:                       # @_transaction_467
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	689376(%rbx), %r15
	cmpl	$0, 689392(%rbx)
	je	.LBB393_2
# BB#1:
	leaq	689240(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB393_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB393_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	689240(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB393_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_468;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_468
	.align	16, 0x90
_transaction_468:                       # @_transaction_468
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	689800(%rbx), %r15
	cmpl	$0, 689816(%rbx)
	je	.LBB394_2
# BB#1:
	leaq	689664(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB394_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB394_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	689664(%rbx), %rcx
	addq	$47785640, %rbx         # imm = 0x2D926A8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB394_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_469;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_469
	.align	16, 0x90
_transaction_469:                       # @_transaction_469
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movq	%rcx, %r14
	movl	48(%rbp), %edi
	leaq	690224(%r14), %r15
	cmpl	$0, 690248(%r14)
	je	.LBB395_2
# BB#1:
	leaq	690088(%r14), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB395_2:
	movl	%edi, %r12d
	subl	%esi, %r12d
	incl	%r12d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%r12d, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB395_100
# BB#3:
	testl	%esi, %esi
	jne	.LBB395_5
# BB#4:
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_5
# BB#101:
	leaq	51033016(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_5:
	testl	%edi, %edi
	sete	%al
	cmpl	$1, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_7
# BB#6:
	movl	$1, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_7
# BB#102:
	leaq	51086784(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_7:
	cmpl	$2, %edi
	setb	%al
	cmpl	$2, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_9
# BB#8:
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_9
# BB#103:
	leaq	51140552(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_9:
	cmpl	$3, %edi
	setb	%al
	cmpl	$3, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_11
# BB#10:
	movl	$3, 40(%rsp)
	movl	$3, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_11
# BB#104:
	leaq	51194320(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_11:
	cmpl	$4, %edi
	setb	%al
	cmpl	$4, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_13
# BB#12:
	movl	$4, 40(%rsp)
	movl	$4, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_13
# BB#105:
	leaq	51238312(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_13:
	cmpl	$5, %edi
	setb	%al
	cmpl	$5, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_15
# BB#14:
	movl	$5, 40(%rsp)
	movl	$5, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_15
# BB#106:
	leaq	51243200(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_15:
	cmpl	$6, %edi
	setb	%al
	cmpl	$6, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_17
# BB#16:
	movl	$6, 40(%rsp)
	movl	$6, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_17
# BB#107:
	leaq	51248088(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_17:
	cmpl	$7, %edi
	setb	%al
	cmpl	$7, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_19
# BB#18:
	movl	$7, 40(%rsp)
	movl	$7, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_19
# BB#108:
	leaq	51252976(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_19:
	cmpl	$8, %edi
	setb	%al
	cmpl	$8, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_21
# BB#20:
	movl	$8, 40(%rsp)
	movl	$8, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_21
# BB#109:
	leaq	51257864(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_21:
	cmpl	$9, %edi
	setb	%al
	cmpl	$9, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_23
# BB#22:
	movl	$9, 40(%rsp)
	movl	$9, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_23
# BB#110:
	leaq	51262752(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_23:
	cmpl	$10, %edi
	setb	%al
	cmpl	$10, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_25
# BB#24:
	movl	$10, 40(%rsp)
	movl	$10, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_25
# BB#111:
	leaq	51037904(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_25:
	cmpl	$11, %edi
	setb	%al
	cmpl	$11, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_27
# BB#26:
	movl	$11, 40(%rsp)
	movl	$11, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_27
# BB#112:
	leaq	51042792(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_27:
	cmpl	$12, %edi
	setb	%al
	cmpl	$12, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_29
# BB#28:
	movl	$12, 40(%rsp)
	movl	$12, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_29
# BB#113:
	leaq	51047680(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_29:
	cmpl	$13, %edi
	setb	%al
	cmpl	$13, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_31
# BB#30:
	movl	$13, 40(%rsp)
	movl	$13, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_31
# BB#114:
	leaq	51052568(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_31:
	cmpl	$14, %edi
	setb	%al
	cmpl	$14, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_33
# BB#32:
	movl	$14, 40(%rsp)
	movl	$14, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_33
# BB#115:
	leaq	51057456(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_33:
	cmpl	$15, %edi
	setb	%al
	cmpl	$15, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_35
# BB#34:
	movl	$15, 40(%rsp)
	movl	$15, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_35
# BB#116:
	leaq	51062344(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_35:
	cmpl	$16, %edi
	setb	%al
	cmpl	$16, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_37
# BB#36:
	movl	$16, 40(%rsp)
	movl	$16, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_37
# BB#117:
	leaq	51067232(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_37:
	cmpl	$17, %edi
	setb	%al
	cmpl	$17, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_39
# BB#38:
	movl	$17, 40(%rsp)
	movl	$17, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_39
# BB#118:
	leaq	51072120(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_39:
	cmpl	$18, %edi
	setb	%al
	cmpl	$18, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_41
# BB#40:
	movl	$18, 40(%rsp)
	movl	$18, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_41
# BB#119:
	leaq	51077008(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_41:
	cmpl	$19, %edi
	setb	%al
	cmpl	$19, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_43
# BB#42:
	movl	$19, 40(%rsp)
	movl	$19, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_43
# BB#120:
	leaq	51081896(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_43:
	cmpl	$20, %edi
	setb	%al
	cmpl	$20, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_45
# BB#44:
	movl	$20, 40(%rsp)
	movl	$20, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_45
# BB#121:
	leaq	51091672(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_45:
	cmpl	$21, %edi
	setb	%al
	cmpl	$21, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_47
# BB#46:
	movl	$21, 40(%rsp)
	movl	$21, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_47
# BB#122:
	leaq	51096560(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_47:
	cmpl	$22, %edi
	setb	%al
	cmpl	$22, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_49
# BB#48:
	movl	$22, 40(%rsp)
	movl	$22, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_49
# BB#123:
	leaq	51101448(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_49:
	cmpl	$23, %edi
	setb	%al
	cmpl	$23, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_51
# BB#50:
	movl	$23, 40(%rsp)
	movl	$23, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_51
# BB#124:
	leaq	51106336(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_51:
	cmpl	$24, %edi
	setb	%al
	cmpl	$24, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_53
# BB#52:
	movl	$24, 40(%rsp)
	movl	$24, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_53
# BB#125:
	leaq	51111224(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_53:
	cmpl	$25, %edi
	setb	%al
	cmpl	$25, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_55
# BB#54:
	movl	$25, 40(%rsp)
	movl	$25, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_55
# BB#126:
	leaq	51116112(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_55:
	cmpl	$26, %edi
	setb	%al
	cmpl	$26, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_57
# BB#56:
	movl	$26, 40(%rsp)
	movl	$26, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_57
# BB#127:
	leaq	51121000(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_57:
	cmpl	$27, %edi
	setb	%al
	cmpl	$27, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_59
# BB#58:
	movl	$27, 40(%rsp)
	movl	$27, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_59
# BB#128:
	leaq	51125888(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_59:
	cmpl	$28, %edi
	setb	%al
	cmpl	$28, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_61
# BB#60:
	movl	$28, 40(%rsp)
	movl	$28, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_61
# BB#129:
	leaq	51130776(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_61:
	cmpl	$29, %edi
	setb	%al
	cmpl	$29, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_63
# BB#62:
	movl	$29, 40(%rsp)
	movl	$29, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_63
# BB#130:
	leaq	51135664(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_63:
	cmpl	$30, %edi
	setb	%al
	cmpl	$30, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_65
# BB#64:
	movl	$30, 40(%rsp)
	movl	$30, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_65
# BB#131:
	leaq	51145440(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_65:
	cmpl	$31, %edi
	setb	%al
	cmpl	$31, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_67
# BB#66:
	movl	$31, 40(%rsp)
	movl	$31, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_67
# BB#132:
	leaq	51150328(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_67:
	cmpl	$32, %edi
	setb	%al
	cmpl	$32, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_69
# BB#68:
	movl	$32, 40(%rsp)
	movl	$32, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_69
# BB#133:
	leaq	51155216(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_69:
	cmpl	$33, %edi
	setb	%al
	cmpl	$33, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_71
# BB#70:
	movl	$33, 40(%rsp)
	movl	$33, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_71
# BB#134:
	leaq	51160104(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_71:
	cmpl	$34, %edi
	setb	%al
	cmpl	$34, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_73
# BB#72:
	movl	$34, 40(%rsp)
	movl	$34, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_73
# BB#135:
	leaq	51164992(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_73:
	cmpl	$35, %edi
	setb	%al
	cmpl	$35, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_75
# BB#74:
	movl	$35, 40(%rsp)
	movl	$35, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_75
# BB#136:
	leaq	51169880(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_75:
	cmpl	$36, %edi
	setb	%al
	cmpl	$36, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_77
# BB#76:
	movl	$36, 40(%rsp)
	movl	$36, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_77
# BB#137:
	leaq	51174768(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_77:
	cmpl	$37, %edi
	setb	%al
	cmpl	$37, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_79
# BB#78:
	movl	$37, 40(%rsp)
	movl	$37, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_79
# BB#138:
	leaq	51179656(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_79:
	cmpl	$38, %edi
	setb	%al
	cmpl	$38, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_81
# BB#80:
	movl	$38, 40(%rsp)
	movl	$38, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_81
# BB#139:
	leaq	51184544(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_81:
	cmpl	$39, %edi
	setb	%al
	cmpl	$39, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_83
# BB#82:
	movl	$39, 40(%rsp)
	movl	$39, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_83
# BB#140:
	leaq	51189432(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_83:
	cmpl	$40, %edi
	setb	%al
	cmpl	$40, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_85
# BB#84:
	movl	$40, 40(%rsp)
	movl	$40, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_85
# BB#141:
	leaq	51199208(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_85:
	cmpl	$41, %edi
	setb	%al
	cmpl	$41, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_87
# BB#86:
	movl	$41, 40(%rsp)
	movl	$41, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_87
# BB#142:
	leaq	51204096(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_87:
	cmpl	$42, %edi
	setb	%al
	cmpl	$42, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_89
# BB#88:
	movl	$42, 40(%rsp)
	movl	$42, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_89
# BB#143:
	leaq	51208984(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_89:
	cmpl	$43, %edi
	setb	%al
	cmpl	$43, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_91
# BB#90:
	movl	$43, 40(%rsp)
	movl	$43, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_91
# BB#144:
	leaq	51213872(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_91:
	cmpl	$44, %edi
	setb	%al
	cmpl	$44, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_93
# BB#92:
	movl	$44, 40(%rsp)
	movl	$44, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_93
# BB#145:
	leaq	51218760(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_93:
	cmpl	$45, %edi
	setb	%al
	cmpl	$45, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_95
# BB#94:
	movl	$45, 40(%rsp)
	movl	$45, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_95
# BB#146:
	leaq	51223648(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_95:
	cmpl	$46, %edi
	setb	%al
	cmpl	$46, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_97
# BB#96:
	movl	$46, 40(%rsp)
	movl	$46, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_97
# BB#147:
	leaq	51228536(%r14), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_97:
	cmpl	$47, %edi
	setb	%al
	cmpl	$47, %esi
	seta	%cl
	orb	%al, %cl
	jne	.LBB395_99
# BB#98:
	movl	$47, 40(%rsp)
	movl	$47, 32(%rsp)
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_cmp_val_NSROverlap(%rip)
	testl	%eax, %eax
	je	.LBB395_99
# BB#148:
	addq	$51233424, %r14         # imm = 0x30DC290
	movq	%r14, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
.LBB395_99:
	movl	%r12d, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB395_100:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_470;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_470
	.align	16, 0x90
_transaction_470:                       # @_transaction_470
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	690392(%rcx), %r14
	cmpl	$0, 690408(%rcx)
	je	.LBB396_2
# BB#1:
	addq	$690256, %rcx           # imm = 0xA8850
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB396_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB396_4
# BB#3:
	leaq	ng22(%rip), %rcx
	movl	$48, %edx
	callq	*__imp__iki_schedule_process_priority_multiple(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB396_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_471;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_471
	.align	16, 0x90
_transaction_471:                       # @_transaction_471
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	690552(%rbx), %r15
	cmpl	$0, 690568(%rbx)
	je	.LBB397_2
# BB#1:
	leaq	690416(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB397_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB397_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	690416(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB397_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_472;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_472
	.align	16, 0x90
_transaction_472:                       # @_transaction_472
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	690976(%rbx), %r15
	cmpl	$0, 690992(%rbx)
	je	.LBB398_2
# BB#1:
	leaq	690840(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB398_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB398_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	690840(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB398_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_473;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_473
	.align	16, 0x90
_transaction_473:                       # @_transaction_473
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	691400(%rbx), %r15
	cmpl	$0, 691416(%rbx)
	je	.LBB399_2
# BB#1:
	leaq	691264(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB399_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB399_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	691264(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB399_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_474;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_474
	.align	16, 0x90
_transaction_474:                       # @_transaction_474
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	691824(%rbx), %r15
	cmpl	$0, 691840(%rbx)
	je	.LBB400_2
# BB#1:
	leaq	691688(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB400_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB400_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	691688(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB400_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_475;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_475
	.align	16, 0x90
_transaction_475:                       # @_transaction_475
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	692248(%rbx), %r15
	cmpl	$0, 692264(%rbx)
	je	.LBB401_2
# BB#1:
	leaq	692112(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB401_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB401_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	692112(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB401_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_476;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_476
	.align	16, 0x90
_transaction_476:                       # @_transaction_476
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	692672(%rbx), %r15
	cmpl	$0, 692688(%rbx)
	je	.LBB402_2
# BB#1:
	leaq	692536(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB402_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB402_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	692536(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB402_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_477;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_477
	.align	16, 0x90
_transaction_477:                       # @_transaction_477
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	693096(%rbx), %r15
	cmpl	$0, 693112(%rbx)
	je	.LBB403_2
# BB#1:
	leaq	692960(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB403_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB403_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	692960(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB403_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_478;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_478
	.align	16, 0x90
_transaction_478:                       # @_transaction_478
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	693520(%rbx), %r15
	cmpl	$0, 693536(%rbx)
	je	.LBB404_2
# BB#1:
	leaq	693384(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB404_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB404_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	693384(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB404_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_479;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_479
	.align	16, 0x90
_transaction_479:                       # @_transaction_479
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	693944(%rbx), %r15
	cmpl	$0, 693960(%rbx)
	je	.LBB405_2
# BB#1:
	leaq	693808(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB405_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB405_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	693808(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB405_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_480;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_480
	.align	16, 0x90
_transaction_480:                       # @_transaction_480
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	694368(%rbx), %r15
	cmpl	$0, 694384(%rbx)
	je	.LBB406_2
# BB#1:
	leaq	694232(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB406_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB406_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	694232(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB406_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_481;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_481
	.align	16, 0x90
_transaction_481:                       # @_transaction_481
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	694792(%rbx), %r15
	cmpl	$0, 694808(%rbx)
	je	.LBB407_2
# BB#1:
	leaq	694656(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB407_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB407_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	694656(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB407_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_482;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_482
	.align	16, 0x90
_transaction_482:                       # @_transaction_482
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	695216(%rbx), %r15
	cmpl	$0, 695232(%rbx)
	je	.LBB408_2
# BB#1:
	leaq	695080(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB408_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB408_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	695080(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB408_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_483;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_483
	.align	16, 0x90
_transaction_483:                       # @_transaction_483
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	695640(%rbx), %r15
	cmpl	$0, 695656(%rbx)
	je	.LBB409_2
# BB#1:
	leaq	695504(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB409_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB409_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	695504(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB409_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_484;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_484
	.align	16, 0x90
_transaction_484:                       # @_transaction_484
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	696064(%rbx), %r15
	cmpl	$0, 696080(%rbx)
	je	.LBB410_2
# BB#1:
	leaq	695928(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB410_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB410_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	695928(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB410_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_485;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_485
	.align	16, 0x90
_transaction_485:                       # @_transaction_485
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	696488(%rbx), %r15
	cmpl	$0, 696504(%rbx)
	je	.LBB411_2
# BB#1:
	leaq	696352(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB411_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB411_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	696352(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB411_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_486;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_486
	.align	16, 0x90
_transaction_486:                       # @_transaction_486
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	696912(%rbx), %r15
	cmpl	$0, 696928(%rbx)
	je	.LBB412_2
# BB#1:
	leaq	696776(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB412_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB412_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	696776(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB412_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_487;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_487
	.align	16, 0x90
_transaction_487:                       # @_transaction_487
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	697336(%rbx), %r15
	cmpl	$0, 697352(%rbx)
	je	.LBB413_2
# BB#1:
	leaq	697200(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB413_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB413_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	697200(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB413_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_488;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_488
	.align	16, 0x90
_transaction_488:                       # @_transaction_488
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	697760(%rbx), %r15
	cmpl	$0, 697776(%rbx)
	je	.LBB414_2
# BB#1:
	leaq	697624(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB414_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB414_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	697624(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB414_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_489;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_489
	.align	16, 0x90
_transaction_489:                       # @_transaction_489
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	698184(%rbx), %r15
	cmpl	$0, 698200(%rbx)
	je	.LBB415_2
# BB#1:
	leaq	698048(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB415_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB415_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	698048(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB415_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_490;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_490
	.align	16, 0x90
_transaction_490:                       # @_transaction_490
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	698608(%rbx), %r15
	cmpl	$0, 698624(%rbx)
	je	.LBB416_2
# BB#1:
	leaq	698472(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB416_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB416_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	698472(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB416_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_491;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_491
	.align	16, 0x90
_transaction_491:                       # @_transaction_491
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	699032(%rbx), %r15
	cmpl	$0, 699048(%rbx)
	je	.LBB417_2
# BB#1:
	leaq	698896(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB417_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB417_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	698896(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB417_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_492;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_492
	.align	16, 0x90
_transaction_492:                       # @_transaction_492
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	699456(%rbx), %r15
	cmpl	$0, 699472(%rbx)
	je	.LBB418_2
# BB#1:
	leaq	699320(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB418_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB418_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	699320(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB418_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_493;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_493
	.align	16, 0x90
_transaction_493:                       # @_transaction_493
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	699880(%rbx), %r15
	cmpl	$0, 699896(%rbx)
	je	.LBB419_2
# BB#1:
	leaq	699744(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB419_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB419_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	699744(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB419_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_494;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_494
	.align	16, 0x90
_transaction_494:                       # @_transaction_494
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	700304(%rbx), %r15
	cmpl	$0, 700320(%rbx)
	je	.LBB420_2
# BB#1:
	leaq	700168(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB420_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB420_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	700168(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB420_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_495;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_495
	.align	16, 0x90
_transaction_495:                       # @_transaction_495
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	700728(%rbx), %r15
	cmpl	$0, 700744(%rbx)
	je	.LBB421_2
# BB#1:
	leaq	700592(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB421_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB421_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	700592(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB421_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_496;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_496
	.align	16, 0x90
_transaction_496:                       # @_transaction_496
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	701152(%rbx), %r15
	cmpl	$0, 701168(%rbx)
	je	.LBB422_2
# BB#1:
	leaq	701016(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB422_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB422_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	701016(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB422_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_497;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_497
	.align	16, 0x90
_transaction_497:                       # @_transaction_497
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	701576(%rbx), %r15
	cmpl	$0, 701592(%rbx)
	je	.LBB423_2
# BB#1:
	leaq	701440(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB423_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB423_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	701440(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB423_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_498;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_498
	.align	16, 0x90
_transaction_498:                       # @_transaction_498
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	702000(%rbx), %r15
	cmpl	$0, 702016(%rbx)
	je	.LBB424_2
# BB#1:
	leaq	701864(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB424_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB424_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	701864(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB424_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_499;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_499
	.align	16, 0x90
_transaction_499:                       # @_transaction_499
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	702424(%rbx), %r15
	cmpl	$0, 702440(%rbx)
	je	.LBB425_2
# BB#1:
	leaq	702288(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB425_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB425_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	702288(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB425_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_500;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_500
	.align	16, 0x90
_transaction_500:                       # @_transaction_500
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	702848(%rbx), %r15
	cmpl	$0, 702864(%rbx)
	je	.LBB426_2
# BB#1:
	leaq	702712(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB426_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB426_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	702712(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB426_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_501;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_501
	.align	16, 0x90
_transaction_501:                       # @_transaction_501
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	703272(%rbx), %r15
	cmpl	$0, 703288(%rbx)
	je	.LBB427_2
# BB#1:
	leaq	703136(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB427_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB427_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	703136(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB427_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_502;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_502
	.align	16, 0x90
_transaction_502:                       # @_transaction_502
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	703696(%rbx), %r15
	cmpl	$0, 703712(%rbx)
	je	.LBB428_2
# BB#1:
	leaq	703560(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB428_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB428_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	703560(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB428_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_503;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_503
	.align	16, 0x90
_transaction_503:                       # @_transaction_503
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	704120(%rbx), %r15
	cmpl	$0, 704136(%rbx)
	je	.LBB429_2
# BB#1:
	leaq	703984(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB429_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB429_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	703984(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB429_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_504;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_504
	.align	16, 0x90
_transaction_504:                       # @_transaction_504
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	704544(%rbx), %r15
	cmpl	$0, 704560(%rbx)
	je	.LBB430_2
# BB#1:
	leaq	704408(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB430_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB430_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	704408(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB430_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_505;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_505
	.align	16, 0x90
_transaction_505:                       # @_transaction_505
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	704968(%rbx), %r15
	cmpl	$0, 704984(%rbx)
	je	.LBB431_2
# BB#1:
	leaq	704832(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB431_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB431_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	704832(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB431_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_506;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_506
	.align	16, 0x90
_transaction_506:                       # @_transaction_506
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	705392(%rbx), %r15
	cmpl	$0, 705408(%rbx)
	je	.LBB432_2
# BB#1:
	leaq	705256(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB432_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB432_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	705256(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB432_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_507;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_507
	.align	16, 0x90
_transaction_507:                       # @_transaction_507
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	705816(%rbx), %r15
	cmpl	$0, 705832(%rbx)
	je	.LBB433_2
# BB#1:
	leaq	705680(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB433_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB433_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	705680(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB433_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_508;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_508
	.align	16, 0x90
_transaction_508:                       # @_transaction_508
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	706240(%rbx), %r15
	cmpl	$0, 706256(%rbx)
	je	.LBB434_2
# BB#1:
	leaq	706104(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB434_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB434_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	706104(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB434_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_509;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_509
	.align	16, 0x90
_transaction_509:                       # @_transaction_509
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	706664(%rbx), %r15
	cmpl	$0, 706680(%rbx)
	je	.LBB435_2
# BB#1:
	leaq	706528(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB435_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB435_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	706528(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB435_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_510;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_510
	.align	16, 0x90
_transaction_510:                       # @_transaction_510
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	707088(%rbx), %r15
	cmpl	$0, 707104(%rbx)
	je	.LBB436_2
# BB#1:
	leaq	706952(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB436_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB436_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	706952(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB436_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_511;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_511
	.align	16, 0x90
_transaction_511:                       # @_transaction_511
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	707512(%rbx), %r15
	cmpl	$0, 707528(%rbx)
	je	.LBB437_2
# BB#1:
	leaq	707376(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB437_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB437_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	707376(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB437_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_512;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_512
	.align	16, 0x90
_transaction_512:                       # @_transaction_512
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	707936(%rbx), %r15
	cmpl	$0, 707952(%rbx)
	je	.LBB438_2
# BB#1:
	leaq	707800(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB438_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB438_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	707800(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB438_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_513;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_513
	.align	16, 0x90
_transaction_513:                       # @_transaction_513
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	708360(%rbx), %r15
	cmpl	$0, 708376(%rbx)
	je	.LBB439_2
# BB#1:
	leaq	708224(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB439_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB439_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	708224(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB439_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_514;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_514
	.align	16, 0x90
_transaction_514:                       # @_transaction_514
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	708784(%rbx), %r15
	cmpl	$0, 708800(%rbx)
	je	.LBB440_2
# BB#1:
	leaq	708648(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB440_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB440_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	708648(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB440_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_515;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_515
	.align	16, 0x90
_transaction_515:                       # @_transaction_515
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	709208(%rbx), %r15
	cmpl	$0, 709224(%rbx)
	je	.LBB441_2
# BB#1:
	leaq	709072(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB441_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB441_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	709072(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB441_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_516;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_516
	.align	16, 0x90
_transaction_516:                       # @_transaction_516
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	709632(%rbx), %r15
	cmpl	$0, 709648(%rbx)
	je	.LBB442_2
# BB#1:
	leaq	709496(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB442_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB442_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	709496(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB442_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_517;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_517
	.align	16, 0x90
_transaction_517:                       # @_transaction_517
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	710056(%rbx), %r15
	cmpl	$0, 710072(%rbx)
	je	.LBB443_2
# BB#1:
	leaq	709920(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB443_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB443_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	709920(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB443_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_518;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_518
	.align	16, 0x90
_transaction_518:                       # @_transaction_518
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	710480(%rbx), %r15
	cmpl	$0, 710496(%rbx)
	je	.LBB444_2
# BB#1:
	leaq	710344(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB444_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB444_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	710344(%rbx), %rcx
	addq	$47786640, %rbx         # imm = 0x2D92A90
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB444_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_519;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_519
	.align	16, 0x90
_transaction_519:                       # @_transaction_519
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	710904(%rbx), %r15
	cmpl	$0, 710920(%rbx)
	je	.LBB445_2
# BB#1:
	leaq	710768(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB445_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB445_4
# BB#3:
	leaq	50083096(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	710768(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB445_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_520;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_520
	.align	16, 0x90
_transaction_520:                       # @_transaction_520
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	711144(%rbx), %r15
	cmpl	$0, 711160(%rbx)
	je	.LBB446_2
# BB#1:
	leaq	711008(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB446_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB446_4
# BB#3:
	leaq	50078208(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	711008(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB446_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_521;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_521
	.align	16, 0x90
_transaction_521:                       # @_transaction_521
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	711384(%rbx), %r15
	cmpl	$0, 711400(%rbx)
	je	.LBB447_2
# BB#1:
	leaq	711248(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB447_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB447_4
# BB#3:
	leaq	50073320(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	711248(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB447_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_522;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_522
	.align	16, 0x90
_transaction_522:                       # @_transaction_522
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	711624(%rbx), %r15
	cmpl	$0, 711640(%rbx)
	je	.LBB448_2
# BB#1:
	leaq	711488(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB448_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB448_4
# BB#3:
	leaq	50068432(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	711488(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB448_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_523;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_523
	.align	16, 0x90
_transaction_523:                       # @_transaction_523
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	711864(%rbx), %r15
	cmpl	$0, 711880(%rbx)
	je	.LBB449_2
# BB#1:
	leaq	711728(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB449_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB449_4
# BB#3:
	leaq	50063544(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	711728(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB449_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_524;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_524
	.align	16, 0x90
_transaction_524:                       # @_transaction_524
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	712104(%rbx), %r15
	cmpl	$0, 712120(%rbx)
	je	.LBB450_2
# BB#1:
	leaq	711968(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB450_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB450_4
# BB#3:
	leaq	50058656(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	711968(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB450_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_525;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_525
	.align	16, 0x90
_transaction_525:                       # @_transaction_525
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	712344(%rbx), %r15
	cmpl	$0, 712360(%rbx)
	je	.LBB451_2
# BB#1:
	leaq	712208(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB451_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB451_4
# BB#3:
	leaq	50053768(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	712208(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB451_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_526;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_526
	.align	16, 0x90
_transaction_526:                       # @_transaction_526
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	712584(%rbx), %r15
	cmpl	$0, 712600(%rbx)
	je	.LBB452_2
# BB#1:
	leaq	712448(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB452_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB452_4
# BB#3:
	leaq	50048880(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	712448(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB452_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_527;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_527
	.align	16, 0x90
_transaction_527:                       # @_transaction_527
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	712824(%rbx), %r15
	cmpl	$0, 712840(%rbx)
	je	.LBB453_2
# BB#1:
	leaq	712688(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB453_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB453_4
# BB#3:
	leaq	50381264(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	712688(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB453_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_528;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_528
	.align	16, 0x90
_transaction_528:                       # @_transaction_528
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	713064(%rbx), %r15
	cmpl	$0, 713080(%rbx)
	je	.LBB454_2
# BB#1:
	leaq	712928(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB454_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB454_4
# BB#3:
	leaq	50376376(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	712928(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB454_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_529;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_529
	.align	16, 0x90
_transaction_529:                       # @_transaction_529
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	713304(%rbx), %r15
	cmpl	$0, 713320(%rbx)
	je	.LBB455_2
# BB#1:
	leaq	713168(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB455_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB455_4
# BB#3:
	leaq	50371488(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	713168(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB455_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_530;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_530
	.align	16, 0x90
_transaction_530:                       # @_transaction_530
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	713544(%rbx), %r15
	cmpl	$0, 713560(%rbx)
	je	.LBB456_2
# BB#1:
	leaq	713408(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB456_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB456_4
# BB#3:
	leaq	50366600(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	713408(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB456_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_531;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_531
	.align	16, 0x90
_transaction_531:                       # @_transaction_531
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	713784(%rbx), %r15
	cmpl	$0, 713800(%rbx)
	je	.LBB457_2
# BB#1:
	leaq	713648(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB457_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB457_4
# BB#3:
	leaq	50312832(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	713648(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB457_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_532;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_532
	.align	16, 0x90
_transaction_532:                       # @_transaction_532
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	714024(%rbx), %r15
	cmpl	$0, 714040(%rbx)
	je	.LBB458_2
# BB#1:
	leaq	713888(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB458_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB458_4
# BB#3:
	leaq	50259064(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	713888(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB458_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_533;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_533
	.align	16, 0x90
_transaction_533:                       # @_transaction_533
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	714264(%rbx), %r15
	cmpl	$0, 714280(%rbx)
	je	.LBB459_2
# BB#1:
	leaq	714128(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB459_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB459_4
# BB#3:
	leaq	50205296(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	714128(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB459_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_534;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_534
	.align	16, 0x90
_transaction_534:                       # @_transaction_534
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	714504(%rbx), %r15
	cmpl	$0, 714520(%rbx)
	je	.LBB460_2
# BB#1:
	leaq	714368(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB460_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB460_4
# BB#3:
	leaq	50151528(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	714368(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB460_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_535;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_535
	.align	16, 0x90
_transaction_535:                       # @_transaction_535
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	714744(%rbx), %r15
	cmpl	$0, 714760(%rbx)
	je	.LBB461_2
# BB#1:
	leaq	714608(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB461_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB461_4
# BB#3:
	leaq	50097760(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	714608(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB461_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_536;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_536
	.align	16, 0x90
_transaction_536:                       # @_transaction_536
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	714984(%rbx), %r15
	cmpl	$0, 715000(%rbx)
	je	.LBB462_2
# BB#1:
	leaq	714848(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB462_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB462_4
# BB#3:
	leaq	50043992(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	714848(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB462_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_537;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_537
	.align	16, 0x90
_transaction_537:                       # @_transaction_537
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	715224(%rbx), %r15
	cmpl	$0, 715240(%rbx)
	je	.LBB463_2
# BB#1:
	leaq	715088(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB463_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB463_4
# BB#3:
	leaq	50361712(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	715088(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB463_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_538;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_538
	.align	16, 0x90
_transaction_538:                       # @_transaction_538
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	715464(%rbx), %r15
	cmpl	$0, 715480(%rbx)
	je	.LBB464_2
# BB#1:
	leaq	715328(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB464_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB464_4
# BB#3:
	leaq	50356824(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	715328(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB464_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_539;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_539
	.align	16, 0x90
_transaction_539:                       # @_transaction_539
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	715704(%rbx), %r15
	cmpl	$0, 715720(%rbx)
	je	.LBB465_2
# BB#1:
	leaq	715568(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB465_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB465_4
# BB#3:
	leaq	50351936(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	715568(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB465_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_540;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_540
	.align	16, 0x90
_transaction_540:                       # @_transaction_540
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	715944(%rbx), %r15
	cmpl	$0, 715960(%rbx)
	je	.LBB466_2
# BB#1:
	leaq	715808(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB466_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB466_4
# BB#3:
	leaq	50347048(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	715808(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB466_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_541;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_541
	.align	16, 0x90
_transaction_541:                       # @_transaction_541
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	716184(%rbx), %r15
	cmpl	$0, 716200(%rbx)
	je	.LBB467_2
# BB#1:
	leaq	716048(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB467_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB467_4
# BB#3:
	leaq	50342160(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	716048(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB467_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_542;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_542
	.align	16, 0x90
_transaction_542:                       # @_transaction_542
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	716424(%rbx), %r15
	cmpl	$0, 716440(%rbx)
	je	.LBB468_2
# BB#1:
	leaq	716288(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB468_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB468_4
# BB#3:
	leaq	50337272(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	716288(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB468_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_543;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_543
	.align	16, 0x90
_transaction_543:                       # @_transaction_543
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	716664(%rbx), %r15
	cmpl	$0, 716680(%rbx)
	je	.LBB469_2
# BB#1:
	leaq	716528(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB469_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB469_4
# BB#3:
	leaq	50332384(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	716528(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB469_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_544;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_544
	.align	16, 0x90
_transaction_544:                       # @_transaction_544
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	716904(%rbx), %r15
	cmpl	$0, 716920(%rbx)
	je	.LBB470_2
# BB#1:
	leaq	716768(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB470_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB470_4
# BB#3:
	leaq	50327496(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	716768(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB470_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_545;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_545
	.align	16, 0x90
_transaction_545:                       # @_transaction_545
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	717144(%rbx), %r15
	cmpl	$0, 717160(%rbx)
	je	.LBB471_2
# BB#1:
	leaq	717008(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB471_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB471_4
# BB#3:
	leaq	50322608(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	717008(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB471_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_546;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_546
	.align	16, 0x90
_transaction_546:                       # @_transaction_546
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	717384(%rbx), %r15
	cmpl	$0, 717400(%rbx)
	je	.LBB472_2
# BB#1:
	leaq	717248(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB472_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB472_4
# BB#3:
	leaq	50317720(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	717248(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB472_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_547;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_547
	.align	16, 0x90
_transaction_547:                       # @_transaction_547
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	717624(%rbx), %r15
	cmpl	$0, 717640(%rbx)
	je	.LBB473_2
# BB#1:
	leaq	717488(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB473_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB473_4
# BB#3:
	leaq	50307944(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	717488(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB473_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_548;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_548
	.align	16, 0x90
_transaction_548:                       # @_transaction_548
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	717864(%rbx), %r15
	cmpl	$0, 717880(%rbx)
	je	.LBB474_2
# BB#1:
	leaq	717728(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB474_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB474_4
# BB#3:
	leaq	50303056(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	717728(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB474_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_549;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_549
	.align	16, 0x90
_transaction_549:                       # @_transaction_549
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	718104(%rbx), %r15
	cmpl	$0, 718120(%rbx)
	je	.LBB475_2
# BB#1:
	leaq	717968(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB475_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB475_4
# BB#3:
	leaq	50298168(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	717968(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB475_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_550;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_550
	.align	16, 0x90
_transaction_550:                       # @_transaction_550
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	718344(%rbx), %r15
	cmpl	$0, 718360(%rbx)
	je	.LBB476_2
# BB#1:
	leaq	718208(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB476_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB476_4
# BB#3:
	leaq	50293280(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	718208(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB476_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_551;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_551
	.align	16, 0x90
_transaction_551:                       # @_transaction_551
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	718584(%rbx), %r15
	cmpl	$0, 718600(%rbx)
	je	.LBB477_2
# BB#1:
	leaq	718448(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB477_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB477_4
# BB#3:
	leaq	50288392(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	718448(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB477_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_552;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_552
	.align	16, 0x90
_transaction_552:                       # @_transaction_552
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	718824(%rbx), %r15
	cmpl	$0, 718840(%rbx)
	je	.LBB478_2
# BB#1:
	leaq	718688(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB478_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB478_4
# BB#3:
	leaq	50283504(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	718688(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB478_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_553;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_553
	.align	16, 0x90
_transaction_553:                       # @_transaction_553
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	719064(%rbx), %r15
	cmpl	$0, 719080(%rbx)
	je	.LBB479_2
# BB#1:
	leaq	718928(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB479_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB479_4
# BB#3:
	leaq	50278616(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	718928(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB479_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_554;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_554
	.align	16, 0x90
_transaction_554:                       # @_transaction_554
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	719304(%rbx), %r15
	cmpl	$0, 719320(%rbx)
	je	.LBB480_2
# BB#1:
	leaq	719168(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB480_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB480_4
# BB#3:
	leaq	50273728(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	719168(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB480_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_555;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_555
	.align	16, 0x90
_transaction_555:                       # @_transaction_555
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	719544(%rbx), %r15
	cmpl	$0, 719560(%rbx)
	je	.LBB481_2
# BB#1:
	leaq	719408(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB481_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB481_4
# BB#3:
	leaq	50268840(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	719408(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB481_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_556;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_556
	.align	16, 0x90
_transaction_556:                       # @_transaction_556
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	719784(%rbx), %r15
	cmpl	$0, 719800(%rbx)
	je	.LBB482_2
# BB#1:
	leaq	719648(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB482_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB482_4
# BB#3:
	leaq	50263952(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	719648(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB482_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_557;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_557
	.align	16, 0x90
_transaction_557:                       # @_transaction_557
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	720024(%rbx), %r15
	cmpl	$0, 720040(%rbx)
	je	.LBB483_2
# BB#1:
	leaq	719888(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB483_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB483_4
# BB#3:
	leaq	50254176(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	719888(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB483_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_558;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_558
	.align	16, 0x90
_transaction_558:                       # @_transaction_558
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	720264(%rbx), %r15
	cmpl	$0, 720280(%rbx)
	je	.LBB484_2
# BB#1:
	leaq	720128(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB484_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB484_4
# BB#3:
	leaq	50249288(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	720128(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB484_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_559;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_559
	.align	16, 0x90
_transaction_559:                       # @_transaction_559
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	720504(%rbx), %r15
	cmpl	$0, 720520(%rbx)
	je	.LBB485_2
# BB#1:
	leaq	720368(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB485_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB485_4
# BB#3:
	leaq	50244400(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	720368(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB485_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_560;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_560
	.align	16, 0x90
_transaction_560:                       # @_transaction_560
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	720744(%rbx), %r15
	cmpl	$0, 720760(%rbx)
	je	.LBB486_2
# BB#1:
	leaq	720608(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB486_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB486_4
# BB#3:
	leaq	50239512(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	720608(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB486_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_561;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_561
	.align	16, 0x90
_transaction_561:                       # @_transaction_561
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	720984(%rbx), %r15
	cmpl	$0, 721000(%rbx)
	je	.LBB487_2
# BB#1:
	leaq	720848(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB487_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB487_4
# BB#3:
	leaq	50234624(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	720848(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB487_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_562;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_562
	.align	16, 0x90
_transaction_562:                       # @_transaction_562
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	721224(%rbx), %r15
	cmpl	$0, 721240(%rbx)
	je	.LBB488_2
# BB#1:
	leaq	721088(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB488_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB488_4
# BB#3:
	leaq	50229736(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	721088(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB488_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_563;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_563
	.align	16, 0x90
_transaction_563:                       # @_transaction_563
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	721464(%rbx), %r15
	cmpl	$0, 721480(%rbx)
	je	.LBB489_2
# BB#1:
	leaq	721328(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB489_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB489_4
# BB#3:
	leaq	50224848(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	721328(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB489_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_564;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_564
	.align	16, 0x90
_transaction_564:                       # @_transaction_564
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	721704(%rbx), %r15
	cmpl	$0, 721720(%rbx)
	je	.LBB490_2
# BB#1:
	leaq	721568(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB490_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB490_4
# BB#3:
	leaq	50219960(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	721568(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB490_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_565;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_565
	.align	16, 0x90
_transaction_565:                       # @_transaction_565
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	721944(%rbx), %r15
	cmpl	$0, 721960(%rbx)
	je	.LBB491_2
# BB#1:
	leaq	721808(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB491_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB491_4
# BB#3:
	leaq	50215072(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	721808(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB491_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_566;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_566
	.align	16, 0x90
_transaction_566:                       # @_transaction_566
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	722184(%rbx), %r15
	cmpl	$0, 722200(%rbx)
	je	.LBB492_2
# BB#1:
	leaq	722048(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB492_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB492_4
# BB#3:
	leaq	50210184(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	722048(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB492_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_567;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_567
	.align	16, 0x90
_transaction_567:                       # @_transaction_567
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	722424(%rbx), %r15
	cmpl	$0, 722440(%rbx)
	je	.LBB493_2
# BB#1:
	leaq	722288(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB493_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB493_4
# BB#3:
	leaq	50200408(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	722288(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB493_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_568;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_568
	.align	16, 0x90
_transaction_568:                       # @_transaction_568
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	722664(%rbx), %r15
	cmpl	$0, 722680(%rbx)
	je	.LBB494_2
# BB#1:
	leaq	722528(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB494_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB494_4
# BB#3:
	leaq	50195520(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	722528(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB494_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_569;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_569
	.align	16, 0x90
_transaction_569:                       # @_transaction_569
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	722904(%rbx), %r15
	cmpl	$0, 722920(%rbx)
	je	.LBB495_2
# BB#1:
	leaq	722768(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB495_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB495_4
# BB#3:
	leaq	50190632(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	722768(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB495_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_570;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_570
	.align	16, 0x90
_transaction_570:                       # @_transaction_570
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	723144(%rbx), %r15
	cmpl	$0, 723160(%rbx)
	je	.LBB496_2
# BB#1:
	leaq	723008(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB496_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB496_4
# BB#3:
	leaq	50185744(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	723008(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB496_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_571;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_571
	.align	16, 0x90
_transaction_571:                       # @_transaction_571
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	723384(%rbx), %r15
	cmpl	$0, 723400(%rbx)
	je	.LBB497_2
# BB#1:
	leaq	723248(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB497_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB497_4
# BB#3:
	leaq	50180856(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	723248(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB497_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_572;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_572
	.align	16, 0x90
_transaction_572:                       # @_transaction_572
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	723624(%rbx), %r15
	cmpl	$0, 723640(%rbx)
	je	.LBB498_2
# BB#1:
	leaq	723488(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB498_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB498_4
# BB#3:
	leaq	50175968(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	723488(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB498_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_573;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_573
	.align	16, 0x90
_transaction_573:                       # @_transaction_573
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	723864(%rbx), %r15
	cmpl	$0, 723880(%rbx)
	je	.LBB499_2
# BB#1:
	leaq	723728(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB499_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB499_4
# BB#3:
	leaq	50171080(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	723728(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB499_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_574;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_574
	.align	16, 0x90
_transaction_574:                       # @_transaction_574
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	724104(%rbx), %r15
	cmpl	$0, 724120(%rbx)
	je	.LBB500_2
# BB#1:
	leaq	723968(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB500_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB500_4
# BB#3:
	leaq	50166192(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	723968(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB500_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_575;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_575
	.align	16, 0x90
_transaction_575:                       # @_transaction_575
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	724344(%rbx), %r15
	cmpl	$0, 724360(%rbx)
	je	.LBB501_2
# BB#1:
	leaq	724208(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB501_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB501_4
# BB#3:
	leaq	50161304(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	724208(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB501_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_576;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_576
	.align	16, 0x90
_transaction_576:                       # @_transaction_576
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	724584(%rbx), %r15
	cmpl	$0, 724600(%rbx)
	je	.LBB502_2
# BB#1:
	leaq	724448(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB502_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB502_4
# BB#3:
	leaq	50156416(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	724448(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB502_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_577;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_577
	.align	16, 0x90
_transaction_577:                       # @_transaction_577
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	724824(%rbx), %r15
	cmpl	$0, 724840(%rbx)
	je	.LBB503_2
# BB#1:
	leaq	724688(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB503_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB503_4
# BB#3:
	leaq	50146640(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	724688(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB503_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_578;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_578
	.align	16, 0x90
_transaction_578:                       # @_transaction_578
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	725064(%rbx), %r15
	cmpl	$0, 725080(%rbx)
	je	.LBB504_2
# BB#1:
	leaq	724928(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB504_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB504_4
# BB#3:
	leaq	50141752(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	724928(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB504_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_579;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_579
	.align	16, 0x90
_transaction_579:                       # @_transaction_579
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	725304(%rbx), %r15
	cmpl	$0, 725320(%rbx)
	je	.LBB505_2
# BB#1:
	leaq	725168(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB505_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB505_4
# BB#3:
	leaq	50136864(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	725168(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB505_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_580;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_580
	.align	16, 0x90
_transaction_580:                       # @_transaction_580
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	725544(%rbx), %r15
	cmpl	$0, 725560(%rbx)
	je	.LBB506_2
# BB#1:
	leaq	725408(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB506_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB506_4
# BB#3:
	leaq	50131976(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	725408(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB506_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_581;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_581
	.align	16, 0x90
_transaction_581:                       # @_transaction_581
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	725784(%rbx), %r15
	cmpl	$0, 725800(%rbx)
	je	.LBB507_2
# BB#1:
	leaq	725648(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB507_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB507_4
# BB#3:
	leaq	50127088(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	725648(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB507_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_582;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_582
	.align	16, 0x90
_transaction_582:                       # @_transaction_582
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	726024(%rbx), %r15
	cmpl	$0, 726040(%rbx)
	je	.LBB508_2
# BB#1:
	leaq	725888(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB508_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB508_4
# BB#3:
	leaq	50122200(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	725888(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB508_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_583;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_583
	.align	16, 0x90
_transaction_583:                       # @_transaction_583
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	726264(%rbx), %r15
	cmpl	$0, 726280(%rbx)
	je	.LBB509_2
# BB#1:
	leaq	726128(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB509_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB509_4
# BB#3:
	leaq	50117312(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	726128(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB509_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_584;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_584
	.align	16, 0x90
_transaction_584:                       # @_transaction_584
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	726504(%rbx), %r15
	cmpl	$0, 726520(%rbx)
	je	.LBB510_2
# BB#1:
	leaq	726368(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB510_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB510_4
# BB#3:
	leaq	50112424(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	726368(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB510_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_585;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_585
	.align	16, 0x90
_transaction_585:                       # @_transaction_585
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	726744(%rbx), %r15
	cmpl	$0, 726760(%rbx)
	je	.LBB511_2
# BB#1:
	leaq	726608(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB511_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB511_4
# BB#3:
	leaq	50107536(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	726608(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB511_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_586;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_586
	.align	16, 0x90
_transaction_586:                       # @_transaction_586
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	726984(%rbx), %r15
	cmpl	$0, 727000(%rbx)
	je	.LBB512_2
# BB#1:
	leaq	726848(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB512_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB512_4
# BB#3:
	leaq	50102648(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	726848(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB512_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_587;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_587
	.align	16, 0x90
_transaction_587:                       # @_transaction_587
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	727224(%rbx), %r15
	cmpl	$0, 727240(%rbx)
	je	.LBB513_2
# BB#1:
	leaq	727088(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB513_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB513_4
# BB#3:
	leaq	50092872(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	727088(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB513_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_588;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_588
	.align	16, 0x90
_transaction_588:                       # @_transaction_588
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	727464(%rbx), %r15
	cmpl	$0, 727480(%rbx)
	je	.LBB514_2
# BB#1:
	leaq	727328(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB514_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB514_4
# BB#3:
	leaq	50087984(%rbx), %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	727328(%rbx), %rcx
	addq	$47742928, %rbx         # imm = 0x2D87FD0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB514_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_589;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_589
	.align	16, 0x90
_transaction_589:                       # @_transaction_589
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	727704(%rbx), %r15
	cmpl	$0, 727720(%rbx)
	je	.LBB515_2
# BB#1:
	leaq	727568(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB515_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB515_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	727568(%rbx), %rcx
	addq	$47740088, %rbx         # imm = 0x2D874B8
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB515_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_590;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_590
	.align	16, 0x90
_transaction_590:                       # @_transaction_590
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r12
	movq	%rcx, %rbx
	movl	48(%rbp), %r14d
	leaq	727944(%rbx), %r15
	cmpl	$0, 727960(%rbx)
	je	.LBB516_2
# BB#1:
	leaq	727808(%rbx), %rcx
	movl	%r14d, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r12, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r12
.LBB516_2:
	movl	%r14d, %edi
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB516_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	leaq	727808(%rbx), %rcx
	addq	$47740336, %rbx         # imm = 0x2D875B0
	movq	%rbx, 32(%rsp)
	movq	%r12, %rdx
	movl	%esi, %r8d
	movl	%r14d, %r9d
	callq	*__imp__iki_vlog_propagate_transaction(%rip)
.LBB516_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_747;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_747
	.align	16, 0x90
_transaction_747:                       # @_transaction_747
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	753016(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB517_6
# BB#1:
	leaq	753152(%rbx), %r12
	cmpl	$0, 753168(%rbx)
	je	.LBB517_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB517_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB517_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB517_6
.LBB517_5:
	addq	$50028976, %rbx         # imm = 0x2FB61B0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB517_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_752;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_752
	.align	16, 0x90
_transaction_752:                       # @_transaction_752
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	753864(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB518_6
# BB#1:
	leaq	754000(%rbx), %r12
	cmpl	$0, 754016(%rbx)
	je	.LBB518_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB518_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB518_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB518_6
.LBB518_5:
	addq	$50016096, %rbx         # imm = 0x2FB2F60
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB518_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_755;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_755
	.align	16, 0x90
_transaction_755:                       # @_transaction_755
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	754392(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB519_6
# BB#1:
	leaq	754528(%rbx), %r12
	cmpl	$0, 754544(%rbx)
	je	.LBB519_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB519_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB519_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB519_6
.LBB519_5:
	addq	$50003216, %rbx         # imm = 0x2FAFD10
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB519_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_760;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_760
	.align	16, 0x90
_transaction_760:                       # @_transaction_760
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	755240(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB520_6
# BB#1:
	leaq	755376(%rbx), %r12
	cmpl	$0, 755392(%rbx)
	je	.LBB520_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB520_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB520_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB520_6
.LBB520_5:
	addq	$49980560, %rbx         # imm = 0x2FAA490
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB520_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_766;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_766
	.align	16, 0x90
_transaction_766:                       # @_transaction_766
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	756248(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB521_6
# BB#1:
	leaq	756384(%rbx), %r12
	cmpl	$0, 756400(%rbx)
	je	.LBB521_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB521_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB521_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB521_6
.LBB521_5:
	addq	$49953016, %rbx         # imm = 0x2FA38F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB521_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_771;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_771
	.align	16, 0x90
_transaction_771:                       # @_transaction_771
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	757096(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB522_6
# BB#1:
	leaq	757232(%rbx), %r12
	cmpl	$0, 757248(%rbx)
	je	.LBB522_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB522_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB522_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB522_6
.LBB522_5:
	addq	$49930360, %rbx         # imm = 0x2F9E078
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB522_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_776;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_776
	.align	16, 0x90
_transaction_776:                       # @_transaction_776
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	757944(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB523_6
# BB#1:
	leaq	758080(%rbx), %r12
	cmpl	$0, 758096(%rbx)
	je	.LBB523_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB523_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB523_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB523_6
.LBB523_5:
	addq	$49907704, %rbx         # imm = 0x2F987F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB523_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_782;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_782
	.align	16, 0x90
_transaction_782:                       # @_transaction_782
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	758952(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB524_6
# BB#1:
	leaq	759088(%rbx), %r12
	cmpl	$0, 759104(%rbx)
	je	.LBB524_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB524_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB524_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB524_6
.LBB524_5:
	addq	$49880160, %rbx         # imm = 0x2F91C60
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB524_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_787;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_787
	.align	16, 0x90
_transaction_787:                       # @_transaction_787
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	759800(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB525_6
# BB#1:
	leaq	759936(%rbx), %r12
	cmpl	$0, 759952(%rbx)
	je	.LBB525_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB525_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB525_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB525_6
.LBB525_5:
	addq	$49857504, %rbx         # imm = 0x2F8C3E0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB525_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_792;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_792
	.align	16, 0x90
_transaction_792:                       # @_transaction_792
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	760648(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB526_6
# BB#1:
	leaq	760784(%rbx), %r12
	cmpl	$0, 760800(%rbx)
	je	.LBB526_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB526_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB526_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB526_6
.LBB526_5:
	addq	$49834848, %rbx         # imm = 0x2F86B60
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB526_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_793;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_793
	.align	16, 0x90
_transaction_793:                       # @_transaction_793
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	760856(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB527_6
# BB#1:
	leaq	760992(%rbx), %r12
	cmpl	$0, 761008(%rbx)
	je	.LBB527_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB527_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB527_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB527_6
.LBB527_5:
	addq	$49834680, %rbx         # imm = 0x2F86AB8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB527_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_795;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_795
	.align	16, 0x90
_transaction_795:                       # @_transaction_795
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	761224(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB528_6
# BB#1:
	leaq	761360(%rbx), %r12
	cmpl	$0, 761376(%rbx)
	je	.LBB528_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB528_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB528_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB528_6
.LBB528_5:
	addq	$49826856, %rbx         # imm = 0x2F84C28
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB528_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_800;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_800
	.align	16, 0x90
_transaction_800:                       # @_transaction_800
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	762072(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB529_6
# BB#1:
	leaq	762208(%rbx), %r12
	cmpl	$0, 762224(%rbx)
	je	.LBB529_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB529_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB529_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB529_6
.LBB529_5:
	addq	$49804200, %rbx         # imm = 0x2F7F3A8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB529_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_805;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_805
	.align	16, 0x90
_transaction_805:                       # @_transaction_805
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	762920(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB530_6
# BB#1:
	leaq	763056(%rbx), %r12
	cmpl	$0, 763072(%rbx)
	je	.LBB530_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB530_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB530_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB530_6
.LBB530_5:
	addq	$49781544, %rbx         # imm = 0x2F79B28
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB530_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_811;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_811
	.align	16, 0x90
_transaction_811:                       # @_transaction_811
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	763928(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB531_6
# BB#1:
	leaq	764064(%rbx), %r12
	cmpl	$0, 764080(%rbx)
	je	.LBB531_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB531_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB531_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB531_6
.LBB531_5:
	addq	$49754000, %rbx         # imm = 0x2F72F90
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB531_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_816;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_816
	.align	16, 0x90
_transaction_816:                       # @_transaction_816
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	764776(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB532_6
# BB#1:
	leaq	764912(%rbx), %r12
	cmpl	$0, 764928(%rbx)
	je	.LBB532_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB532_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB532_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB532_6
.LBB532_5:
	addq	$49731344, %rbx         # imm = 0x2F6D710
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB532_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_822;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_822
	.align	16, 0x90
_transaction_822:                       # @_transaction_822
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	765784(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB533_6
# BB#1:
	leaq	765920(%rbx), %r12
	cmpl	$0, 765936(%rbx)
	je	.LBB533_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB533_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB533_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB533_6
.LBB533_5:
	addq	$49703800, %rbx         # imm = 0x2F66B78
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB533_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_827;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_827
	.align	16, 0x90
_transaction_827:                       # @_transaction_827
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	766632(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB534_6
# BB#1:
	leaq	766768(%rbx), %r12
	cmpl	$0, 766784(%rbx)
	je	.LBB534_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB534_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB534_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB534_6
.LBB534_5:
	addq	$49681144, %rbx         # imm = 0x2F612F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB534_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_832;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_832
	.align	16, 0x90
_transaction_832:                       # @_transaction_832
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	767480(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB535_6
# BB#1:
	leaq	767616(%rbx), %r12
	cmpl	$0, 767632(%rbx)
	je	.LBB535_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB535_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB535_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB535_6
.LBB535_5:
	addq	$49658488, %rbx         # imm = 0x2F5BA78
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process_priority(%rip)
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB535_6:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2718;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2718
	.align	16, 0x90
_transaction_2718:                      # @_transaction_2718
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47723312(%rbx), %r15
	cmpl	$0, 47723328(%rbx)
	je	.LBB536_2
# BB#1:
	leaq	47723200(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB536_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB536_4
# BB#3:
	leaq	47723200(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB536_5
.LBB536_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47723200, %rbx         # imm = 0x2D832C0
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB536_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2788;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2788
	.align	16, 0x90
_transaction_2788:                      # @_transaction_2788
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47724368(%rbx), %r15
	cmpl	$0, 47724384(%rbx)
	je	.LBB537_2
# BB#1:
	leaq	47724256(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB537_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB537_4
# BB#3:
	leaq	47724256(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB537_5
.LBB537_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47724256, %rbx         # imm = 0x2D836E0
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB537_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2858;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2858
	.align	16, 0x90
_transaction_2858:                      # @_transaction_2858
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47725424(%rbx), %r15
	cmpl	$0, 47725440(%rbx)
	je	.LBB538_2
# BB#1:
	leaq	47725312(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB538_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB538_4
# BB#3:
	leaq	47725312(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB538_5
.LBB538_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47725312, %rbx         # imm = 0x2D83B00
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB538_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2943;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2943
	.align	16, 0x90
_transaction_2943:                      # @_transaction_2943
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47726480(%rbx), %r15
	cmpl	$0, 47726496(%rbx)
	je	.LBB539_2
# BB#1:
	leaq	47726368(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB539_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB539_4
# BB#3:
	leaq	47726368(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB539_5
.LBB539_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47726368, %rbx         # imm = 0x2D83F20
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB539_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3013;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3013
	.align	16, 0x90
_transaction_3013:                      # @_transaction_3013
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47727536(%rbx), %r15
	cmpl	$0, 47727552(%rbx)
	je	.LBB540_2
# BB#1:
	leaq	47727424(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB540_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB540_4
# BB#3:
	leaq	47727424(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB540_5
.LBB540_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47727424, %rbx         # imm = 0x2D84340
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB540_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3098;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3098
	.align	16, 0x90
_transaction_3098:                      # @_transaction_3098
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47728592(%rbx), %r15
	cmpl	$0, 47728608(%rbx)
	je	.LBB541_2
# BB#1:
	leaq	47728480(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB541_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB541_4
# BB#3:
	leaq	47728480(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB541_5
.LBB541_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47728480, %rbx         # imm = 0x2D84760
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB541_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3168;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3168
	.align	16, 0x90
_transaction_3168:                      # @_transaction_3168
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47729648(%rbx), %r15
	cmpl	$0, 47729664(%rbx)
	je	.LBB542_2
# BB#1:
	leaq	47729536(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB542_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB542_4
# BB#3:
	leaq	47729536(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB542_5
.LBB542_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47729536, %rbx         # imm = 0x2D84B80
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB542_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3238;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3238
	.align	16, 0x90
_transaction_3238:                      # @_transaction_3238
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47730704(%rbx), %r15
	cmpl	$0, 47730720(%rbx)
	je	.LBB543_2
# BB#1:
	leaq	47730592(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB543_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB543_4
# BB#3:
	leaq	47730592(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB543_5
.LBB543_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47730592, %rbx         # imm = 0x2D84FA0
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB543_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3263;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3263
	.align	16, 0x90
_transaction_3263:                      # @_transaction_3263
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47731760(%rbx), %r15
	cmpl	$0, 47731776(%rbx)
	je	.LBB544_2
# BB#1:
	leaq	47731648(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB544_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB544_4
# BB#3:
	leaq	47731648(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB544_5
.LBB544_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47731648, %rbx         # imm = 0x2D853C0
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB544_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3333;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3333
	.align	16, 0x90
_transaction_3333:                      # @_transaction_3333
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47732816(%rbx), %r15
	cmpl	$0, 47732832(%rbx)
	je	.LBB545_2
# BB#1:
	leaq	47732704(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB545_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB545_4
# BB#3:
	leaq	47732704(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB545_5
.LBB545_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47732704, %rbx         # imm = 0x2D857E0
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB545_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3403;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3403
	.align	16, 0x90
_transaction_3403:                      # @_transaction_3403
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47733872(%rbx), %r15
	cmpl	$0, 47733888(%rbx)
	je	.LBB546_2
# BB#1:
	leaq	47733760(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB546_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB546_4
# BB#3:
	leaq	47733760(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB546_5
.LBB546_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47733760, %rbx         # imm = 0x2D85C00
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB546_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3488;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3488
	.align	16, 0x90
_transaction_3488:                      # @_transaction_3488
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47734928(%rbx), %r15
	cmpl	$0, 47734944(%rbx)
	je	.LBB547_2
# BB#1:
	leaq	47734816(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB547_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB547_4
# BB#3:
	leaq	47734816(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB547_5
.LBB547_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47734816, %rbx         # imm = 0x2D86020
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB547_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3558;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3558
	.align	16, 0x90
_transaction_3558:                      # @_transaction_3558
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47735984(%rbx), %r15
	cmpl	$0, 47736000(%rbx)
	je	.LBB548_2
# BB#1:
	leaq	47735872(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB548_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB548_4
# BB#3:
	leaq	47735872(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB548_5
.LBB548_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47735872, %rbx         # imm = 0x2D86440
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB548_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3628;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3628
	.align	16, 0x90
_transaction_3628:                      # @_transaction_3628
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47737040(%rbx), %r15
	cmpl	$0, 47737056(%rbx)
	je	.LBB549_2
# BB#1:
	leaq	47736928(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB549_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB549_4
# BB#3:
	leaq	47736928(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB549_5
.LBB549_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47736928, %rbx         # imm = 0x2D86860
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB549_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3713;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3713
	.align	16, 0x90
_transaction_3713:                      # @_transaction_3713
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47738096(%rbx), %r15
	cmpl	$0, 47738112(%rbx)
	je	.LBB550_2
# BB#1:
	leaq	47737984(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB550_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB550_4
# BB#3:
	leaq	47737984(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB550_5
.LBB550_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47737984, %rbx         # imm = 0x2D86C80
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB550_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3783;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3783
	.align	16, 0x90
_transaction_3783:                      # @_transaction_3783
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47739152(%rbx), %r15
	cmpl	$0, 47739168(%rbx)
	je	.LBB551_2
# BB#1:
	leaq	47739040(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB551_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB551_4
# BB#3:
	leaq	47739040(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB551_5
.LBB551_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47739040, %rbx         # imm = 0x2D870A0
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB551_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3862;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3862
	.align	16, 0x90
_transaction_3862:                      # @_transaction_3862
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$56, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	47740760(%rbx), %r15
	cmpl	$0, 47740776(%rbx)
	je	.LBB552_2
# BB#1:
	leaq	47740648(%rbx), %rcx
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r14
.LBB552_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB552_4
# BB#3:
	leaq	47740648(%rbx), %rcx
	movl	%edi, 32(%rsp)
	movq	$0, 40(%rsp)
	xorl	%r9d, %r9d
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_strengthcmp(%rip)
	testl	%eax, %eax
	je	.LBB552_5
.LBB552_4:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	addq	$47740648, %rbx         # imm = 0x2D876E8
	movq	$0, 32(%rsp)
	movq	%rbx, %rcx
	movl	%esi, %edx
	movq	%r14, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_strength_copy(%rip)
.LBB552_5:
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_7743;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_7743
	.align	16, 0x90
_transaction_7743:                      # @_transaction_7743
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	47741808(%rcx), %r14
	cmpl	$0, 47741824(%rcx)
	je	.LBB553_2
# BB#1:
	addq	$47741696, %rcx         # imm = 0x2D87B00
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB553_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB553_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB553_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_7745;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_7745
	.align	16, 0x90
_transaction_7745:                      # @_transaction_7745
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %rbx
	movl	48(%rbp), %edi
	leaq	47743040(%rcx), %r14
	cmpl	$0, 47743072(%rcx)
	je	.LBB554_2
# BB#1:
	addq	$47742928, %rcx         # imm = 0x2D87FD0
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%rbx, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %rbx
.LBB554_2:
	subl	%esi, %edi
	incl	%edi
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	jne	.LBB554_4
# BB#3:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movl	%esi, %edx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
.LBB554_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _transaction_859;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_859
	.align	16, 0x90
_transaction_859:                       # @_transaction_859
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	771368(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB555_7
# BB#1:
	leaq	771504(%rbx), %r12
	cmpl	$0, 771520(%rbx)
	je	.LBB555_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB555_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB555_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB555_7
.LBB555_5:
	cmpb	$1, 49035816(%rbx)
	jne	.LBB555_6
# BB#8:
	addq	$49035696, %rbx         # imm = 0x2EC39B0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB555_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB555_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _execute_75256;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75256
	.align	16, 0x90
_execute_75256:                         # @_execute_75256
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	.align	16, 0x90
.LBB556_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, 528(%rsi)
	jne	.LBB556_1
# BB#2:
	leaq	40(%rsi), %r14
	movl	$1, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	leaq	-40(%rbp), %rdi
	movl	$8, %r8d
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	608(%rsi), %rdx
	addq	$48895992, %rbx         # imm = 0x2EA17F8
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_udp_matching_64(%rip)
	movsbl	%al, %eax
	testl	%eax, %eax
	je	.LBB556_4
# BB#3:
	addq	$624, %rsi              # imm = 0x270
	movl	$1, 32(%rsp)
	leaq	-40(%rbp), %r8
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var(%rip)
.LBB556_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _execute_75253;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75253
	.align	16, 0x90
_execute_75253:                         # @_execute_75253
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	ng23(%rip), %eax
	andl	$1, %eax
	movl	%eax, 2200(%rdx)
	movl	ng23+4(%rip), %eax
	andl	$1, %eax
	movl	%eax, 2204(%rdx)
	leaq	936(%rdx), %rcx
	addq	$2176, %rdx             # imm = 0x880
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast(%rip)
	addq	$32, %rsp
	popq	%rbp
	ret

	.def	 _execute_75254;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75254
	.align	16, 0x90
_execute_75254:                         # @_execute_75254
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	movq	720(%rsi), %rdx
	leaq	2368(%rsi), %rcx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	40(%rsi), %rcx
	addq	$2344, %rsi             # imm = 0x928
	movq	$0, 32(%rsp)
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_slow_specify_delay_dd0(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_30;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_30
	.align	16, 0x90
_execute_30:                            # @_execute_30
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$32, %rsp
	movq	%rdx, %rsi
	.align	16, 0x90
.LBB559_1:                              # =>This Inner Loop Header: Depth=1
	movl	$1, %edx
	movq	%rsi, %rcx
	callq	*__imp__iki_vlog_set_threadId_for_unrandom(%rip)
	movq	1464(%rsi), %rax
	testq	%rax, %rax
	je	.LBB559_8
# BB#2:                                 #   in Loop: Header=BB559_1 Depth=1
	jmpq	*%rax
.Ltmp1679:                              # Block address taken
.LBB559_3:
	movb	$0, 1544(%rsi)
	movq	944(%rsi), %rax
	movl	4(%rax), %ecx
	notl	%ecx
	testl	(%rax), %ecx
	je	.LBB559_4
# BB#5:
	movl	1420(%rsi), %eax
	notl	%eax
	leaq	880(%rsi), %rcx
	leaq	1680(%rsi), %rdx
	testl	1416(%rsi), %eax
	je	.LBB559_6
# BB#9:
	leaq	ng24(%rip), %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip), %rdi
	xorl	%r9d, %r9d
	callq	*%rdi
	leaq	824(%rsi), %rcx
	leaq	1712(%rsi), %rdx
	leaq	ng23(%rip), %r8
	jmp	.LBB559_7
.LBB559_4:
	leaq	880(%rsi), %rcx
	leaq	1680(%rsi), %rdx
	leaq	ng23(%rip), %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip), %rdi
	xorl	%r9d, %r9d
	callq	*%rdi
	movq	496(%rsi), %r8
	leaq	824(%rsi), %rcx
	leaq	1712(%rsi), %rdx
	jmp	.LBB559_7
.LBB559_6:
	leaq	ng23(%rip), %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip), %rdi
	xorl	%r9d, %r9d
	callq	*%rdi
	leaq	824(%rsi), %rcx
	leaq	1712(%rsi), %rdx
	leaq	ng24(%rip), %r8
.LBB559_7:
	xorl	%r9d, %r9d
	callq	*%rdi
.LBB559_8:
	movb	$1, 1544(%rsi)
	leaq	.Ltmp1679(%rip), %rax
	movq	%rax, 1464(%rsi)
	addq	$32, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_32;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_32
	.align	16, 0x90
_execute_32:                            # @_execute_32
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	.align	16, 0x90
.LBB560_1:                              # =>This Inner Loop Header: Depth=1
	movl	$2, %edx
	movq	%rsi, %rcx
	callq	*__imp__iki_vlog_set_threadId_for_unrandom(%rip)
	movq	1784(%rsi), %rax
	testq	%rax, %rax
	je	.LBB560_4
# BB#2:                                 #   in Loop: Header=BB560_1 Depth=1
	jmpq	*%rax
.Ltmp1683:                              # Block address taken
.LBB560_3:
	movb	$0, 1864(%rsi)
	movq	328(%rsi), %r8
	leaq	712(%rsi), %rcx
	leaq	1872(%rsi), %rdx
	xorl	%r9d, %r9d
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
.LBB560_4:
	movb	$1, 1864(%rsi)
	leaq	.Ltmp1683(%rip), %rax
	movq	%rax, 1784(%rsi)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75260;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75260
	.align	16, 0x90
_execute_75260:                         # @_execute_75260
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$72, %rsp
	movq	%rdx, %rsi
	leaq	152(%rsi), %rdi
	movl	$1, %edx
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rbx
	leaq	-32(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rbx), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	(%rbx), %ecx
	testb	$1, %cl
	je	.LBB561_1
# BB#7:
	movl	$1, -32(%rbp)
	jmp	.LBB561_2
.LBB561_1:
	testl	%eax, %eax
	je	.LBB561_2
# BB#8:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -32(%rbp)
.LBB561_2:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	je	.LBB561_4
# BB#3:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB561_4:
	testb	%al, %al
	je	.LBB561_5
# BB#9:
	movl	$1, %edx
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rdi
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %eax
	cmpl	ng25(%rip), %eax
	jne	.LBB561_12
# BB#10:
	movl	4(%rdi), %eax
	cmpl	ng25+4(%rip), %eax
	jne	.LBB561_12
# BB#11:
	movl	$1, -40(%rbp)
.LBB561_12:
	leaq	-48(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-36(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-40(%rbp), %ecx
	testb	$1, %cl
	je	.LBB561_13
# BB#16:
	movl	$1, -48(%rbp)
	jmp	.LBB561_14
.LBB561_5:
	leaq	-56(%rbp), %rcx
	leaq	-32(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -56(%rbp)
	andl	$1, -52(%rbp)
	jmp	.LBB561_6
.LBB561_13:
	testl	%eax, %eax
	je	.LBB561_14
# BB#17:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -48(%rbp)
.LBB561_14:
	movl	-32(%rbp), %eax
	orl	-48(%rbp), %eax
	movl	%eax, -56(%rbp)
	movl	-28(%rbp), %eax
	orl	-44(%rbp), %eax
	movl	%eax, -52(%rbp)
	je	.LBB561_6
# BB#15:
	orl	%eax, -56(%rbp)
	movl	-28(%rbp), %eax
	notl	%eax
	andl	-32(%rbp), %eax
	notl	%eax
	andl	-52(%rbp), %eax
	movl	-44(%rbp), %ecx
	notl	%ecx
	andl	-48(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -52(%rbp)
.LBB561_6:
	leaq	3208(%rsi), %rcx
	leaq	-56(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	432(%rsi), %rcx
	addq	$3184, %rsi             # imm = 0xC70
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75261;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75261
	.align	16, 0x90
_execute_75261:                         # @_execute_75261
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$64, %rsp
	movq	%rdx, %rsi
	leaq	208(%rsi), %r14
	movl	$1, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	552(%rsi), %rcx
	movl	(%rax), %edx
	movl	4(%rax), %edi
	xorl	(%rcx), %edx
	movl	4(%rcx), %eax
	movl	%edi, %ebx
	orl	%eax, %ebx
	orl	%edx, %ebx
	orl	%eax, %edi
	cmovel	%edx, %ebx
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	%edi, %eax
	notl	%eax
	andl	%ebx, %eax
	testb	$1, %al
	je	.LBB562_1
# BB#7:
	movl	$1, -40(%rbp)
	jmp	.LBB562_2
.LBB562_1:
	testl	%edi, %edi
	je	.LBB562_2
# BB#8:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -40(%rbp)
.LBB562_2:
	cmpl	$0, -40(%rbp)
	movb	$1, %al
	jne	.LBB562_4
# BB#3:
	cmpl	$0, -36(%rbp)
	setne	%al
.LBB562_4:
	testb	%al, %al
	je	.LBB562_5
# BB#9:
	movl	$1, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rdi
	leaq	-48(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %eax
	cmpl	ng25(%rip), %eax
	jne	.LBB562_15
# BB#10:
	movl	4(%rdi), %eax
	cmpl	ng25+4(%rip), %eax
	je	.LBB562_11
.LBB562_15:
	movl	$1, -48(%rbp)
.LBB562_11:
	leaq	-56(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-44(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-48(%rbp), %ecx
	testb	$1, %cl
	je	.LBB562_12
# BB#16:
	movl	$1, -56(%rbp)
	jmp	.LBB562_13
.LBB562_5:
	leaq	-64(%rbp), %rcx
	leaq	-40(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -64(%rbp)
	andl	$1, -60(%rbp)
	jmp	.LBB562_6
.LBB562_12:
	testl	%eax, %eax
	je	.LBB562_13
# BB#17:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -56(%rbp)
.LBB562_13:
	movl	-40(%rbp), %eax
	andl	-56(%rbp), %eax
	movl	%eax, -64(%rbp)
	movl	-36(%rbp), %eax
	orl	-52(%rbp), %eax
	movl	%eax, -60(%rbp)
	je	.LBB562_6
# BB#14:
	orl	%eax, -64(%rbp)
	movl	-40(%rbp), %eax
	movl	-36(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-60(%rbp), %ecx
	movl	-56(%rbp), %eax
	movl	-52(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -60(%rbp)
	movl	-40(%rbp), %eax
	movl	-36(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-64(%rbp), %ecx
	movl	-56(%rbp), %eax
	movl	-52(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -64(%rbp)
.LBB562_6:
	leaq	3376(%rsi), %rcx
	leaq	-64(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	488(%rsi), %rcx
	addq	$3352, %rsi             # imm = 0xD18
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _execute_75262;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75262
	.align	16, 0x90
_execute_75262:                         # @_execute_75262
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	leaq	264(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	664(%rsi), %rcx
	movl	(%rax), %edx
	xorl	(%rcx), %edx
	movl	%edx, -16(%rbp)
	movl	4(%rax), %eax
	orl	4(%rcx), %eax
	movl	%eax, -12(%rbp)
	je	.LBB563_2
# BB#1:
	orl	%eax, -16(%rbp)
.LBB563_2:
	leaq	3544(%rsi), %rcx
	leaq	-16(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	376(%rsi), %rcx
	addq	$3520, %rsi             # imm = 0xDC0
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75263;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75263
	.align	16, 0x90
_execute_75263:                         # @_execute_75263
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	leaq	1328(%rsi), %rcx
	movl	$1, %edx
	xorl	%r8d, %r8d
	callq	*__imp__iki_vlog_signal_handle_value_with_setback(%rip)
	leaq	3712(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	936(%rsi), %rcx
	addq	$3688, %rsi             # imm = 0xE68
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_33;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_33
	.align	16, 0x90
_execute_33:                            # @_execute_33
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	movl	$3, %edx
	movq	%rsi, %rcx
	callq	*__imp__iki_vlog_set_threadId_for_unrandom(%rip)
	leaq	712(%rsi), %rcx
	addq	$2024, %rsi             # imm = 0x7E8
	leaq	ng23(%rip), %r8
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75264;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75264
	.align	16, 0x90
_execute_75264:                         # @_execute_75264
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	leaq	992(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	leaq	3880(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	1048(%rsi), %rcx
	addq	$3856, %rsi             # imm = 0xF10
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75265;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75265
	.align	16, 0x90
_execute_75265:                         # @_execute_75265
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	leaq	1160(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	leaq	4048(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	1104(%rsi), %rcx
	addq	$4024, %rsi             # imm = 0xFB8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75266;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75266
	.align	16, 0x90
_execute_75266:                         # @_execute_75266
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	leaq	1272(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	leaq	4216(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	1216(%rsi), %rcx
	addq	$4192, %rsi             # imm = 0x1060
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _transaction_874;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_874
	.align	16, 0x90
_transaction_874:                       # @_transaction_874
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	773176(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB569_7
# BB#1:
	leaq	773312(%rbx), %r12
	cmpl	$0, 773328(%rbx)
	je	.LBB569_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB569_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB569_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB569_7
.LBB569_5:
	cmpb	$1, 49040704(%rbx)
	jne	.LBB569_6
# BB#8:
	addq	$49040584, %rbx         # imm = 0x2EC4CC8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB569_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB569_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_889;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_889
	.align	16, 0x90
_transaction_889:                       # @_transaction_889
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	774984(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB570_7
# BB#1:
	leaq	775120(%rbx), %r12
	cmpl	$0, 775136(%rbx)
	je	.LBB570_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB570_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB570_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB570_7
.LBB570_5:
	cmpb	$1, 49045592(%rbx)
	jne	.LBB570_6
# BB#8:
	addq	$49045472, %rbx         # imm = 0x2EC5FE0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB570_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB570_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_904;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_904
	.align	16, 0x90
_transaction_904:                       # @_transaction_904
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	776792(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB571_7
# BB#1:
	leaq	776928(%rbx), %r12
	cmpl	$0, 776944(%rbx)
	je	.LBB571_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB571_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB571_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB571_7
.LBB571_5:
	cmpb	$1, 49050480(%rbx)
	jne	.LBB571_6
# BB#8:
	addq	$49050360, %rbx         # imm = 0x2EC72F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB571_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB571_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_919;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_919
	.align	16, 0x90
_transaction_919:                       # @_transaction_919
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	778600(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB572_7
# BB#1:
	leaq	778736(%rbx), %r12
	cmpl	$0, 778752(%rbx)
	je	.LBB572_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB572_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB572_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB572_7
.LBB572_5:
	cmpb	$1, 49055368(%rbx)
	jne	.LBB572_6
# BB#8:
	addq	$49055248, %rbx         # imm = 0x2EC8610
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB572_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB572_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_934;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_934
	.align	16, 0x90
_transaction_934:                       # @_transaction_934
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	780408(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB573_7
# BB#1:
	leaq	780544(%rbx), %r12
	cmpl	$0, 780560(%rbx)
	je	.LBB573_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB573_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB573_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB573_7
.LBB573_5:
	cmpb	$1, 49060256(%rbx)
	jne	.LBB573_6
# BB#8:
	addq	$49060136, %rbx         # imm = 0x2EC9928
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB573_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB573_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_949;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_949
	.align	16, 0x90
_transaction_949:                       # @_transaction_949
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	782216(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB574_7
# BB#1:
	leaq	782352(%rbx), %r12
	cmpl	$0, 782368(%rbx)
	je	.LBB574_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB574_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB574_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB574_7
.LBB574_5:
	cmpb	$1, 49065144(%rbx)
	jne	.LBB574_6
# BB#8:
	addq	$49065024, %rbx         # imm = 0x2ECAC40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB574_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB574_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_964;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_964
	.align	16, 0x90
_transaction_964:                       # @_transaction_964
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	784024(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB575_7
# BB#1:
	leaq	784160(%rbx), %r12
	cmpl	$0, 784176(%rbx)
	je	.LBB575_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB575_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB575_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB575_7
.LBB575_5:
	cmpb	$1, 49070032(%rbx)
	jne	.LBB575_6
# BB#8:
	addq	$49069912, %rbx         # imm = 0x2ECBF58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB575_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB575_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_979;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_979
	.align	16, 0x90
_transaction_979:                       # @_transaction_979
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	785832(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB576_7
# BB#1:
	leaq	785968(%rbx), %r12
	cmpl	$0, 785984(%rbx)
	je	.LBB576_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB576_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB576_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB576_7
.LBB576_5:
	cmpb	$1, 49074920(%rbx)
	jne	.LBB576_6
# BB#8:
	addq	$49074800, %rbx         # imm = 0x2ECD270
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB576_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB576_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_994;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_994
	.align	16, 0x90
_transaction_994:                       # @_transaction_994
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	787640(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB577_7
# BB#1:
	leaq	787776(%rbx), %r12
	cmpl	$0, 787792(%rbx)
	je	.LBB577_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB577_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB577_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB577_7
.LBB577_5:
	cmpb	$1, 49079808(%rbx)
	jne	.LBB577_6
# BB#8:
	addq	$49079688, %rbx         # imm = 0x2ECE588
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB577_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB577_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1009;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1009
	.align	16, 0x90
_transaction_1009:                      # @_transaction_1009
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	789448(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB578_7
# BB#1:
	leaq	789584(%rbx), %r12
	cmpl	$0, 789600(%rbx)
	je	.LBB578_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB578_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB578_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB578_7
.LBB578_5:
	cmpb	$1, 49084696(%rbx)
	jne	.LBB578_6
# BB#8:
	addq	$49084576, %rbx         # imm = 0x2ECF8A0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB578_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB578_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1024;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1024
	.align	16, 0x90
_transaction_1024:                      # @_transaction_1024
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	791256(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB579_7
# BB#1:
	leaq	791392(%rbx), %r12
	cmpl	$0, 791408(%rbx)
	je	.LBB579_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB579_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB579_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB579_7
.LBB579_5:
	cmpb	$1, 49089584(%rbx)
	jne	.LBB579_6
# BB#8:
	addq	$49089464, %rbx         # imm = 0x2ED0BB8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB579_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB579_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1039;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1039
	.align	16, 0x90
_transaction_1039:                      # @_transaction_1039
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	793064(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB580_7
# BB#1:
	leaq	793200(%rbx), %r12
	cmpl	$0, 793216(%rbx)
	je	.LBB580_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB580_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB580_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB580_7
.LBB580_5:
	cmpb	$1, 49094472(%rbx)
	jne	.LBB580_6
# BB#8:
	addq	$49094352, %rbx         # imm = 0x2ED1ED0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB580_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB580_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1054;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1054
	.align	16, 0x90
_transaction_1054:                      # @_transaction_1054
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	794872(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB581_7
# BB#1:
	leaq	795008(%rbx), %r12
	cmpl	$0, 795024(%rbx)
	je	.LBB581_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB581_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB581_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB581_7
.LBB581_5:
	cmpb	$1, 49099360(%rbx)
	jne	.LBB581_6
# BB#8:
	addq	$49099240, %rbx         # imm = 0x2ED31E8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB581_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB581_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1069;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1069
	.align	16, 0x90
_transaction_1069:                      # @_transaction_1069
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	796680(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB582_7
# BB#1:
	leaq	796816(%rbx), %r12
	cmpl	$0, 796832(%rbx)
	je	.LBB582_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB582_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB582_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB582_7
.LBB582_5:
	cmpb	$1, 49104248(%rbx)
	jne	.LBB582_6
# BB#8:
	addq	$49104128, %rbx         # imm = 0x2ED4500
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB582_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB582_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1084;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1084
	.align	16, 0x90
_transaction_1084:                      # @_transaction_1084
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	798488(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB583_7
# BB#1:
	leaq	798624(%rbx), %r12
	cmpl	$0, 798640(%rbx)
	je	.LBB583_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB583_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB583_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB583_7
.LBB583_5:
	cmpb	$1, 49109136(%rbx)
	jne	.LBB583_6
# BB#8:
	addq	$49109016, %rbx         # imm = 0x2ED5818
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB583_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB583_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1099;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1099
	.align	16, 0x90
_transaction_1099:                      # @_transaction_1099
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	800296(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB584_7
# BB#1:
	leaq	800432(%rbx), %r12
	cmpl	$0, 800448(%rbx)
	je	.LBB584_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB584_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB584_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB584_7
.LBB584_5:
	cmpb	$1, 49114024(%rbx)
	jne	.LBB584_6
# BB#8:
	addq	$49113904, %rbx         # imm = 0x2ED6B30
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB584_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB584_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1114;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1114
	.align	16, 0x90
_transaction_1114:                      # @_transaction_1114
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	802104(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB585_7
# BB#1:
	leaq	802240(%rbx), %r12
	cmpl	$0, 802256(%rbx)
	je	.LBB585_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB585_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB585_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB585_7
.LBB585_5:
	cmpb	$1, 49118912(%rbx)
	jne	.LBB585_6
# BB#8:
	addq	$49118792, %rbx         # imm = 0x2ED7E48
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB585_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB585_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1129;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1129
	.align	16, 0x90
_transaction_1129:                      # @_transaction_1129
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	803912(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB586_7
# BB#1:
	leaq	804048(%rbx), %r12
	cmpl	$0, 804064(%rbx)
	je	.LBB586_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB586_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB586_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB586_7
.LBB586_5:
	cmpb	$1, 49123800(%rbx)
	jne	.LBB586_6
# BB#8:
	addq	$49123680, %rbx         # imm = 0x2ED9160
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB586_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB586_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1144;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1144
	.align	16, 0x90
_transaction_1144:                      # @_transaction_1144
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	805720(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB587_7
# BB#1:
	leaq	805856(%rbx), %r12
	cmpl	$0, 805872(%rbx)
	je	.LBB587_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB587_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB587_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB587_7
.LBB587_5:
	cmpb	$1, 49128688(%rbx)
	jne	.LBB587_6
# BB#8:
	addq	$49128568, %rbx         # imm = 0x2EDA478
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB587_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB587_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1159;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1159
	.align	16, 0x90
_transaction_1159:                      # @_transaction_1159
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	807528(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB588_7
# BB#1:
	leaq	807664(%rbx), %r12
	cmpl	$0, 807680(%rbx)
	je	.LBB588_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB588_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB588_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB588_7
.LBB588_5:
	cmpb	$1, 49133576(%rbx)
	jne	.LBB588_6
# BB#8:
	addq	$49133456, %rbx         # imm = 0x2EDB790
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB588_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB588_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1174;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1174
	.align	16, 0x90
_transaction_1174:                      # @_transaction_1174
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	809336(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB589_7
# BB#1:
	leaq	809472(%rbx), %r12
	cmpl	$0, 809488(%rbx)
	je	.LBB589_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB589_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB589_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB589_7
.LBB589_5:
	cmpb	$1, 49138464(%rbx)
	jne	.LBB589_6
# BB#8:
	addq	$49138344, %rbx         # imm = 0x2EDCAA8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB589_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB589_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1189;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1189
	.align	16, 0x90
_transaction_1189:                      # @_transaction_1189
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	811144(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB590_7
# BB#1:
	leaq	811280(%rbx), %r12
	cmpl	$0, 811296(%rbx)
	je	.LBB590_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB590_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB590_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB590_7
.LBB590_5:
	cmpb	$1, 49143352(%rbx)
	jne	.LBB590_6
# BB#8:
	addq	$49143232, %rbx         # imm = 0x2EDDDC0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB590_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB590_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1204;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1204
	.align	16, 0x90
_transaction_1204:                      # @_transaction_1204
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	812952(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB591_7
# BB#1:
	leaq	813088(%rbx), %r12
	cmpl	$0, 813104(%rbx)
	je	.LBB591_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB591_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB591_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB591_7
.LBB591_5:
	cmpb	$1, 49148240(%rbx)
	jne	.LBB591_6
# BB#8:
	addq	$49148120, %rbx         # imm = 0x2EDF0D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB591_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB591_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1219;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1219
	.align	16, 0x90
_transaction_1219:                      # @_transaction_1219
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	814760(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB592_7
# BB#1:
	leaq	814896(%rbx), %r12
	cmpl	$0, 814912(%rbx)
	je	.LBB592_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB592_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB592_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB592_7
.LBB592_5:
	cmpb	$1, 49153128(%rbx)
	jne	.LBB592_6
# BB#8:
	addq	$49153008, %rbx         # imm = 0x2EE03F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB592_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB592_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1234;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1234
	.align	16, 0x90
_transaction_1234:                      # @_transaction_1234
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	816568(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB593_7
# BB#1:
	leaq	816704(%rbx), %r12
	cmpl	$0, 816720(%rbx)
	je	.LBB593_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB593_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB593_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB593_7
.LBB593_5:
	cmpb	$1, 49158016(%rbx)
	jne	.LBB593_6
# BB#8:
	addq	$49157896, %rbx         # imm = 0x2EE1708
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB593_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB593_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1249;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1249
	.align	16, 0x90
_transaction_1249:                      # @_transaction_1249
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	818376(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB594_7
# BB#1:
	leaq	818512(%rbx), %r12
	cmpl	$0, 818528(%rbx)
	je	.LBB594_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB594_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB594_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB594_7
.LBB594_5:
	cmpb	$1, 49162904(%rbx)
	jne	.LBB594_6
# BB#8:
	addq	$49162784, %rbx         # imm = 0x2EE2A20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB594_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB594_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1264;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1264
	.align	16, 0x90
_transaction_1264:                      # @_transaction_1264
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	820184(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB595_7
# BB#1:
	leaq	820320(%rbx), %r12
	cmpl	$0, 820336(%rbx)
	je	.LBB595_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB595_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB595_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB595_7
.LBB595_5:
	cmpb	$1, 49167792(%rbx)
	jne	.LBB595_6
# BB#8:
	addq	$49167672, %rbx         # imm = 0x2EE3D38
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB595_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB595_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1279;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1279
	.align	16, 0x90
_transaction_1279:                      # @_transaction_1279
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	821992(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB596_7
# BB#1:
	leaq	822128(%rbx), %r12
	cmpl	$0, 822144(%rbx)
	je	.LBB596_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB596_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB596_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB596_7
.LBB596_5:
	cmpb	$1, 49172680(%rbx)
	jne	.LBB596_6
# BB#8:
	addq	$49172560, %rbx         # imm = 0x2EE5050
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB596_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB596_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1294;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1294
	.align	16, 0x90
_transaction_1294:                      # @_transaction_1294
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	823800(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB597_7
# BB#1:
	leaq	823936(%rbx), %r12
	cmpl	$0, 823952(%rbx)
	je	.LBB597_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB597_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB597_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB597_7
.LBB597_5:
	cmpb	$1, 49177568(%rbx)
	jne	.LBB597_6
# BB#8:
	addq	$49177448, %rbx         # imm = 0x2EE6368
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB597_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB597_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1309;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1309
	.align	16, 0x90
_transaction_1309:                      # @_transaction_1309
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	825608(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB598_7
# BB#1:
	leaq	825744(%rbx), %r12
	cmpl	$0, 825760(%rbx)
	je	.LBB598_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB598_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB598_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB598_7
.LBB598_5:
	cmpb	$1, 49182456(%rbx)
	jne	.LBB598_6
# BB#8:
	addq	$49182336, %rbx         # imm = 0x2EE7680
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB598_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB598_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1324;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1324
	.align	16, 0x90
_transaction_1324:                      # @_transaction_1324
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	827416(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB599_7
# BB#1:
	leaq	827552(%rbx), %r12
	cmpl	$0, 827568(%rbx)
	je	.LBB599_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB599_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB599_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB599_7
.LBB599_5:
	cmpb	$1, 49187344(%rbx)
	jne	.LBB599_6
# BB#8:
	addq	$49187224, %rbx         # imm = 0x2EE8998
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB599_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB599_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1339;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1339
	.align	16, 0x90
_transaction_1339:                      # @_transaction_1339
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	829224(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB600_7
# BB#1:
	leaq	829360(%rbx), %r12
	cmpl	$0, 829376(%rbx)
	je	.LBB600_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB600_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB600_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB600_7
.LBB600_5:
	cmpb	$1, 49192232(%rbx)
	jne	.LBB600_6
# BB#8:
	addq	$49192112, %rbx         # imm = 0x2EE9CB0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB600_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB600_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1354;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1354
	.align	16, 0x90
_transaction_1354:                      # @_transaction_1354
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	831032(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB601_7
# BB#1:
	leaq	831168(%rbx), %r12
	cmpl	$0, 831184(%rbx)
	je	.LBB601_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB601_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB601_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB601_7
.LBB601_5:
	cmpb	$1, 49197120(%rbx)
	jne	.LBB601_6
# BB#8:
	addq	$49197000, %rbx         # imm = 0x2EEAFC8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB601_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB601_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1369;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1369
	.align	16, 0x90
_transaction_1369:                      # @_transaction_1369
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	832840(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB602_7
# BB#1:
	leaq	832976(%rbx), %r12
	cmpl	$0, 832992(%rbx)
	je	.LBB602_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB602_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB602_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB602_7
.LBB602_5:
	cmpb	$1, 49202008(%rbx)
	jne	.LBB602_6
# BB#8:
	addq	$49201888, %rbx         # imm = 0x2EEC2E0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB602_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB602_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1384;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1384
	.align	16, 0x90
_transaction_1384:                      # @_transaction_1384
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	834648(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB603_7
# BB#1:
	leaq	834784(%rbx), %r12
	cmpl	$0, 834800(%rbx)
	je	.LBB603_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB603_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB603_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB603_7
.LBB603_5:
	cmpb	$1, 49206896(%rbx)
	jne	.LBB603_6
# BB#8:
	addq	$49206776, %rbx         # imm = 0x2EED5F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB603_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB603_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1399;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1399
	.align	16, 0x90
_transaction_1399:                      # @_transaction_1399
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	836456(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB604_7
# BB#1:
	leaq	836592(%rbx), %r12
	cmpl	$0, 836608(%rbx)
	je	.LBB604_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB604_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB604_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB604_7
.LBB604_5:
	cmpb	$1, 49211784(%rbx)
	jne	.LBB604_6
# BB#8:
	addq	$49211664, %rbx         # imm = 0x2EEE910
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB604_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB604_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1414;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1414
	.align	16, 0x90
_transaction_1414:                      # @_transaction_1414
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	838264(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB605_7
# BB#1:
	leaq	838400(%rbx), %r12
	cmpl	$0, 838416(%rbx)
	je	.LBB605_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB605_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB605_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB605_7
.LBB605_5:
	cmpb	$1, 49216672(%rbx)
	jne	.LBB605_6
# BB#8:
	addq	$49216552, %rbx         # imm = 0x2EEFC28
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB605_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB605_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1429;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1429
	.align	16, 0x90
_transaction_1429:                      # @_transaction_1429
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	840072(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB606_7
# BB#1:
	leaq	840208(%rbx), %r12
	cmpl	$0, 840224(%rbx)
	je	.LBB606_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB606_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB606_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB606_7
.LBB606_5:
	cmpb	$1, 49221560(%rbx)
	jne	.LBB606_6
# BB#8:
	addq	$49221440, %rbx         # imm = 0x2EF0F40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB606_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB606_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1444;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1444
	.align	16, 0x90
_transaction_1444:                      # @_transaction_1444
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	841880(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB607_7
# BB#1:
	leaq	842016(%rbx), %r12
	cmpl	$0, 842032(%rbx)
	je	.LBB607_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB607_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB607_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB607_7
.LBB607_5:
	cmpb	$1, 49226448(%rbx)
	jne	.LBB607_6
# BB#8:
	addq	$49226328, %rbx         # imm = 0x2EF2258
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB607_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB607_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1459;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1459
	.align	16, 0x90
_transaction_1459:                      # @_transaction_1459
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	843688(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB608_7
# BB#1:
	leaq	843824(%rbx), %r12
	cmpl	$0, 843840(%rbx)
	je	.LBB608_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB608_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB608_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB608_7
.LBB608_5:
	cmpb	$1, 49231336(%rbx)
	jne	.LBB608_6
# BB#8:
	addq	$49231216, %rbx         # imm = 0x2EF3570
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB608_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB608_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1474;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1474
	.align	16, 0x90
_transaction_1474:                      # @_transaction_1474
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	845496(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB609_7
# BB#1:
	leaq	845632(%rbx), %r12
	cmpl	$0, 845648(%rbx)
	je	.LBB609_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB609_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB609_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB609_7
.LBB609_5:
	cmpb	$1, 49236224(%rbx)
	jne	.LBB609_6
# BB#8:
	addq	$49236104, %rbx         # imm = 0x2EF4888
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB609_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB609_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1489;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1489
	.align	16, 0x90
_transaction_1489:                      # @_transaction_1489
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	847304(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB610_7
# BB#1:
	leaq	847440(%rbx), %r12
	cmpl	$0, 847456(%rbx)
	je	.LBB610_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB610_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB610_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB610_7
.LBB610_5:
	cmpb	$1, 49241112(%rbx)
	jne	.LBB610_6
# BB#8:
	addq	$49240992, %rbx         # imm = 0x2EF5BA0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB610_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB610_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1504;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1504
	.align	16, 0x90
_transaction_1504:                      # @_transaction_1504
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	849112(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB611_7
# BB#1:
	leaq	849248(%rbx), %r12
	cmpl	$0, 849264(%rbx)
	je	.LBB611_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB611_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB611_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB611_7
.LBB611_5:
	cmpb	$1, 49246000(%rbx)
	jne	.LBB611_6
# BB#8:
	addq	$49245880, %rbx         # imm = 0x2EF6EB8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB611_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB611_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1519;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1519
	.align	16, 0x90
_transaction_1519:                      # @_transaction_1519
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	850920(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB612_7
# BB#1:
	leaq	851056(%rbx), %r12
	cmpl	$0, 851072(%rbx)
	je	.LBB612_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB612_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB612_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB612_7
.LBB612_5:
	cmpb	$1, 49250888(%rbx)
	jne	.LBB612_6
# BB#8:
	addq	$49250768, %rbx         # imm = 0x2EF81D0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB612_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB612_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1534;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1534
	.align	16, 0x90
_transaction_1534:                      # @_transaction_1534
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	852728(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB613_7
# BB#1:
	leaq	852864(%rbx), %r12
	cmpl	$0, 852880(%rbx)
	je	.LBB613_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB613_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB613_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB613_7
.LBB613_5:
	cmpb	$1, 49255776(%rbx)
	jne	.LBB613_6
# BB#8:
	addq	$49255656, %rbx         # imm = 0x2EF94E8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB613_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB613_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_1549;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_1549
	.align	16, 0x90
_transaction_1549:                      # @_transaction_1549
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	854536(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB614_7
# BB#1:
	leaq	854672(%rbx), %r12
	cmpl	$0, 854688(%rbx)
	je	.LBB614_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB614_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB614_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB614_7
.LBB614_5:
	cmpb	$1, 49260664(%rbx)
	jne	.LBB614_6
# BB#8:
	addq	$49260544, %rbx         # imm = 0x2EFA800
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB614_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB614_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _execute_75914;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75914
	.align	16, 0x90
_execute_75914:                         # @_execute_75914
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	.align	16, 0x90
.LBB615_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, 472(%rsi)
	jne	.LBB615_1
# BB#2:
	leaq	40(%rsi), %r14
	movl	$1, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	leaq	-40(%rbp), %rdi
	movl	$8, %r8d
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	552(%rsi), %rdx
	addq	$48896456, %rbx         # imm = 0x2EA19C8
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_udp_matching_64(%rip)
	movsbl	%al, %eax
	testl	%eax, %eax
	je	.LBB615_4
# BB#3:
	movl	-40(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 592(%rsi)
	movl	-36(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 596(%rsi)
	addq	$568, %rsi              # imm = 0x238
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast(%rip)
.LBB615_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _execute_75916;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75916
	.align	16, 0x90
_execute_75916:                         # @_execute_75916
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	.align	16, 0x90
.LBB616_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, 472(%rsi)
	jne	.LBB616_1
# BB#2:
	leaq	40(%rsi), %r14
	movl	$1, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	leaq	-40(%rbp), %rdi
	movl	$8, %r8d
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	552(%rsi), %rdx
	addq	$48896692, %rbx         # imm = 0x2EA1AB4
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	*__imp__iki_vlog_udp_matching_64(%rip)
	movsbl	%al, %eax
	testl	%eax, %eax
	je	.LBB616_4
# BB#3:
	movl	-40(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 592(%rsi)
	movl	-36(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 596(%rsi)
	addq	$568, %rsi              # imm = 0x238
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast(%rip)
.LBB616_4:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _execute_75911;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75911
	.align	16, 0x90
_execute_75911:                         # @_execute_75911
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	96(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1384(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	376(%rsi), %rcx
	addq	$1360, %rsi             # imm = 0x550
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75912;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75912
	.align	16, 0x90
_execute_75912:                         # @_execute_75912
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	152(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1552(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	432(%rsi), %rcx
	addq	$1528, %rsi             # imm = 0x5F8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75913;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75913
	.align	16, 0x90
_execute_75913:                         # @_execute_75913
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	208(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1720(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	488(%rsi), %rcx
	addq	$1696, %rsi             # imm = 0x6A0
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75917;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75917
	.align	16, 0x90
_execute_75917:                         # @_execute_75917
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1168(%rsi), %r9
	leaq	ng26(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	1888(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	1104(%rsi), %rcx
	addq	$1864, %rsi             # imm = 0x748
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75918;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75918
	.align	16, 0x90
_execute_75918:                         # @_execute_75918
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1176(%rsi), %r9
	leaq	ng27(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2056(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	1048(%rsi), %rcx
	addq	$2032, %rsi             # imm = 0x7F0
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75919;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75919
	.align	16, 0x90
_execute_75919:                         # @_execute_75919
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1184(%rsi), %r9
	leaq	ng28(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2224(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	992(%rsi), %rcx
	addq	$2200, %rsi             # imm = 0x898
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75920;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75920
	.align	16, 0x90
_execute_75920:                         # @_execute_75920
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1192(%rsi), %r9
	leaq	ng29(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2392(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	936(%rsi), %rcx
	addq	$2368, %rsi             # imm = 0x940
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75921;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75921
	.align	16, 0x90
_execute_75921:                         # @_execute_75921
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1200(%rsi), %r9
	leaq	ng30(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2560(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	880(%rsi), %rcx
	addq	$2536, %rsi             # imm = 0x9E8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75922;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75922
	.align	16, 0x90
_execute_75922:                         # @_execute_75922
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1208(%rsi), %r9
	leaq	ng31(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2728(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	824(%rsi), %rcx
	addq	$2704, %rsi             # imm = 0xA90
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75923;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75923
	.align	16, 0x90
_execute_75923:                         # @_execute_75923
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1216(%rsi), %r9
	leaq	ng32(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2896(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	768(%rsi), %rcx
	addq	$2872, %rsi             # imm = 0xB38
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_75924;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_75924
	.align	16, 0x90
_execute_75924:                         # @_execute_75924
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$120, %rsp
	movq	%rdx, %rsi
	leaq	1224(%rsi), %r9
	leaq	ng33(%rip), %rax
	movq	%rax, 80(%rsp)
	movl	$1, 96(%rsp)
	movl	$32, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	3064(%rsi), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	712(%rsi), %rcx
	addq	$3040, %rsi             # imm = 0xBE0
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$120, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _transaction_2684;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2684
	.align	16, 0x90
_transaction_2684:                      # @_transaction_2684
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1035544(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB628_7
# BB#1:
	leaq	1035680(%rbx), %r12
	cmpl	$0, 1035696(%rbx)
	je	.LBB628_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB628_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB628_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB628_7
.LBB628_5:
	cmpb	$1, 49644112(%rbx)
	jne	.LBB628_6
# BB#8:
	addq	$49643992, %rbx         # imm = 0x2F581D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB628_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB628_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2699;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2699
	.align	16, 0x90
_transaction_2699:                      # @_transaction_2699
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1037352(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB629_7
# BB#1:
	leaq	1037488(%rbx), %r12
	cmpl	$0, 1037504(%rbx)
	je	.LBB629_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB629_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB629_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB629_7
.LBB629_5:
	cmpb	$1, 49649000(%rbx)
	jne	.LBB629_6
# BB#8:
	addq	$49648880, %rbx         # imm = 0x2F594F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB629_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB629_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2714;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2714
	.align	16, 0x90
_transaction_2714:                      # @_transaction_2714
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1039160(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB630_7
# BB#1:
	leaq	1039296(%rbx), %r12
	cmpl	$0, 1039312(%rbx)
	je	.LBB630_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB630_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB630_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB630_7
.LBB630_5:
	cmpb	$1, 49653888(%rbx)
	jne	.LBB630_6
# BB#8:
	addq	$49653768, %rbx         # imm = 0x2F5A808
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB630_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB630_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _execute_77143;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77143
	.align	16, 0x90
_execute_77143:                         # @_execute_77143
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	-24(%rbp), %rdi
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_std_memset(%rip)
	leaq	912(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	152(%rsi), %rcx
	addq	$888, %rsi              # imm = 0x378
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_77144;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77144
	.align	16, 0x90
_execute_77144:                         # @_execute_77144
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	-24(%rbp), %rdi
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_std_memset(%rip)
	leaq	1072(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	208(%rsi), %rcx
	addq	$1048, %rsi             # imm = 0x418
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_77151;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77151
	.align	16, 0x90
_execute_77151:                         # @_execute_77151
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r14
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$160, %rsp
	movq	%rdx, %rsi
	movq	608(%rsi), %r14
	movq	440(%rsi), %rbx
	movq	552(%rsi), %r9
	movl	$1, -64(%rbp)
	movl	$3, -60(%rbp)
	movl	$0, -56(%rbp)
	leaq	-64(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng33(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng31(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-48(%rbp), %rdi
	movl	$1, %edx
	movl	$3, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%r14, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$3, 40(%rsp)
	leaq	-40(%rbp), %rcx
	movl	$4, %edx
	movl	$4, %r8d
	movl	$2, %r9d
	callq	*__imp__iki_vlog_concat(%rip)
	movl	(%rbx), %eax
	xorl	-40(%rbp), %eax
	movl	%eax, -72(%rbp)
	movl	4(%rbx), %eax
	orl	-36(%rbp), %eax
	movl	%eax, -68(%rbp)
	je	.LBB633_2
# BB#1:
	orl	%eax, -72(%rbp)
.LBB633_2:
	leaq	2248(%rsi), %rcx
	leaq	-72(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	488(%rsi), %rcx
	addq	$2224, %rsi             # imm = 0x8B0
	xorl	%r8d, %r8d
	movl	$3, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$160, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	ret

	.def	 _execute_77152;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77152
	.align	16, 0x90
_execute_77152:                         # @_execute_77152
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$80, %rsp
	movq	%rdx, %rsi
	movq	440(%rsi), %rdx
	leaq	-40(%rbp), %rcx
	xorl	%r8d, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-32(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rdi), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	(%rdi), %ecx
	testb	$1, %cl
	je	.LBB634_1
# BB#13:
	movl	$1, -32(%rbp)
	jmp	.LBB634_2
.LBB634_1:
	testl	%eax, %eax
	je	.LBB634_2
# BB#14:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -32(%rbp)
.LBB634_2:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	jne	.LBB634_4
# BB#3:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB634_4:
	testb	%al, %al
                                        # implicit-def: RDI
	je	.LBB634_5
# BB#15:
	movq	608(%rsi), %rdi
.LBB634_5:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	je	.LBB634_7
# BB#6:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB634_7:
	testb	%al, %al
                                        # implicit-def: RAX
	je	.LBB634_8
# BB#16:
	movq	384(%rsi), %rdx
	leaq	-48(%rbp), %rcx
	xorl	%r8d, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
.LBB634_8:
	cmpl	$0, -28(%rbp)
	je	.LBB634_9
# BB#17:
	movq	%rax, 32(%rsp)
	movl	$1, 40(%rsp)
	leaq	-24(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r9d
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_unsigned_bit_combine(%rip)
	jmp	.LBB634_12
.LBB634_9:
	cmpl	$0, -32(%rbp)
	je	.LBB634_10
# BB#18:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	jmp	.LBB634_11
.LBB634_10:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
.LBB634_11:
	callq	*__imp__iki_std_memcpy(%rip)
.LBB634_12:
	movl	-24(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2416(%rsi)
	movl	-20(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2420(%rsi)
	leaq	544(%rsi), %rcx
	addq	$2392, %rsi             # imm = 0x958
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$80, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_77153;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77153
	.align	16, 0x90
_execute_77153:                         # @_execute_77153
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$96, %rsp
	movq	%rdx, %rsi
	movq	440(%rsi), %rdx
	leaq	-40(%rbp), %rcx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-32(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rdi), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	(%rdi), %ecx
	testb	$1, %cl
	je	.LBB635_1
# BB#13:
	movl	$1, -32(%rbp)
	jmp	.LBB635_2
.LBB635_1:
	testl	%eax, %eax
	je	.LBB635_2
# BB#14:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -32(%rbp)
.LBB635_2:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	jne	.LBB635_4
# BB#3:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB635_4:
	testb	%al, %al
                                        # implicit-def: RDI
	je	.LBB635_5
# BB#15:
	movq	552(%rsi), %rdx
	leaq	-48(%rbp), %rcx
	xorl	%r8d, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
.LBB635_5:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	je	.LBB635_7
# BB#6:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB635_7:
	testb	%al, %al
                                        # implicit-def: RAX
	je	.LBB635_8
# BB#16:
	movq	384(%rsi), %rdx
	leaq	-56(%rbp), %rcx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
.LBB635_8:
	cmpl	$0, -28(%rbp)
	je	.LBB635_9
# BB#17:
	movq	%rax, 32(%rsp)
	movl	$1, 40(%rsp)
	leaq	-24(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r9d
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_unsigned_bit_combine(%rip)
	jmp	.LBB635_12
.LBB635_9:
	cmpl	$0, -32(%rbp)
	je	.LBB635_10
# BB#18:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	jmp	.LBB635_11
.LBB635_10:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
.LBB635_11:
	callq	*__imp__iki_std_memcpy(%rip)
.LBB635_12:
	movl	-24(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2584(%rsi)
	movl	-20(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2588(%rsi)
	leaq	544(%rsi), %rcx
	addq	$2560, %rsi             # imm = 0xA00
	movl	$1, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$96, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_77154;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77154
	.align	16, 0x90
_execute_77154:                         # @_execute_77154
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$96, %rsp
	movq	%rdx, %rsi
	movq	440(%rsi), %rdx
	leaq	-40(%rbp), %rcx
	movl	$2, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-32(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rdi), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	(%rdi), %ecx
	testb	$1, %cl
	je	.LBB636_1
# BB#13:
	movl	$1, -32(%rbp)
	jmp	.LBB636_2
.LBB636_1:
	testl	%eax, %eax
	je	.LBB636_2
# BB#14:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -32(%rbp)
.LBB636_2:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	jne	.LBB636_4
# BB#3:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB636_4:
	testb	%al, %al
                                        # implicit-def: RDI
	je	.LBB636_5
# BB#15:
	movq	552(%rsi), %rdx
	leaq	-48(%rbp), %rcx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
.LBB636_5:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	je	.LBB636_7
# BB#6:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB636_7:
	testb	%al, %al
                                        # implicit-def: RAX
	je	.LBB636_8
# BB#16:
	movq	384(%rsi), %rdx
	leaq	-56(%rbp), %rcx
	movl	$2, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
.LBB636_8:
	cmpl	$0, -28(%rbp)
	je	.LBB636_9
# BB#17:
	movq	%rax, 32(%rsp)
	movl	$1, 40(%rsp)
	leaq	-24(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r9d
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_unsigned_bit_combine(%rip)
	jmp	.LBB636_12
.LBB636_9:
	cmpl	$0, -32(%rbp)
	je	.LBB636_10
# BB#18:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	jmp	.LBB636_11
.LBB636_10:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
.LBB636_11:
	callq	*__imp__iki_std_memcpy(%rip)
.LBB636_12:
	movl	-24(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2752(%rsi)
	movl	-20(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2756(%rsi)
	leaq	544(%rsi), %rcx
	addq	$2728, %rsi             # imm = 0xAA8
	movl	$2, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$96, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_77155;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77155
	.align	16, 0x90
_execute_77155:                         # @_execute_77155
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$96, %rsp
	movq	%rdx, %rsi
	movq	440(%rsi), %rdx
	leaq	-40(%rbp), %rcx
	movl	$3, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-32(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rdi), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	(%rdi), %ecx
	testb	$1, %cl
	je	.LBB637_1
# BB#13:
	movl	$1, -32(%rbp)
	jmp	.LBB637_2
.LBB637_1:
	testl	%eax, %eax
	je	.LBB637_2
# BB#14:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -32(%rbp)
.LBB637_2:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	jne	.LBB637_4
# BB#3:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB637_4:
	testb	%al, %al
                                        # implicit-def: RDI
	je	.LBB637_5
# BB#15:
	movq	552(%rsi), %rdx
	leaq	-48(%rbp), %rcx
	movl	$2, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
.LBB637_5:
	cmpl	$0, -32(%rbp)
	movb	$1, %al
	je	.LBB637_7
# BB#6:
	cmpl	$0, -28(%rbp)
	setne	%al
.LBB637_7:
	testb	%al, %al
                                        # implicit-def: RAX
	je	.LBB637_8
# BB#16:
	movq	384(%rsi), %rdx
	leaq	-56(%rbp), %rcx
	movl	$3, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
.LBB637_8:
	cmpl	$0, -28(%rbp)
	je	.LBB637_9
# BB#17:
	movq	%rax, 32(%rsp)
	movl	$1, 40(%rsp)
	leaq	-24(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r9d
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_unsigned_bit_combine(%rip)
	jmp	.LBB637_12
.LBB637_9:
	cmpl	$0, -32(%rbp)
	je	.LBB637_10
# BB#18:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	jmp	.LBB637_11
.LBB637_10:
	leaq	-24(%rbp), %rcx
	movl	$8, %r8d
	movq	%rax, %rdx
.LBB637_11:
	callq	*__imp__iki_std_memcpy(%rip)
.LBB637_12:
	movl	-24(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2920(%rsi)
	movl	-20(%rbp), %eax
	andl	$1, %eax
	movl	%eax, 2924(%rsi)
	leaq	544(%rsi), %rcx
	addq	$2896, %rsi             # imm = 0xB50
	movl	$3, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$96, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_77156;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_77156
	.align	16, 0x90
_execute_77156:                         # @_execute_77156
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	subq	$40, %rsp
	movq	%rdx, %rsi
	movq	664(%rsi), %rcx
	movq	720(%rsi), %rax
	movl	(%rcx), %edx
	orl	(%rax), %edx
	movl	%edx, -16(%rbp)
	movl	4(%rcx), %edx
	orl	4(%rax), %edx
	movl	%edx, -12(%rbp)
	je	.LBB638_2
# BB#1:
	orl	%edx, -16(%rbp)
	movl	4(%rcx), %edx
	notl	%edx
	andl	(%rcx), %edx
	notl	%edx
	andl	-12(%rbp), %edx
	movl	%edx, -12(%rbp)
	movl	4(%rax), %ecx
	notl	%ecx
	andl	(%rax), %ecx
	notl	%ecx
	andl	%edx, %ecx
	movl	%ecx, -12(%rbp)
.LBB638_2:
	leaq	3088(%rsi), %rcx
	leaq	-16(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	600(%rsi), %rcx
	addq	$3064, %rsi             # imm = 0xBF8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	ret

	.def	 _transaction_2739;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2739
	.align	16, 0x90
_transaction_2739:                      # @_transaction_2739
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1042088(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB639_7
# BB#1:
	leaq	1042224(%rbx), %r12
	cmpl	$0, 1042240(%rbx)
	je	.LBB639_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB639_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB639_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB639_7
.LBB639_5:
	cmpb	$1, 49661880(%rbx)
	jne	.LBB639_6
# BB#8:
	addq	$49661760, %rbx         # imm = 0x2F5C740
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB639_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB639_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2754;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2754
	.align	16, 0x90
_transaction_2754:                      # @_transaction_2754
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1043896(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB640_7
# BB#1:
	leaq	1044032(%rbx), %r12
	cmpl	$0, 1044048(%rbx)
	je	.LBB640_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB640_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB640_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB640_7
.LBB640_5:
	cmpb	$1, 49666768(%rbx)
	jne	.LBB640_6
# BB#8:
	addq	$49666648, %rbx         # imm = 0x2F5DA58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB640_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB640_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2769;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2769
	.align	16, 0x90
_transaction_2769:                      # @_transaction_2769
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1045704(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB641_7
# BB#1:
	leaq	1045840(%rbx), %r12
	cmpl	$0, 1045856(%rbx)
	je	.LBB641_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB641_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB641_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB641_7
.LBB641_5:
	cmpb	$1, 49671656(%rbx)
	jne	.LBB641_6
# BB#8:
	addq	$49671536, %rbx         # imm = 0x2F5ED70
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB641_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB641_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2784;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2784
	.align	16, 0x90
_transaction_2784:                      # @_transaction_2784
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1047512(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB642_7
# BB#1:
	leaq	1047648(%rbx), %r12
	cmpl	$0, 1047664(%rbx)
	je	.LBB642_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB642_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB642_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB642_7
.LBB642_5:
	cmpb	$1, 49676544(%rbx)
	jne	.LBB642_6
# BB#8:
	addq	$49676424, %rbx         # imm = 0x2F60088
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB642_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB642_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2809;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2809
	.align	16, 0x90
_transaction_2809:                      # @_transaction_2809
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1050440(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB643_7
# BB#1:
	leaq	1050576(%rbx), %r12
	cmpl	$0, 1050592(%rbx)
	je	.LBB643_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB643_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB643_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB643_7
.LBB643_5:
	cmpb	$1, 49684536(%rbx)
	jne	.LBB643_6
# BB#8:
	addq	$49684416, %rbx         # imm = 0x2F61FC0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB643_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB643_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2824;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2824
	.align	16, 0x90
_transaction_2824:                      # @_transaction_2824
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1052248(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB644_7
# BB#1:
	leaq	1052384(%rbx), %r12
	cmpl	$0, 1052400(%rbx)
	je	.LBB644_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB644_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB644_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB644_7
.LBB644_5:
	cmpb	$1, 49689424(%rbx)
	jne	.LBB644_6
# BB#8:
	addq	$49689304, %rbx         # imm = 0x2F632D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB644_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB644_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2839;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2839
	.align	16, 0x90
_transaction_2839:                      # @_transaction_2839
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1054056(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB645_7
# BB#1:
	leaq	1054192(%rbx), %r12
	cmpl	$0, 1054208(%rbx)
	je	.LBB645_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB645_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB645_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB645_7
.LBB645_5:
	cmpb	$1, 49694312(%rbx)
	jne	.LBB645_6
# BB#8:
	addq	$49694192, %rbx         # imm = 0x2F645F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB645_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB645_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2854;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2854
	.align	16, 0x90
_transaction_2854:                      # @_transaction_2854
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1055864(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB646_7
# BB#1:
	leaq	1056000(%rbx), %r12
	cmpl	$0, 1056016(%rbx)
	je	.LBB646_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB646_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB646_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB646_7
.LBB646_5:
	cmpb	$1, 49699200(%rbx)
	jne	.LBB646_6
# BB#8:
	addq	$49699080, %rbx         # imm = 0x2F65908
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB646_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB646_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2879;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2879
	.align	16, 0x90
_transaction_2879:                      # @_transaction_2879
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1058792(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB647_7
# BB#1:
	leaq	1058928(%rbx), %r12
	cmpl	$0, 1058944(%rbx)
	je	.LBB647_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB647_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB647_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB647_7
.LBB647_5:
	cmpb	$1, 49707192(%rbx)
	jne	.LBB647_6
# BB#8:
	addq	$49707072, %rbx         # imm = 0x2F67840
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB647_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB647_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2894;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2894
	.align	16, 0x90
_transaction_2894:                      # @_transaction_2894
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1060600(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB648_7
# BB#1:
	leaq	1060736(%rbx), %r12
	cmpl	$0, 1060752(%rbx)
	je	.LBB648_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB648_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB648_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB648_7
.LBB648_5:
	cmpb	$1, 49712080(%rbx)
	jne	.LBB648_6
# BB#8:
	addq	$49711960, %rbx         # imm = 0x2F68B58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB648_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB648_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2909;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2909
	.align	16, 0x90
_transaction_2909:                      # @_transaction_2909
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1062408(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB649_7
# BB#1:
	leaq	1062544(%rbx), %r12
	cmpl	$0, 1062560(%rbx)
	je	.LBB649_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB649_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB649_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB649_7
.LBB649_5:
	cmpb	$1, 49716968(%rbx)
	jne	.LBB649_6
# BB#8:
	addq	$49716848, %rbx         # imm = 0x2F69E70
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB649_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB649_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2924;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2924
	.align	16, 0x90
_transaction_2924:                      # @_transaction_2924
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1064216(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB650_7
# BB#1:
	leaq	1064352(%rbx), %r12
	cmpl	$0, 1064368(%rbx)
	je	.LBB650_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB650_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB650_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB650_7
.LBB650_5:
	cmpb	$1, 49721856(%rbx)
	jne	.LBB650_6
# BB#8:
	addq	$49721736, %rbx         # imm = 0x2F6B188
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB650_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB650_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2939;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2939
	.align	16, 0x90
_transaction_2939:                      # @_transaction_2939
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1066024(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB651_7
# BB#1:
	leaq	1066160(%rbx), %r12
	cmpl	$0, 1066176(%rbx)
	je	.LBB651_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB651_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB651_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB651_7
.LBB651_5:
	cmpb	$1, 49726744(%rbx)
	jne	.LBB651_6
# BB#8:
	addq	$49726624, %rbx         # imm = 0x2F6C4A0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB651_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB651_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2964;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2964
	.align	16, 0x90
_transaction_2964:                      # @_transaction_2964
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1068952(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB652_7
# BB#1:
	leaq	1069088(%rbx), %r12
	cmpl	$0, 1069104(%rbx)
	je	.LBB652_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB652_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB652_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB652_7
.LBB652_5:
	cmpb	$1, 49734736(%rbx)
	jne	.LBB652_6
# BB#8:
	addq	$49734616, %rbx         # imm = 0x2F6E3D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB652_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB652_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2979;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2979
	.align	16, 0x90
_transaction_2979:                      # @_transaction_2979
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1070760(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB653_7
# BB#1:
	leaq	1070896(%rbx), %r12
	cmpl	$0, 1070912(%rbx)
	je	.LBB653_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB653_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB653_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB653_7
.LBB653_5:
	cmpb	$1, 49739624(%rbx)
	jne	.LBB653_6
# BB#8:
	addq	$49739504, %rbx         # imm = 0x2F6F6F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB653_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB653_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_2994;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_2994
	.align	16, 0x90
_transaction_2994:                      # @_transaction_2994
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1072568(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB654_7
# BB#1:
	leaq	1072704(%rbx), %r12
	cmpl	$0, 1072720(%rbx)
	je	.LBB654_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB654_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB654_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB654_7
.LBB654_5:
	cmpb	$1, 49744512(%rbx)
	jne	.LBB654_6
# BB#8:
	addq	$49744392, %rbx         # imm = 0x2F70A08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB654_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB654_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3009;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3009
	.align	16, 0x90
_transaction_3009:                      # @_transaction_3009
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1074376(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB655_7
# BB#1:
	leaq	1074512(%rbx), %r12
	cmpl	$0, 1074528(%rbx)
	je	.LBB655_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB655_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB655_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB655_7
.LBB655_5:
	cmpb	$1, 49749400(%rbx)
	jne	.LBB655_6
# BB#8:
	addq	$49749280, %rbx         # imm = 0x2F71D20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB655_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB655_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3034;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3034
	.align	16, 0x90
_transaction_3034:                      # @_transaction_3034
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1077304(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB656_7
# BB#1:
	leaq	1077440(%rbx), %r12
	cmpl	$0, 1077456(%rbx)
	je	.LBB656_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB656_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB656_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB656_7
.LBB656_5:
	cmpb	$1, 49757392(%rbx)
	jne	.LBB656_6
# BB#8:
	addq	$49757272, %rbx         # imm = 0x2F73C58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB656_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB656_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3049;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3049
	.align	16, 0x90
_transaction_3049:                      # @_transaction_3049
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1079112(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB657_7
# BB#1:
	leaq	1079248(%rbx), %r12
	cmpl	$0, 1079264(%rbx)
	je	.LBB657_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB657_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB657_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB657_7
.LBB657_5:
	cmpb	$1, 49762280(%rbx)
	jne	.LBB657_6
# BB#8:
	addq	$49762160, %rbx         # imm = 0x2F74F70
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB657_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB657_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3064;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3064
	.align	16, 0x90
_transaction_3064:                      # @_transaction_3064
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1080920(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB658_7
# BB#1:
	leaq	1081056(%rbx), %r12
	cmpl	$0, 1081072(%rbx)
	je	.LBB658_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB658_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB658_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB658_7
.LBB658_5:
	cmpb	$1, 49767168(%rbx)
	jne	.LBB658_6
# BB#8:
	addq	$49767048, %rbx         # imm = 0x2F76288
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB658_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB658_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3079;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3079
	.align	16, 0x90
_transaction_3079:                      # @_transaction_3079
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1082728(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB659_7
# BB#1:
	leaq	1082864(%rbx), %r12
	cmpl	$0, 1082880(%rbx)
	je	.LBB659_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB659_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB659_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB659_7
.LBB659_5:
	cmpb	$1, 49772056(%rbx)
	jne	.LBB659_6
# BB#8:
	addq	$49771936, %rbx         # imm = 0x2F775A0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB659_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB659_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3094;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3094
	.align	16, 0x90
_transaction_3094:                      # @_transaction_3094
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1084536(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB660_7
# BB#1:
	leaq	1084672(%rbx), %r12
	cmpl	$0, 1084688(%rbx)
	je	.LBB660_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB660_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB660_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB660_7
.LBB660_5:
	cmpb	$1, 49776944(%rbx)
	jne	.LBB660_6
# BB#8:
	addq	$49776824, %rbx         # imm = 0x2F788B8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB660_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB660_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3119;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3119
	.align	16, 0x90
_transaction_3119:                      # @_transaction_3119
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1087464(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB661_7
# BB#1:
	leaq	1087600(%rbx), %r12
	cmpl	$0, 1087616(%rbx)
	je	.LBB661_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB661_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB661_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB661_7
.LBB661_5:
	cmpb	$1, 49784936(%rbx)
	jne	.LBB661_6
# BB#8:
	addq	$49784816, %rbx         # imm = 0x2F7A7F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB661_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB661_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3134;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3134
	.align	16, 0x90
_transaction_3134:                      # @_transaction_3134
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1089272(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB662_7
# BB#1:
	leaq	1089408(%rbx), %r12
	cmpl	$0, 1089424(%rbx)
	je	.LBB662_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB662_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB662_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB662_7
.LBB662_5:
	cmpb	$1, 49789824(%rbx)
	jne	.LBB662_6
# BB#8:
	addq	$49789704, %rbx         # imm = 0x2F7BB08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB662_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB662_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3149;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3149
	.align	16, 0x90
_transaction_3149:                      # @_transaction_3149
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1091080(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB663_7
# BB#1:
	leaq	1091216(%rbx), %r12
	cmpl	$0, 1091232(%rbx)
	je	.LBB663_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB663_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB663_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB663_7
.LBB663_5:
	cmpb	$1, 49794712(%rbx)
	jne	.LBB663_6
# BB#8:
	addq	$49794592, %rbx         # imm = 0x2F7CE20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB663_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB663_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3164;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3164
	.align	16, 0x90
_transaction_3164:                      # @_transaction_3164
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1092888(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB664_7
# BB#1:
	leaq	1093024(%rbx), %r12
	cmpl	$0, 1093040(%rbx)
	je	.LBB664_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB664_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB664_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB664_7
.LBB664_5:
	cmpb	$1, 49799600(%rbx)
	jne	.LBB664_6
# BB#8:
	addq	$49799480, %rbx         # imm = 0x2F7E138
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB664_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB664_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3189;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3189
	.align	16, 0x90
_transaction_3189:                      # @_transaction_3189
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1095816(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB665_7
# BB#1:
	leaq	1095952(%rbx), %r12
	cmpl	$0, 1095968(%rbx)
	je	.LBB665_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB665_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB665_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB665_7
.LBB665_5:
	cmpb	$1, 49807592(%rbx)
	jne	.LBB665_6
# BB#8:
	addq	$49807472, %rbx         # imm = 0x2F80070
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB665_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB665_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3204;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3204
	.align	16, 0x90
_transaction_3204:                      # @_transaction_3204
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1097624(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB666_7
# BB#1:
	leaq	1097760(%rbx), %r12
	cmpl	$0, 1097776(%rbx)
	je	.LBB666_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB666_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB666_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB666_7
.LBB666_5:
	cmpb	$1, 49812480(%rbx)
	jne	.LBB666_6
# BB#8:
	addq	$49812360, %rbx         # imm = 0x2F81388
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB666_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB666_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3219;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3219
	.align	16, 0x90
_transaction_3219:                      # @_transaction_3219
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1099432(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB667_7
# BB#1:
	leaq	1099568(%rbx), %r12
	cmpl	$0, 1099584(%rbx)
	je	.LBB667_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB667_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB667_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB667_7
.LBB667_5:
	cmpb	$1, 49817368(%rbx)
	jne	.LBB667_6
# BB#8:
	addq	$49817248, %rbx         # imm = 0x2F826A0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB667_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB667_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3234;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3234
	.align	16, 0x90
_transaction_3234:                      # @_transaction_3234
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1101240(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB668_7
# BB#1:
	leaq	1101376(%rbx), %r12
	cmpl	$0, 1101392(%rbx)
	je	.LBB668_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB668_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB668_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB668_7
.LBB668_5:
	cmpb	$1, 49822256(%rbx)
	jne	.LBB668_6
# BB#8:
	addq	$49822136, %rbx         # imm = 0x2F839B8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB668_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB668_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3259;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3259
	.align	16, 0x90
_transaction_3259:                      # @_transaction_3259
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1104168(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB669_7
# BB#1:
	leaq	1104304(%rbx), %r12
	cmpl	$0, 1104320(%rbx)
	je	.LBB669_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB669_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB669_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB669_7
.LBB669_5:
	cmpb	$1, 49830248(%rbx)
	jne	.LBB669_6
# BB#8:
	addq	$49830128, %rbx         # imm = 0x2F858F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB669_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB669_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3284;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3284
	.align	16, 0x90
_transaction_3284:                      # @_transaction_3284
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1107096(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB670_7
# BB#1:
	leaq	1107232(%rbx), %r12
	cmpl	$0, 1107248(%rbx)
	je	.LBB670_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB670_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB670_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB670_7
.LBB670_5:
	cmpb	$1, 49838240(%rbx)
	jne	.LBB670_6
# BB#8:
	addq	$49838120, %rbx         # imm = 0x2F87828
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB670_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB670_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3299;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3299
	.align	16, 0x90
_transaction_3299:                      # @_transaction_3299
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1108904(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB671_7
# BB#1:
	leaq	1109040(%rbx), %r12
	cmpl	$0, 1109056(%rbx)
	je	.LBB671_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB671_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB671_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB671_7
.LBB671_5:
	cmpb	$1, 49843128(%rbx)
	jne	.LBB671_6
# BB#8:
	addq	$49843008, %rbx         # imm = 0x2F88B40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB671_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB671_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3314;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3314
	.align	16, 0x90
_transaction_3314:                      # @_transaction_3314
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1110712(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB672_7
# BB#1:
	leaq	1110848(%rbx), %r12
	cmpl	$0, 1110864(%rbx)
	je	.LBB672_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB672_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB672_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB672_7
.LBB672_5:
	cmpb	$1, 49848016(%rbx)
	jne	.LBB672_6
# BB#8:
	addq	$49847896, %rbx         # imm = 0x2F89E58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB672_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB672_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3329;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3329
	.align	16, 0x90
_transaction_3329:                      # @_transaction_3329
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1112520(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB673_7
# BB#1:
	leaq	1112656(%rbx), %r12
	cmpl	$0, 1112672(%rbx)
	je	.LBB673_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB673_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB673_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB673_7
.LBB673_5:
	cmpb	$1, 49852904(%rbx)
	jne	.LBB673_6
# BB#8:
	addq	$49852784, %rbx         # imm = 0x2F8B170
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB673_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB673_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3354;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3354
	.align	16, 0x90
_transaction_3354:                      # @_transaction_3354
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1115448(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB674_7
# BB#1:
	leaq	1115584(%rbx), %r12
	cmpl	$0, 1115600(%rbx)
	je	.LBB674_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB674_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB674_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB674_7
.LBB674_5:
	cmpb	$1, 49860896(%rbx)
	jne	.LBB674_6
# BB#8:
	addq	$49860776, %rbx         # imm = 0x2F8D0A8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB674_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB674_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3369;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3369
	.align	16, 0x90
_transaction_3369:                      # @_transaction_3369
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1117256(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB675_7
# BB#1:
	leaq	1117392(%rbx), %r12
	cmpl	$0, 1117408(%rbx)
	je	.LBB675_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB675_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB675_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB675_7
.LBB675_5:
	cmpb	$1, 49865784(%rbx)
	jne	.LBB675_6
# BB#8:
	addq	$49865664, %rbx         # imm = 0x2F8E3C0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB675_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB675_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3384;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3384
	.align	16, 0x90
_transaction_3384:                      # @_transaction_3384
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1119064(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB676_7
# BB#1:
	leaq	1119200(%rbx), %r12
	cmpl	$0, 1119216(%rbx)
	je	.LBB676_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB676_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB676_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB676_7
.LBB676_5:
	cmpb	$1, 49870672(%rbx)
	jne	.LBB676_6
# BB#8:
	addq	$49870552, %rbx         # imm = 0x2F8F6D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB676_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB676_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3399;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3399
	.align	16, 0x90
_transaction_3399:                      # @_transaction_3399
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1120872(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB677_7
# BB#1:
	leaq	1121008(%rbx), %r12
	cmpl	$0, 1121024(%rbx)
	je	.LBB677_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB677_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB677_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB677_7
.LBB677_5:
	cmpb	$1, 49875560(%rbx)
	jne	.LBB677_6
# BB#8:
	addq	$49875440, %rbx         # imm = 0x2F909F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB677_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB677_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3424;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3424
	.align	16, 0x90
_transaction_3424:                      # @_transaction_3424
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1123800(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB678_7
# BB#1:
	leaq	1123936(%rbx), %r12
	cmpl	$0, 1123952(%rbx)
	je	.LBB678_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB678_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB678_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB678_7
.LBB678_5:
	cmpb	$1, 49883552(%rbx)
	jne	.LBB678_6
# BB#8:
	addq	$49883432, %rbx         # imm = 0x2F92928
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB678_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB678_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3439;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3439
	.align	16, 0x90
_transaction_3439:                      # @_transaction_3439
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1125608(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB679_7
# BB#1:
	leaq	1125744(%rbx), %r12
	cmpl	$0, 1125760(%rbx)
	je	.LBB679_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB679_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB679_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB679_7
.LBB679_5:
	cmpb	$1, 49888440(%rbx)
	jne	.LBB679_6
# BB#8:
	addq	$49888320, %rbx         # imm = 0x2F93C40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB679_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB679_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3454;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3454
	.align	16, 0x90
_transaction_3454:                      # @_transaction_3454
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1127416(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB680_7
# BB#1:
	leaq	1127552(%rbx), %r12
	cmpl	$0, 1127568(%rbx)
	je	.LBB680_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB680_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB680_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB680_7
.LBB680_5:
	cmpb	$1, 49893328(%rbx)
	jne	.LBB680_6
# BB#8:
	addq	$49893208, %rbx         # imm = 0x2F94F58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB680_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB680_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3469;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3469
	.align	16, 0x90
_transaction_3469:                      # @_transaction_3469
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1129224(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB681_7
# BB#1:
	leaq	1129360(%rbx), %r12
	cmpl	$0, 1129376(%rbx)
	je	.LBB681_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB681_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB681_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB681_7
.LBB681_5:
	cmpb	$1, 49898216(%rbx)
	jne	.LBB681_6
# BB#8:
	addq	$49898096, %rbx         # imm = 0x2F96270
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB681_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB681_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3484;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3484
	.align	16, 0x90
_transaction_3484:                      # @_transaction_3484
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1131032(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB682_7
# BB#1:
	leaq	1131168(%rbx), %r12
	cmpl	$0, 1131184(%rbx)
	je	.LBB682_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB682_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB682_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB682_7
.LBB682_5:
	cmpb	$1, 49903104(%rbx)
	jne	.LBB682_6
# BB#8:
	addq	$49902984, %rbx         # imm = 0x2F97588
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB682_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB682_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3509;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3509
	.align	16, 0x90
_transaction_3509:                      # @_transaction_3509
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1133960(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB683_7
# BB#1:
	leaq	1134096(%rbx), %r12
	cmpl	$0, 1134112(%rbx)
	je	.LBB683_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB683_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB683_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB683_7
.LBB683_5:
	cmpb	$1, 49911096(%rbx)
	jne	.LBB683_6
# BB#8:
	addq	$49910976, %rbx         # imm = 0x2F994C0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB683_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB683_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3524;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3524
	.align	16, 0x90
_transaction_3524:                      # @_transaction_3524
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1135768(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB684_7
# BB#1:
	leaq	1135904(%rbx), %r12
	cmpl	$0, 1135920(%rbx)
	je	.LBB684_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB684_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB684_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB684_7
.LBB684_5:
	cmpb	$1, 49915984(%rbx)
	jne	.LBB684_6
# BB#8:
	addq	$49915864, %rbx         # imm = 0x2F9A7D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB684_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB684_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3539;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3539
	.align	16, 0x90
_transaction_3539:                      # @_transaction_3539
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1137576(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB685_7
# BB#1:
	leaq	1137712(%rbx), %r12
	cmpl	$0, 1137728(%rbx)
	je	.LBB685_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB685_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB685_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB685_7
.LBB685_5:
	cmpb	$1, 49920872(%rbx)
	jne	.LBB685_6
# BB#8:
	addq	$49920752, %rbx         # imm = 0x2F9BAF0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB685_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB685_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3554;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3554
	.align	16, 0x90
_transaction_3554:                      # @_transaction_3554
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1139384(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB686_7
# BB#1:
	leaq	1139520(%rbx), %r12
	cmpl	$0, 1139536(%rbx)
	je	.LBB686_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB686_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB686_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB686_7
.LBB686_5:
	cmpb	$1, 49925760(%rbx)
	jne	.LBB686_6
# BB#8:
	addq	$49925640, %rbx         # imm = 0x2F9CE08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB686_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB686_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3579;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3579
	.align	16, 0x90
_transaction_3579:                      # @_transaction_3579
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1142312(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB687_7
# BB#1:
	leaq	1142448(%rbx), %r12
	cmpl	$0, 1142464(%rbx)
	je	.LBB687_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB687_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB687_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB687_7
.LBB687_5:
	cmpb	$1, 49933752(%rbx)
	jne	.LBB687_6
# BB#8:
	addq	$49933632, %rbx         # imm = 0x2F9ED40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB687_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB687_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3594;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3594
	.align	16, 0x90
_transaction_3594:                      # @_transaction_3594
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1144120(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB688_7
# BB#1:
	leaq	1144256(%rbx), %r12
	cmpl	$0, 1144272(%rbx)
	je	.LBB688_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB688_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB688_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB688_7
.LBB688_5:
	cmpb	$1, 49938640(%rbx)
	jne	.LBB688_6
# BB#8:
	addq	$49938520, %rbx         # imm = 0x2FA0058
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB688_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB688_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3609;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3609
	.align	16, 0x90
_transaction_3609:                      # @_transaction_3609
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1145928(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB689_7
# BB#1:
	leaq	1146064(%rbx), %r12
	cmpl	$0, 1146080(%rbx)
	je	.LBB689_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB689_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB689_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB689_7
.LBB689_5:
	cmpb	$1, 49943528(%rbx)
	jne	.LBB689_6
# BB#8:
	addq	$49943408, %rbx         # imm = 0x2FA1370
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB689_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB689_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3624;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3624
	.align	16, 0x90
_transaction_3624:                      # @_transaction_3624
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1147736(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB690_7
# BB#1:
	leaq	1147872(%rbx), %r12
	cmpl	$0, 1147888(%rbx)
	je	.LBB690_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB690_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB690_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB690_7
.LBB690_5:
	cmpb	$1, 49948416(%rbx)
	jne	.LBB690_6
# BB#8:
	addq	$49948296, %rbx         # imm = 0x2FA2688
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB690_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB690_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3649;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3649
	.align	16, 0x90
_transaction_3649:                      # @_transaction_3649
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1150664(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB691_7
# BB#1:
	leaq	1150800(%rbx), %r12
	cmpl	$0, 1150816(%rbx)
	je	.LBB691_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB691_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB691_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB691_7
.LBB691_5:
	cmpb	$1, 49956408(%rbx)
	jne	.LBB691_6
# BB#8:
	addq	$49956288, %rbx         # imm = 0x2FA45C0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB691_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB691_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3664;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3664
	.align	16, 0x90
_transaction_3664:                      # @_transaction_3664
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1152472(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB692_7
# BB#1:
	leaq	1152608(%rbx), %r12
	cmpl	$0, 1152624(%rbx)
	je	.LBB692_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB692_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB692_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB692_7
.LBB692_5:
	cmpb	$1, 49961296(%rbx)
	jne	.LBB692_6
# BB#8:
	addq	$49961176, %rbx         # imm = 0x2FA58D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB692_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB692_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3679;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3679
	.align	16, 0x90
_transaction_3679:                      # @_transaction_3679
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1154280(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB693_7
# BB#1:
	leaq	1154416(%rbx), %r12
	cmpl	$0, 1154432(%rbx)
	je	.LBB693_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB693_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB693_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB693_7
.LBB693_5:
	cmpb	$1, 49966184(%rbx)
	jne	.LBB693_6
# BB#8:
	addq	$49966064, %rbx         # imm = 0x2FA6BF0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB693_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB693_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3694;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3694
	.align	16, 0x90
_transaction_3694:                      # @_transaction_3694
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1156088(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB694_7
# BB#1:
	leaq	1156224(%rbx), %r12
	cmpl	$0, 1156240(%rbx)
	je	.LBB694_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB694_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB694_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB694_7
.LBB694_5:
	cmpb	$1, 49971072(%rbx)
	jne	.LBB694_6
# BB#8:
	addq	$49970952, %rbx         # imm = 0x2FA7F08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB694_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB694_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3709;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3709
	.align	16, 0x90
_transaction_3709:                      # @_transaction_3709
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1157896(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB695_7
# BB#1:
	leaq	1158032(%rbx), %r12
	cmpl	$0, 1158048(%rbx)
	je	.LBB695_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB695_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB695_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB695_7
.LBB695_5:
	cmpb	$1, 49975960(%rbx)
	jne	.LBB695_6
# BB#8:
	addq	$49975840, %rbx         # imm = 0x2FA9220
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB695_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB695_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3734;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3734
	.align	16, 0x90
_transaction_3734:                      # @_transaction_3734
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1160824(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB696_7
# BB#1:
	leaq	1160960(%rbx), %r12
	cmpl	$0, 1160976(%rbx)
	je	.LBB696_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB696_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB696_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB696_7
.LBB696_5:
	cmpb	$1, 49983952(%rbx)
	jne	.LBB696_6
# BB#8:
	addq	$49983832, %rbx         # imm = 0x2FAB158
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB696_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB696_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3749;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3749
	.align	16, 0x90
_transaction_3749:                      # @_transaction_3749
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1162632(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB697_7
# BB#1:
	leaq	1162768(%rbx), %r12
	cmpl	$0, 1162784(%rbx)
	je	.LBB697_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB697_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB697_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB697_7
.LBB697_5:
	cmpb	$1, 49988840(%rbx)
	jne	.LBB697_6
# BB#8:
	addq	$49988720, %rbx         # imm = 0x2FAC470
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB697_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB697_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3764;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3764
	.align	16, 0x90
_transaction_3764:                      # @_transaction_3764
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1164440(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB698_7
# BB#1:
	leaq	1164576(%rbx), %r12
	cmpl	$0, 1164592(%rbx)
	je	.LBB698_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB698_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB698_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB698_7
.LBB698_5:
	cmpb	$1, 49993728(%rbx)
	jne	.LBB698_6
# BB#8:
	addq	$49993608, %rbx         # imm = 0x2FAD788
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB698_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB698_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3779;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3779
	.align	16, 0x90
_transaction_3779:                      # @_transaction_3779
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1166248(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB699_7
# BB#1:
	leaq	1166384(%rbx), %r12
	cmpl	$0, 1166400(%rbx)
	je	.LBB699_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB699_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB699_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB699_7
.LBB699_5:
	cmpb	$1, 49998616(%rbx)
	jne	.LBB699_6
# BB#8:
	addq	$49998496, %rbx         # imm = 0x2FAEAA0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB699_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB699_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3804;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3804
	.align	16, 0x90
_transaction_3804:                      # @_transaction_3804
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1169176(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB700_7
# BB#1:
	leaq	1169312(%rbx), %r12
	cmpl	$0, 1169328(%rbx)
	je	.LBB700_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB700_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB700_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB700_7
.LBB700_5:
	cmpb	$1, 50006608(%rbx)
	jne	.LBB700_6
# BB#8:
	addq	$50006488, %rbx         # imm = 0x2FB09D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB700_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB700_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3819;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3819
	.align	16, 0x90
_transaction_3819:                      # @_transaction_3819
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1170984(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB701_7
# BB#1:
	leaq	1171120(%rbx), %r12
	cmpl	$0, 1171136(%rbx)
	je	.LBB701_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB701_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB701_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB701_7
.LBB701_5:
	cmpb	$1, 50011496(%rbx)
	jne	.LBB701_6
# BB#8:
	addq	$50011376, %rbx         # imm = 0x2FB1CF0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB701_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB701_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3843;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3843
	.align	16, 0x90
_transaction_3843:                      # @_transaction_3843
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1173912(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB702_7
# BB#1:
	leaq	1174048(%rbx), %r12
	cmpl	$0, 1174064(%rbx)
	je	.LBB702_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB702_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB702_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB702_7
.LBB702_5:
	cmpb	$1, 50019488(%rbx)
	jne	.LBB702_6
# BB#8:
	addq	$50019368, %rbx         # imm = 0x2FB3C28
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB702_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB702_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3858;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3858
	.align	16, 0x90
_transaction_3858:                      # @_transaction_3858
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1175720(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB703_7
# BB#1:
	leaq	1175856(%rbx), %r12
	cmpl	$0, 1175872(%rbx)
	je	.LBB703_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB703_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB703_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB703_7
.LBB703_5:
	cmpb	$1, 50024376(%rbx)
	jne	.LBB703_6
# BB#8:
	addq	$50024256, %rbx         # imm = 0x2FB4F40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB703_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB703_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3883;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3883
	.align	16, 0x90
_transaction_3883:                      # @_transaction_3883
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1178648(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB704_7
# BB#1:
	leaq	1178784(%rbx), %r12
	cmpl	$0, 1178800(%rbx)
	je	.LBB704_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB704_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB704_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB704_7
.LBB704_5:
	cmpb	$1, 50032368(%rbx)
	jne	.LBB704_6
# BB#8:
	addq	$50032248, %rbx         # imm = 0x2FB6E78
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB704_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB704_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3898;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3898
	.align	16, 0x90
_transaction_3898:                      # @_transaction_3898
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1180456(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB705_7
# BB#1:
	leaq	1180592(%rbx), %r12
	cmpl	$0, 1180608(%rbx)
	je	.LBB705_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB705_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB705_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB705_7
.LBB705_5:
	cmpb	$1, 50037256(%rbx)
	jne	.LBB705_6
# BB#8:
	addq	$50037136, %rbx         # imm = 0x2FB8190
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB705_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB705_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3913;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3913
	.align	16, 0x90
_transaction_3913:                      # @_transaction_3913
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1182264(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB706_7
# BB#1:
	leaq	1182400(%rbx), %r12
	cmpl	$0, 1182416(%rbx)
	je	.LBB706_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB706_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB706_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB706_7
.LBB706_5:
	cmpb	$1, 50042144(%rbx)
	jne	.LBB706_6
# BB#8:
	addq	$50042024, %rbx         # imm = 0x2FB94A8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB706_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB706_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3928;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3928
	.align	16, 0x90
_transaction_3928:                      # @_transaction_3928
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1184072(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB707_7
# BB#1:
	leaq	1184208(%rbx), %r12
	cmpl	$0, 1184224(%rbx)
	je	.LBB707_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB707_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB707_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB707_7
.LBB707_5:
	cmpb	$1, 50047032(%rbx)
	jne	.LBB707_6
# BB#8:
	addq	$50046912, %rbx         # imm = 0x2FBA7C0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB707_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB707_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3943;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3943
	.align	16, 0x90
_transaction_3943:                      # @_transaction_3943
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1185880(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB708_7
# BB#1:
	leaq	1186016(%rbx), %r12
	cmpl	$0, 1186032(%rbx)
	je	.LBB708_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB708_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB708_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB708_7
.LBB708_5:
	cmpb	$1, 50051920(%rbx)
	jne	.LBB708_6
# BB#8:
	addq	$50051800, %rbx         # imm = 0x2FBBAD8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB708_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB708_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3958;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3958
	.align	16, 0x90
_transaction_3958:                      # @_transaction_3958
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1187688(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB709_7
# BB#1:
	leaq	1187824(%rbx), %r12
	cmpl	$0, 1187840(%rbx)
	je	.LBB709_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB709_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB709_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB709_7
.LBB709_5:
	cmpb	$1, 50056808(%rbx)
	jne	.LBB709_6
# BB#8:
	addq	$50056688, %rbx         # imm = 0x2FBCDF0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB709_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB709_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3973;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3973
	.align	16, 0x90
_transaction_3973:                      # @_transaction_3973
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1189496(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB710_7
# BB#1:
	leaq	1189632(%rbx), %r12
	cmpl	$0, 1189648(%rbx)
	je	.LBB710_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB710_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB710_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB710_7
.LBB710_5:
	cmpb	$1, 50061696(%rbx)
	jne	.LBB710_6
# BB#8:
	addq	$50061576, %rbx         # imm = 0x2FBE108
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB710_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB710_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_3988;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_3988
	.align	16, 0x90
_transaction_3988:                      # @_transaction_3988
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1191304(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB711_7
# BB#1:
	leaq	1191440(%rbx), %r12
	cmpl	$0, 1191456(%rbx)
	je	.LBB711_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB711_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB711_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB711_7
.LBB711_5:
	cmpb	$1, 50066584(%rbx)
	jne	.LBB711_6
# BB#8:
	addq	$50066464, %rbx         # imm = 0x2FBF420
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB711_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB711_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4003;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4003
	.align	16, 0x90
_transaction_4003:                      # @_transaction_4003
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1193112(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB712_7
# BB#1:
	leaq	1193248(%rbx), %r12
	cmpl	$0, 1193264(%rbx)
	je	.LBB712_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB712_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB712_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB712_7
.LBB712_5:
	cmpb	$1, 50071472(%rbx)
	jne	.LBB712_6
# BB#8:
	addq	$50071352, %rbx         # imm = 0x2FC0738
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB712_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB712_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4018;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4018
	.align	16, 0x90
_transaction_4018:                      # @_transaction_4018
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1194920(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB713_7
# BB#1:
	leaq	1195056(%rbx), %r12
	cmpl	$0, 1195072(%rbx)
	je	.LBB713_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB713_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB713_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB713_7
.LBB713_5:
	cmpb	$1, 50076360(%rbx)
	jne	.LBB713_6
# BB#8:
	addq	$50076240, %rbx         # imm = 0x2FC1A50
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB713_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB713_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4033;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4033
	.align	16, 0x90
_transaction_4033:                      # @_transaction_4033
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1196728(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB714_7
# BB#1:
	leaq	1196864(%rbx), %r12
	cmpl	$0, 1196880(%rbx)
	je	.LBB714_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB714_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB714_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB714_7
.LBB714_5:
	cmpb	$1, 50081248(%rbx)
	jne	.LBB714_6
# BB#8:
	addq	$50081128, %rbx         # imm = 0x2FC2D68
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB714_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB714_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4048;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4048
	.align	16, 0x90
_transaction_4048:                      # @_transaction_4048
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1198536(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB715_7
# BB#1:
	leaq	1198672(%rbx), %r12
	cmpl	$0, 1198688(%rbx)
	je	.LBB715_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB715_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB715_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB715_7
.LBB715_5:
	cmpb	$1, 50086136(%rbx)
	jne	.LBB715_6
# BB#8:
	addq	$50086016, %rbx         # imm = 0x2FC4080
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB715_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB715_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4063;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4063
	.align	16, 0x90
_transaction_4063:                      # @_transaction_4063
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1200344(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB716_7
# BB#1:
	leaq	1200480(%rbx), %r12
	cmpl	$0, 1200496(%rbx)
	je	.LBB716_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB716_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB716_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB716_7
.LBB716_5:
	cmpb	$1, 50091024(%rbx)
	jne	.LBB716_6
# BB#8:
	addq	$50090904, %rbx         # imm = 0x2FC5398
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB716_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB716_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4078;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4078
	.align	16, 0x90
_transaction_4078:                      # @_transaction_4078
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1202152(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB717_7
# BB#1:
	leaq	1202288(%rbx), %r12
	cmpl	$0, 1202304(%rbx)
	je	.LBB717_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB717_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB717_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB717_7
.LBB717_5:
	cmpb	$1, 50095912(%rbx)
	jne	.LBB717_6
# BB#8:
	addq	$50095792, %rbx         # imm = 0x2FC66B0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB717_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB717_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4093;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4093
	.align	16, 0x90
_transaction_4093:                      # @_transaction_4093
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1203960(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB718_7
# BB#1:
	leaq	1204096(%rbx), %r12
	cmpl	$0, 1204112(%rbx)
	je	.LBB718_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB718_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB718_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB718_7
.LBB718_5:
	cmpb	$1, 50100800(%rbx)
	jne	.LBB718_6
# BB#8:
	addq	$50100680, %rbx         # imm = 0x2FC79C8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB718_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB718_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4108;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4108
	.align	16, 0x90
_transaction_4108:                      # @_transaction_4108
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1205768(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB719_7
# BB#1:
	leaq	1205904(%rbx), %r12
	cmpl	$0, 1205920(%rbx)
	je	.LBB719_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB719_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB719_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB719_7
.LBB719_5:
	cmpb	$1, 50105688(%rbx)
	jne	.LBB719_6
# BB#8:
	addq	$50105568, %rbx         # imm = 0x2FC8CE0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB719_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB719_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4123;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4123
	.align	16, 0x90
_transaction_4123:                      # @_transaction_4123
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1207576(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB720_7
# BB#1:
	leaq	1207712(%rbx), %r12
	cmpl	$0, 1207728(%rbx)
	je	.LBB720_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB720_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB720_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB720_7
.LBB720_5:
	cmpb	$1, 50110576(%rbx)
	jne	.LBB720_6
# BB#8:
	addq	$50110456, %rbx         # imm = 0x2FC9FF8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB720_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB720_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4138;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4138
	.align	16, 0x90
_transaction_4138:                      # @_transaction_4138
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1209384(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB721_7
# BB#1:
	leaq	1209520(%rbx), %r12
	cmpl	$0, 1209536(%rbx)
	je	.LBB721_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB721_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB721_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB721_7
.LBB721_5:
	cmpb	$1, 50115464(%rbx)
	jne	.LBB721_6
# BB#8:
	addq	$50115344, %rbx         # imm = 0x2FCB310
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB721_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB721_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4153;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4153
	.align	16, 0x90
_transaction_4153:                      # @_transaction_4153
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1211192(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB722_7
# BB#1:
	leaq	1211328(%rbx), %r12
	cmpl	$0, 1211344(%rbx)
	je	.LBB722_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB722_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB722_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB722_7
.LBB722_5:
	cmpb	$1, 50120352(%rbx)
	jne	.LBB722_6
# BB#8:
	addq	$50120232, %rbx         # imm = 0x2FCC628
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB722_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB722_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4168;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4168
	.align	16, 0x90
_transaction_4168:                      # @_transaction_4168
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1213000(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB723_7
# BB#1:
	leaq	1213136(%rbx), %r12
	cmpl	$0, 1213152(%rbx)
	je	.LBB723_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB723_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB723_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB723_7
.LBB723_5:
	cmpb	$1, 50125240(%rbx)
	jne	.LBB723_6
# BB#8:
	addq	$50125120, %rbx         # imm = 0x2FCD940
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB723_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB723_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4183;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4183
	.align	16, 0x90
_transaction_4183:                      # @_transaction_4183
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1214808(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB724_7
# BB#1:
	leaq	1214944(%rbx), %r12
	cmpl	$0, 1214960(%rbx)
	je	.LBB724_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB724_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB724_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB724_7
.LBB724_5:
	cmpb	$1, 50130128(%rbx)
	jne	.LBB724_6
# BB#8:
	addq	$50130008, %rbx         # imm = 0x2FCEC58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB724_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB724_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4198;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4198
	.align	16, 0x90
_transaction_4198:                      # @_transaction_4198
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1216616(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB725_7
# BB#1:
	leaq	1216752(%rbx), %r12
	cmpl	$0, 1216768(%rbx)
	je	.LBB725_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB725_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB725_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB725_7
.LBB725_5:
	cmpb	$1, 50135016(%rbx)
	jne	.LBB725_6
# BB#8:
	addq	$50134896, %rbx         # imm = 0x2FCFF70
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB725_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB725_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4213;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4213
	.align	16, 0x90
_transaction_4213:                      # @_transaction_4213
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1218424(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB726_7
# BB#1:
	leaq	1218560(%rbx), %r12
	cmpl	$0, 1218576(%rbx)
	je	.LBB726_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB726_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB726_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB726_7
.LBB726_5:
	cmpb	$1, 50139904(%rbx)
	jne	.LBB726_6
# BB#8:
	addq	$50139784, %rbx         # imm = 0x2FD1288
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB726_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB726_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4228;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4228
	.align	16, 0x90
_transaction_4228:                      # @_transaction_4228
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1220232(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB727_7
# BB#1:
	leaq	1220368(%rbx), %r12
	cmpl	$0, 1220384(%rbx)
	je	.LBB727_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB727_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB727_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB727_7
.LBB727_5:
	cmpb	$1, 50144792(%rbx)
	jne	.LBB727_6
# BB#8:
	addq	$50144672, %rbx         # imm = 0x2FD25A0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB727_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB727_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4243;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4243
	.align	16, 0x90
_transaction_4243:                      # @_transaction_4243
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1222040(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB728_7
# BB#1:
	leaq	1222176(%rbx), %r12
	cmpl	$0, 1222192(%rbx)
	je	.LBB728_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB728_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB728_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB728_7
.LBB728_5:
	cmpb	$1, 50149680(%rbx)
	jne	.LBB728_6
# BB#8:
	addq	$50149560, %rbx         # imm = 0x2FD38B8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB728_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB728_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4258;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4258
	.align	16, 0x90
_transaction_4258:                      # @_transaction_4258
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1223848(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB729_7
# BB#1:
	leaq	1223984(%rbx), %r12
	cmpl	$0, 1224000(%rbx)
	je	.LBB729_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB729_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB729_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB729_7
.LBB729_5:
	cmpb	$1, 50154568(%rbx)
	jne	.LBB729_6
# BB#8:
	addq	$50154448, %rbx         # imm = 0x2FD4BD0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB729_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB729_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4273;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4273
	.align	16, 0x90
_transaction_4273:                      # @_transaction_4273
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1225656(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB730_7
# BB#1:
	leaq	1225792(%rbx), %r12
	cmpl	$0, 1225808(%rbx)
	je	.LBB730_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB730_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB730_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB730_7
.LBB730_5:
	cmpb	$1, 50159456(%rbx)
	jne	.LBB730_6
# BB#8:
	addq	$50159336, %rbx         # imm = 0x2FD5EE8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB730_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB730_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4288;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4288
	.align	16, 0x90
_transaction_4288:                      # @_transaction_4288
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1227464(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB731_7
# BB#1:
	leaq	1227600(%rbx), %r12
	cmpl	$0, 1227616(%rbx)
	je	.LBB731_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB731_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB731_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB731_7
.LBB731_5:
	cmpb	$1, 50164344(%rbx)
	jne	.LBB731_6
# BB#8:
	addq	$50164224, %rbx         # imm = 0x2FD7200
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB731_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB731_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4303;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4303
	.align	16, 0x90
_transaction_4303:                      # @_transaction_4303
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1229272(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB732_7
# BB#1:
	leaq	1229408(%rbx), %r12
	cmpl	$0, 1229424(%rbx)
	je	.LBB732_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB732_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB732_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB732_7
.LBB732_5:
	cmpb	$1, 50169232(%rbx)
	jne	.LBB732_6
# BB#8:
	addq	$50169112, %rbx         # imm = 0x2FD8518
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB732_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB732_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4318;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4318
	.align	16, 0x90
_transaction_4318:                      # @_transaction_4318
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1231080(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB733_7
# BB#1:
	leaq	1231216(%rbx), %r12
	cmpl	$0, 1231232(%rbx)
	je	.LBB733_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB733_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB733_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB733_7
.LBB733_5:
	cmpb	$1, 50174120(%rbx)
	jne	.LBB733_6
# BB#8:
	addq	$50174000, %rbx         # imm = 0x2FD9830
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB733_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB733_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4333;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4333
	.align	16, 0x90
_transaction_4333:                      # @_transaction_4333
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1232888(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB734_7
# BB#1:
	leaq	1233024(%rbx), %r12
	cmpl	$0, 1233040(%rbx)
	je	.LBB734_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB734_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB734_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB734_7
.LBB734_5:
	cmpb	$1, 50179008(%rbx)
	jne	.LBB734_6
# BB#8:
	addq	$50178888, %rbx         # imm = 0x2FDAB48
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB734_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB734_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4348;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4348
	.align	16, 0x90
_transaction_4348:                      # @_transaction_4348
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1234696(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB735_7
# BB#1:
	leaq	1234832(%rbx), %r12
	cmpl	$0, 1234848(%rbx)
	je	.LBB735_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB735_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB735_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB735_7
.LBB735_5:
	cmpb	$1, 50183896(%rbx)
	jne	.LBB735_6
# BB#8:
	addq	$50183776, %rbx         # imm = 0x2FDBE60
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB735_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB735_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4363;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4363
	.align	16, 0x90
_transaction_4363:                      # @_transaction_4363
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1236504(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB736_7
# BB#1:
	leaq	1236640(%rbx), %r12
	cmpl	$0, 1236656(%rbx)
	je	.LBB736_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB736_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB736_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB736_7
.LBB736_5:
	cmpb	$1, 50188784(%rbx)
	jne	.LBB736_6
# BB#8:
	addq	$50188664, %rbx         # imm = 0x2FDD178
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB736_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB736_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4378;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4378
	.align	16, 0x90
_transaction_4378:                      # @_transaction_4378
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1238312(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB737_7
# BB#1:
	leaq	1238448(%rbx), %r12
	cmpl	$0, 1238464(%rbx)
	je	.LBB737_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB737_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB737_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB737_7
.LBB737_5:
	cmpb	$1, 50193672(%rbx)
	jne	.LBB737_6
# BB#8:
	addq	$50193552, %rbx         # imm = 0x2FDE490
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB737_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB737_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4393;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4393
	.align	16, 0x90
_transaction_4393:                      # @_transaction_4393
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1240120(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB738_7
# BB#1:
	leaq	1240256(%rbx), %r12
	cmpl	$0, 1240272(%rbx)
	je	.LBB738_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB738_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB738_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB738_7
.LBB738_5:
	cmpb	$1, 50198560(%rbx)
	jne	.LBB738_6
# BB#8:
	addq	$50198440, %rbx         # imm = 0x2FDF7A8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB738_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB738_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4408;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4408
	.align	16, 0x90
_transaction_4408:                      # @_transaction_4408
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1241928(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB739_7
# BB#1:
	leaq	1242064(%rbx), %r12
	cmpl	$0, 1242080(%rbx)
	je	.LBB739_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB739_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB739_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB739_7
.LBB739_5:
	cmpb	$1, 50203448(%rbx)
	jne	.LBB739_6
# BB#8:
	addq	$50203328, %rbx         # imm = 0x2FE0AC0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB739_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB739_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4423;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4423
	.align	16, 0x90
_transaction_4423:                      # @_transaction_4423
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1243736(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB740_7
# BB#1:
	leaq	1243872(%rbx), %r12
	cmpl	$0, 1243888(%rbx)
	je	.LBB740_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB740_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB740_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB740_7
.LBB740_5:
	cmpb	$1, 50208336(%rbx)
	jne	.LBB740_6
# BB#8:
	addq	$50208216, %rbx         # imm = 0x2FE1DD8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB740_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB740_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4438;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4438
	.align	16, 0x90
_transaction_4438:                      # @_transaction_4438
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1245544(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB741_7
# BB#1:
	leaq	1245680(%rbx), %r12
	cmpl	$0, 1245696(%rbx)
	je	.LBB741_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB741_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB741_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB741_7
.LBB741_5:
	cmpb	$1, 50213224(%rbx)
	jne	.LBB741_6
# BB#8:
	addq	$50213104, %rbx         # imm = 0x2FE30F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB741_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB741_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4453;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4453
	.align	16, 0x90
_transaction_4453:                      # @_transaction_4453
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1247352(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB742_7
# BB#1:
	leaq	1247488(%rbx), %r12
	cmpl	$0, 1247504(%rbx)
	je	.LBB742_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB742_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB742_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB742_7
.LBB742_5:
	cmpb	$1, 50218112(%rbx)
	jne	.LBB742_6
# BB#8:
	addq	$50217992, %rbx         # imm = 0x2FE4408
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB742_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB742_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4468;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4468
	.align	16, 0x90
_transaction_4468:                      # @_transaction_4468
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1249160(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB743_7
# BB#1:
	leaq	1249296(%rbx), %r12
	cmpl	$0, 1249312(%rbx)
	je	.LBB743_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB743_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB743_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB743_7
.LBB743_5:
	cmpb	$1, 50223000(%rbx)
	jne	.LBB743_6
# BB#8:
	addq	$50222880, %rbx         # imm = 0x2FE5720
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB743_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB743_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4483;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4483
	.align	16, 0x90
_transaction_4483:                      # @_transaction_4483
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1250968(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB744_7
# BB#1:
	leaq	1251104(%rbx), %r12
	cmpl	$0, 1251120(%rbx)
	je	.LBB744_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB744_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB744_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB744_7
.LBB744_5:
	cmpb	$1, 50227888(%rbx)
	jne	.LBB744_6
# BB#8:
	addq	$50227768, %rbx         # imm = 0x2FE6A38
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB744_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB744_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4498;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4498
	.align	16, 0x90
_transaction_4498:                      # @_transaction_4498
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1252776(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB745_7
# BB#1:
	leaq	1252912(%rbx), %r12
	cmpl	$0, 1252928(%rbx)
	je	.LBB745_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB745_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB745_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB745_7
.LBB745_5:
	cmpb	$1, 50232776(%rbx)
	jne	.LBB745_6
# BB#8:
	addq	$50232656, %rbx         # imm = 0x2FE7D50
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB745_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB745_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4513;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4513
	.align	16, 0x90
_transaction_4513:                      # @_transaction_4513
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1254584(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB746_7
# BB#1:
	leaq	1254720(%rbx), %r12
	cmpl	$0, 1254736(%rbx)
	je	.LBB746_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB746_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB746_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB746_7
.LBB746_5:
	cmpb	$1, 50237664(%rbx)
	jne	.LBB746_6
# BB#8:
	addq	$50237544, %rbx         # imm = 0x2FE9068
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB746_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB746_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4528;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4528
	.align	16, 0x90
_transaction_4528:                      # @_transaction_4528
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1256392(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB747_7
# BB#1:
	leaq	1256528(%rbx), %r12
	cmpl	$0, 1256544(%rbx)
	je	.LBB747_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB747_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB747_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB747_7
.LBB747_5:
	cmpb	$1, 50242552(%rbx)
	jne	.LBB747_6
# BB#8:
	addq	$50242432, %rbx         # imm = 0x2FEA380
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB747_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB747_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4543;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4543
	.align	16, 0x90
_transaction_4543:                      # @_transaction_4543
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1258200(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB748_7
# BB#1:
	leaq	1258336(%rbx), %r12
	cmpl	$0, 1258352(%rbx)
	je	.LBB748_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB748_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB748_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB748_7
.LBB748_5:
	cmpb	$1, 50247440(%rbx)
	jne	.LBB748_6
# BB#8:
	addq	$50247320, %rbx         # imm = 0x2FEB698
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB748_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB748_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4558;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4558
	.align	16, 0x90
_transaction_4558:                      # @_transaction_4558
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1260008(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB749_7
# BB#1:
	leaq	1260144(%rbx), %r12
	cmpl	$0, 1260160(%rbx)
	je	.LBB749_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB749_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB749_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB749_7
.LBB749_5:
	cmpb	$1, 50252328(%rbx)
	jne	.LBB749_6
# BB#8:
	addq	$50252208, %rbx         # imm = 0x2FEC9B0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB749_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB749_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4573;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4573
	.align	16, 0x90
_transaction_4573:                      # @_transaction_4573
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1261816(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB750_7
# BB#1:
	leaq	1261952(%rbx), %r12
	cmpl	$0, 1261968(%rbx)
	je	.LBB750_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB750_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB750_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB750_7
.LBB750_5:
	cmpb	$1, 50257216(%rbx)
	jne	.LBB750_6
# BB#8:
	addq	$50257096, %rbx         # imm = 0x2FEDCC8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB750_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB750_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4588;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4588
	.align	16, 0x90
_transaction_4588:                      # @_transaction_4588
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1263624(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB751_7
# BB#1:
	leaq	1263760(%rbx), %r12
	cmpl	$0, 1263776(%rbx)
	je	.LBB751_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB751_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB751_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB751_7
.LBB751_5:
	cmpb	$1, 50262104(%rbx)
	jne	.LBB751_6
# BB#8:
	addq	$50261984, %rbx         # imm = 0x2FEEFE0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB751_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB751_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4603;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4603
	.align	16, 0x90
_transaction_4603:                      # @_transaction_4603
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1265432(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB752_7
# BB#1:
	leaq	1265568(%rbx), %r12
	cmpl	$0, 1265584(%rbx)
	je	.LBB752_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB752_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB752_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB752_7
.LBB752_5:
	cmpb	$1, 50266992(%rbx)
	jne	.LBB752_6
# BB#8:
	addq	$50266872, %rbx         # imm = 0x2FF02F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB752_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB752_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4618;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4618
	.align	16, 0x90
_transaction_4618:                      # @_transaction_4618
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1267240(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB753_7
# BB#1:
	leaq	1267376(%rbx), %r12
	cmpl	$0, 1267392(%rbx)
	je	.LBB753_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB753_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB753_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB753_7
.LBB753_5:
	cmpb	$1, 50271880(%rbx)
	jne	.LBB753_6
# BB#8:
	addq	$50271760, %rbx         # imm = 0x2FF1610
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB753_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB753_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4633;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4633
	.align	16, 0x90
_transaction_4633:                      # @_transaction_4633
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1269048(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB754_7
# BB#1:
	leaq	1269184(%rbx), %r12
	cmpl	$0, 1269200(%rbx)
	je	.LBB754_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB754_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB754_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB754_7
.LBB754_5:
	cmpb	$1, 50276768(%rbx)
	jne	.LBB754_6
# BB#8:
	addq	$50276648, %rbx         # imm = 0x2FF2928
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB754_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB754_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4648;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4648
	.align	16, 0x90
_transaction_4648:                      # @_transaction_4648
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1270856(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB755_7
# BB#1:
	leaq	1270992(%rbx), %r12
	cmpl	$0, 1271008(%rbx)
	je	.LBB755_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB755_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB755_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB755_7
.LBB755_5:
	cmpb	$1, 50281656(%rbx)
	jne	.LBB755_6
# BB#8:
	addq	$50281536, %rbx         # imm = 0x2FF3C40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB755_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB755_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4663;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4663
	.align	16, 0x90
_transaction_4663:                      # @_transaction_4663
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1272664(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB756_7
# BB#1:
	leaq	1272800(%rbx), %r12
	cmpl	$0, 1272816(%rbx)
	je	.LBB756_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB756_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB756_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB756_7
.LBB756_5:
	cmpb	$1, 50286544(%rbx)
	jne	.LBB756_6
# BB#8:
	addq	$50286424, %rbx         # imm = 0x2FF4F58
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB756_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB756_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4678;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4678
	.align	16, 0x90
_transaction_4678:                      # @_transaction_4678
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1274472(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB757_7
# BB#1:
	leaq	1274608(%rbx), %r12
	cmpl	$0, 1274624(%rbx)
	je	.LBB757_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB757_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB757_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB757_7
.LBB757_5:
	cmpb	$1, 50291432(%rbx)
	jne	.LBB757_6
# BB#8:
	addq	$50291312, %rbx         # imm = 0x2FF6270
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB757_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB757_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4693;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4693
	.align	16, 0x90
_transaction_4693:                      # @_transaction_4693
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1276280(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB758_7
# BB#1:
	leaq	1276416(%rbx), %r12
	cmpl	$0, 1276432(%rbx)
	je	.LBB758_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB758_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB758_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB758_7
.LBB758_5:
	cmpb	$1, 50296320(%rbx)
	jne	.LBB758_6
# BB#8:
	addq	$50296200, %rbx         # imm = 0x2FF7588
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB758_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB758_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4708;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4708
	.align	16, 0x90
_transaction_4708:                      # @_transaction_4708
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1278088(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB759_7
# BB#1:
	leaq	1278224(%rbx), %r12
	cmpl	$0, 1278240(%rbx)
	je	.LBB759_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB759_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB759_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB759_7
.LBB759_5:
	cmpb	$1, 50301208(%rbx)
	jne	.LBB759_6
# BB#8:
	addq	$50301088, %rbx         # imm = 0x2FF88A0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB759_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB759_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4723;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4723
	.align	16, 0x90
_transaction_4723:                      # @_transaction_4723
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1279896(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB760_7
# BB#1:
	leaq	1280032(%rbx), %r12
	cmpl	$0, 1280048(%rbx)
	je	.LBB760_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB760_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB760_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB760_7
.LBB760_5:
	cmpb	$1, 50306096(%rbx)
	jne	.LBB760_6
# BB#8:
	addq	$50305976, %rbx         # imm = 0x2FF9BB8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB760_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB760_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4738;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4738
	.align	16, 0x90
_transaction_4738:                      # @_transaction_4738
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1281704(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB761_7
# BB#1:
	leaq	1281840(%rbx), %r12
	cmpl	$0, 1281856(%rbx)
	je	.LBB761_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB761_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB761_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB761_7
.LBB761_5:
	cmpb	$1, 50310984(%rbx)
	jne	.LBB761_6
# BB#8:
	addq	$50310864, %rbx         # imm = 0x2FFAED0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB761_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB761_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4753;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4753
	.align	16, 0x90
_transaction_4753:                      # @_transaction_4753
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1283512(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB762_7
# BB#1:
	leaq	1283648(%rbx), %r12
	cmpl	$0, 1283664(%rbx)
	je	.LBB762_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB762_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB762_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB762_7
.LBB762_5:
	cmpb	$1, 50315872(%rbx)
	jne	.LBB762_6
# BB#8:
	addq	$50315752, %rbx         # imm = 0x2FFC1E8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB762_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB762_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4768;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4768
	.align	16, 0x90
_transaction_4768:                      # @_transaction_4768
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1285320(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB763_7
# BB#1:
	leaq	1285456(%rbx), %r12
	cmpl	$0, 1285472(%rbx)
	je	.LBB763_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB763_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB763_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB763_7
.LBB763_5:
	cmpb	$1, 50320760(%rbx)
	jne	.LBB763_6
# BB#8:
	addq	$50320640, %rbx         # imm = 0x2FFD500
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB763_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB763_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4783;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4783
	.align	16, 0x90
_transaction_4783:                      # @_transaction_4783
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1287128(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB764_7
# BB#1:
	leaq	1287264(%rbx), %r12
	cmpl	$0, 1287280(%rbx)
	je	.LBB764_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB764_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB764_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB764_7
.LBB764_5:
	cmpb	$1, 50325648(%rbx)
	jne	.LBB764_6
# BB#8:
	addq	$50325528, %rbx         # imm = 0x2FFE818
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB764_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB764_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4798;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4798
	.align	16, 0x90
_transaction_4798:                      # @_transaction_4798
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1288936(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB765_7
# BB#1:
	leaq	1289072(%rbx), %r12
	cmpl	$0, 1289088(%rbx)
	je	.LBB765_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB765_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB765_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB765_7
.LBB765_5:
	cmpb	$1, 50330536(%rbx)
	jne	.LBB765_6
# BB#8:
	addq	$50330416, %rbx         # imm = 0x2FFFB30
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB765_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB765_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4813;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4813
	.align	16, 0x90
_transaction_4813:                      # @_transaction_4813
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1290744(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB766_7
# BB#1:
	leaq	1290880(%rbx), %r12
	cmpl	$0, 1290896(%rbx)
	je	.LBB766_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB766_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB766_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB766_7
.LBB766_5:
	cmpb	$1, 50335424(%rbx)
	jne	.LBB766_6
# BB#8:
	addq	$50335304, %rbx         # imm = 0x3000E48
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB766_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB766_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4828;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4828
	.align	16, 0x90
_transaction_4828:                      # @_transaction_4828
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1292552(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB767_7
# BB#1:
	leaq	1292688(%rbx), %r12
	cmpl	$0, 1292704(%rbx)
	je	.LBB767_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB767_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB767_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB767_7
.LBB767_5:
	cmpb	$1, 50340312(%rbx)
	jne	.LBB767_6
# BB#8:
	addq	$50340192, %rbx         # imm = 0x3002160
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB767_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB767_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4843;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4843
	.align	16, 0x90
_transaction_4843:                      # @_transaction_4843
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1294360(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB768_7
# BB#1:
	leaq	1294496(%rbx), %r12
	cmpl	$0, 1294512(%rbx)
	je	.LBB768_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB768_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB768_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB768_7
.LBB768_5:
	cmpb	$1, 50345200(%rbx)
	jne	.LBB768_6
# BB#8:
	addq	$50345080, %rbx         # imm = 0x3003478
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB768_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB768_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4858;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4858
	.align	16, 0x90
_transaction_4858:                      # @_transaction_4858
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1296168(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB769_7
# BB#1:
	leaq	1296304(%rbx), %r12
	cmpl	$0, 1296320(%rbx)
	je	.LBB769_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB769_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB769_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB769_7
.LBB769_5:
	cmpb	$1, 50350088(%rbx)
	jne	.LBB769_6
# BB#8:
	addq	$50349968, %rbx         # imm = 0x3004790
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB769_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB769_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4873;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4873
	.align	16, 0x90
_transaction_4873:                      # @_transaction_4873
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1297976(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB770_7
# BB#1:
	leaq	1298112(%rbx), %r12
	cmpl	$0, 1298128(%rbx)
	je	.LBB770_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB770_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB770_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB770_7
.LBB770_5:
	cmpb	$1, 50354976(%rbx)
	jne	.LBB770_6
# BB#8:
	addq	$50354856, %rbx         # imm = 0x3005AA8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB770_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB770_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4888;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4888
	.align	16, 0x90
_transaction_4888:                      # @_transaction_4888
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1299784(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB771_7
# BB#1:
	leaq	1299920(%rbx), %r12
	cmpl	$0, 1299936(%rbx)
	je	.LBB771_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB771_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB771_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB771_7
.LBB771_5:
	cmpb	$1, 50359864(%rbx)
	jne	.LBB771_6
# BB#8:
	addq	$50359744, %rbx         # imm = 0x3006DC0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB771_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB771_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4903;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4903
	.align	16, 0x90
_transaction_4903:                      # @_transaction_4903
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1301592(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB772_7
# BB#1:
	leaq	1301728(%rbx), %r12
	cmpl	$0, 1301744(%rbx)
	je	.LBB772_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB772_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB772_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB772_7
.LBB772_5:
	cmpb	$1, 50364752(%rbx)
	jne	.LBB772_6
# BB#8:
	addq	$50364632, %rbx         # imm = 0x30080D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB772_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB772_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4918;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4918
	.align	16, 0x90
_transaction_4918:                      # @_transaction_4918
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1303400(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB773_7
# BB#1:
	leaq	1303536(%rbx), %r12
	cmpl	$0, 1303552(%rbx)
	je	.LBB773_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB773_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB773_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB773_7
.LBB773_5:
	cmpb	$1, 50369640(%rbx)
	jne	.LBB773_6
# BB#8:
	addq	$50369520, %rbx         # imm = 0x30093F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB773_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB773_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4933;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4933
	.align	16, 0x90
_transaction_4933:                      # @_transaction_4933
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1305208(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB774_7
# BB#1:
	leaq	1305344(%rbx), %r12
	cmpl	$0, 1305360(%rbx)
	je	.LBB774_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB774_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB774_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB774_7
.LBB774_5:
	cmpb	$1, 50374528(%rbx)
	jne	.LBB774_6
# BB#8:
	addq	$50374408, %rbx         # imm = 0x300A708
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB774_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB774_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4948;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4948
	.align	16, 0x90
_transaction_4948:                      # @_transaction_4948
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1307016(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB775_7
# BB#1:
	leaq	1307152(%rbx), %r12
	cmpl	$0, 1307168(%rbx)
	je	.LBB775_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB775_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB775_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB775_7
.LBB775_5:
	cmpb	$1, 50379416(%rbx)
	jne	.LBB775_6
# BB#8:
	addq	$50379296, %rbx         # imm = 0x300BA20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB775_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB775_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4963;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4963
	.align	16, 0x90
_transaction_4963:                      # @_transaction_4963
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1308824(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB776_7
# BB#1:
	leaq	1308960(%rbx), %r12
	cmpl	$0, 1308976(%rbx)
	je	.LBB776_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB776_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB776_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB776_7
.LBB776_5:
	cmpb	$1, 50384304(%rbx)
	jne	.LBB776_6
# BB#8:
	addq	$50384184, %rbx         # imm = 0x300CD38
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB776_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB776_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4978;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4978
	.align	16, 0x90
_transaction_4978:                      # @_transaction_4978
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1310632(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB777_7
# BB#1:
	leaq	1310768(%rbx), %r12
	cmpl	$0, 1310784(%rbx)
	je	.LBB777_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB777_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB777_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB777_7
.LBB777_5:
	cmpb	$1, 50389192(%rbx)
	jne	.LBB777_6
# BB#8:
	addq	$50389072, %rbx         # imm = 0x300E050
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB777_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB777_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_4993;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_4993
	.align	16, 0x90
_transaction_4993:                      # @_transaction_4993
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1312440(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB778_7
# BB#1:
	leaq	1312576(%rbx), %r12
	cmpl	$0, 1312592(%rbx)
	je	.LBB778_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB778_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB778_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB778_7
.LBB778_5:
	cmpb	$1, 50394080(%rbx)
	jne	.LBB778_6
# BB#8:
	addq	$50393960, %rbx         # imm = 0x300F368
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB778_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB778_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5008;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5008
	.align	16, 0x90
_transaction_5008:                      # @_transaction_5008
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1314248(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB779_7
# BB#1:
	leaq	1314384(%rbx), %r12
	cmpl	$0, 1314400(%rbx)
	je	.LBB779_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB779_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB779_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB779_7
.LBB779_5:
	cmpb	$1, 50398968(%rbx)
	jne	.LBB779_6
# BB#8:
	addq	$50398848, %rbx         # imm = 0x3010680
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB779_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB779_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5023;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5023
	.align	16, 0x90
_transaction_5023:                      # @_transaction_5023
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1316056(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB780_7
# BB#1:
	leaq	1316192(%rbx), %r12
	cmpl	$0, 1316208(%rbx)
	je	.LBB780_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB780_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB780_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB780_7
.LBB780_5:
	cmpb	$1, 50403856(%rbx)
	jne	.LBB780_6
# BB#8:
	addq	$50403736, %rbx         # imm = 0x3011998
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB780_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB780_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5038;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5038
	.align	16, 0x90
_transaction_5038:                      # @_transaction_5038
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1317864(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB781_7
# BB#1:
	leaq	1318000(%rbx), %r12
	cmpl	$0, 1318016(%rbx)
	je	.LBB781_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB781_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB781_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB781_7
.LBB781_5:
	cmpb	$1, 50408744(%rbx)
	jne	.LBB781_6
# BB#8:
	addq	$50408624, %rbx         # imm = 0x3012CB0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB781_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB781_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5053;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5053
	.align	16, 0x90
_transaction_5053:                      # @_transaction_5053
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1319672(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB782_7
# BB#1:
	leaq	1319808(%rbx), %r12
	cmpl	$0, 1319824(%rbx)
	je	.LBB782_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB782_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB782_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB782_7
.LBB782_5:
	cmpb	$1, 50413632(%rbx)
	jne	.LBB782_6
# BB#8:
	addq	$50413512, %rbx         # imm = 0x3013FC8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB782_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB782_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5068;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5068
	.align	16, 0x90
_transaction_5068:                      # @_transaction_5068
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1321480(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB783_7
# BB#1:
	leaq	1321616(%rbx), %r12
	cmpl	$0, 1321632(%rbx)
	je	.LBB783_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB783_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB783_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB783_7
.LBB783_5:
	cmpb	$1, 50418520(%rbx)
	jne	.LBB783_6
# BB#8:
	addq	$50418400, %rbx         # imm = 0x30152E0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB783_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB783_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5083;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5083
	.align	16, 0x90
_transaction_5083:                      # @_transaction_5083
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1323288(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB784_7
# BB#1:
	leaq	1323424(%rbx), %r12
	cmpl	$0, 1323440(%rbx)
	je	.LBB784_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB784_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB784_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB784_7
.LBB784_5:
	cmpb	$1, 50423408(%rbx)
	jne	.LBB784_6
# BB#8:
	addq	$50423288, %rbx         # imm = 0x30165F8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB784_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB784_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5098;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5098
	.align	16, 0x90
_transaction_5098:                      # @_transaction_5098
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1325096(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB785_7
# BB#1:
	leaq	1325232(%rbx), %r12
	cmpl	$0, 1325248(%rbx)
	je	.LBB785_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB785_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB785_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB785_7
.LBB785_5:
	cmpb	$1, 50428296(%rbx)
	jne	.LBB785_6
# BB#8:
	addq	$50428176, %rbx         # imm = 0x3017910
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB785_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB785_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5113;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5113
	.align	16, 0x90
_transaction_5113:                      # @_transaction_5113
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1326904(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB786_7
# BB#1:
	leaq	1327040(%rbx), %r12
	cmpl	$0, 1327056(%rbx)
	je	.LBB786_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB786_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB786_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB786_7
.LBB786_5:
	cmpb	$1, 50433184(%rbx)
	jne	.LBB786_6
# BB#8:
	addq	$50433064, %rbx         # imm = 0x3018C28
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB786_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB786_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5128;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5128
	.align	16, 0x90
_transaction_5128:                      # @_transaction_5128
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1328712(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB787_7
# BB#1:
	leaq	1328848(%rbx), %r12
	cmpl	$0, 1328864(%rbx)
	je	.LBB787_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB787_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB787_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB787_7
.LBB787_5:
	cmpb	$1, 50438072(%rbx)
	jne	.LBB787_6
# BB#8:
	addq	$50437952, %rbx         # imm = 0x3019F40
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB787_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB787_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5143;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5143
	.align	16, 0x90
_transaction_5143:                      # @_transaction_5143
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1330520(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB788_7
# BB#1:
	leaq	1330656(%rbx), %r12
	cmpl	$0, 1330672(%rbx)
	je	.LBB788_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB788_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB788_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB788_7
.LBB788_5:
	cmpb	$1, 50442960(%rbx)
	jne	.LBB788_6
# BB#8:
	addq	$50442840, %rbx         # imm = 0x301B258
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB788_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB788_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5158;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5158
	.align	16, 0x90
_transaction_5158:                      # @_transaction_5158
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1332328(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB789_7
# BB#1:
	leaq	1332464(%rbx), %r12
	cmpl	$0, 1332480(%rbx)
	je	.LBB789_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB789_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB789_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB789_7
.LBB789_5:
	cmpb	$1, 50447848(%rbx)
	jne	.LBB789_6
# BB#8:
	addq	$50447728, %rbx         # imm = 0x301C570
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB789_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB789_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5173;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5173
	.align	16, 0x90
_transaction_5173:                      # @_transaction_5173
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1334136(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB790_7
# BB#1:
	leaq	1334272(%rbx), %r12
	cmpl	$0, 1334288(%rbx)
	je	.LBB790_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB790_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB790_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB790_7
.LBB790_5:
	cmpb	$1, 50452736(%rbx)
	jne	.LBB790_6
# BB#8:
	addq	$50452616, %rbx         # imm = 0x301D888
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB790_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB790_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5188;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5188
	.align	16, 0x90
_transaction_5188:                      # @_transaction_5188
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1335944(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB791_7
# BB#1:
	leaq	1336080(%rbx), %r12
	cmpl	$0, 1336096(%rbx)
	je	.LBB791_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB791_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB791_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB791_7
.LBB791_5:
	cmpb	$1, 50457624(%rbx)
	jne	.LBB791_6
# BB#8:
	addq	$50457504, %rbx         # imm = 0x301EBA0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB791_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB791_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5203;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5203
	.align	16, 0x90
_transaction_5203:                      # @_transaction_5203
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1337752(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB792_7
# BB#1:
	leaq	1337888(%rbx), %r12
	cmpl	$0, 1337904(%rbx)
	je	.LBB792_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB792_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB792_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB792_7
.LBB792_5:
	cmpb	$1, 50462512(%rbx)
	jne	.LBB792_6
# BB#8:
	addq	$50462392, %rbx         # imm = 0x301FEB8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB792_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB792_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5218;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5218
	.align	16, 0x90
_transaction_5218:                      # @_transaction_5218
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1339560(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB793_7
# BB#1:
	leaq	1339696(%rbx), %r12
	cmpl	$0, 1339712(%rbx)
	je	.LBB793_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB793_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB793_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB793_7
.LBB793_5:
	cmpb	$1, 50467400(%rbx)
	jne	.LBB793_6
# BB#8:
	addq	$50467280, %rbx         # imm = 0x30211D0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB793_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB793_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5233;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5233
	.align	16, 0x90
_transaction_5233:                      # @_transaction_5233
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1341368(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB794_7
# BB#1:
	leaq	1341504(%rbx), %r12
	cmpl	$0, 1341520(%rbx)
	je	.LBB794_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB794_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB794_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB794_7
.LBB794_5:
	cmpb	$1, 50472288(%rbx)
	jne	.LBB794_6
# BB#8:
	addq	$50472168, %rbx         # imm = 0x30224E8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB794_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB794_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5248;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5248
	.align	16, 0x90
_transaction_5248:                      # @_transaction_5248
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1343176(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB795_7
# BB#1:
	leaq	1343312(%rbx), %r12
	cmpl	$0, 1343328(%rbx)
	je	.LBB795_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB795_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB795_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB795_7
.LBB795_5:
	cmpb	$1, 50477176(%rbx)
	jne	.LBB795_6
# BB#8:
	addq	$50477056, %rbx         # imm = 0x3023800
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB795_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB795_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5263;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5263
	.align	16, 0x90
_transaction_5263:                      # @_transaction_5263
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1344984(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB796_7
# BB#1:
	leaq	1345120(%rbx), %r12
	cmpl	$0, 1345136(%rbx)
	je	.LBB796_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB796_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB796_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB796_7
.LBB796_5:
	cmpb	$1, 50482064(%rbx)
	jne	.LBB796_6
# BB#8:
	addq	$50481944, %rbx         # imm = 0x3024B18
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB796_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB796_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5278;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5278
	.align	16, 0x90
_transaction_5278:                      # @_transaction_5278
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1346792(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB797_7
# BB#1:
	leaq	1346928(%rbx), %r12
	cmpl	$0, 1346944(%rbx)
	je	.LBB797_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB797_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB797_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB797_7
.LBB797_5:
	cmpb	$1, 50486952(%rbx)
	jne	.LBB797_6
# BB#8:
	addq	$50486832, %rbx         # imm = 0x3025E30
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB797_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB797_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5293;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5293
	.align	16, 0x90
_transaction_5293:                      # @_transaction_5293
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1348600(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB798_7
# BB#1:
	leaq	1348736(%rbx), %r12
	cmpl	$0, 1348752(%rbx)
	je	.LBB798_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB798_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB798_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB798_7
.LBB798_5:
	cmpb	$1, 50491840(%rbx)
	jne	.LBB798_6
# BB#8:
	addq	$50491720, %rbx         # imm = 0x3027148
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB798_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB798_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5308;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5308
	.align	16, 0x90
_transaction_5308:                      # @_transaction_5308
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1350408(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB799_7
# BB#1:
	leaq	1350544(%rbx), %r12
	cmpl	$0, 1350560(%rbx)
	je	.LBB799_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB799_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB799_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB799_7
.LBB799_5:
	cmpb	$1, 50496728(%rbx)
	jne	.LBB799_6
# BB#8:
	addq	$50496608, %rbx         # imm = 0x3028460
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB799_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB799_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5323;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5323
	.align	16, 0x90
_transaction_5323:                      # @_transaction_5323
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1352216(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB800_7
# BB#1:
	leaq	1352352(%rbx), %r12
	cmpl	$0, 1352368(%rbx)
	je	.LBB800_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB800_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB800_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB800_7
.LBB800_5:
	cmpb	$1, 50501616(%rbx)
	jne	.LBB800_6
# BB#8:
	addq	$50501496, %rbx         # imm = 0x3029778
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB800_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB800_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5338;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5338
	.align	16, 0x90
_transaction_5338:                      # @_transaction_5338
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1354024(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB801_7
# BB#1:
	leaq	1354160(%rbx), %r12
	cmpl	$0, 1354176(%rbx)
	je	.LBB801_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB801_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB801_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB801_7
.LBB801_5:
	cmpb	$1, 50506504(%rbx)
	jne	.LBB801_6
# BB#8:
	addq	$50506384, %rbx         # imm = 0x302AA90
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB801_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB801_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5353;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5353
	.align	16, 0x90
_transaction_5353:                      # @_transaction_5353
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1355832(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB802_7
# BB#1:
	leaq	1355968(%rbx), %r12
	cmpl	$0, 1355984(%rbx)
	je	.LBB802_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB802_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB802_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB802_7
.LBB802_5:
	cmpb	$1, 50511392(%rbx)
	jne	.LBB802_6
# BB#8:
	addq	$50511272, %rbx         # imm = 0x302BDA8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB802_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB802_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5368;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5368
	.align	16, 0x90
_transaction_5368:                      # @_transaction_5368
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1357640(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB803_7
# BB#1:
	leaq	1357776(%rbx), %r12
	cmpl	$0, 1357792(%rbx)
	je	.LBB803_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB803_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB803_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB803_7
.LBB803_5:
	cmpb	$1, 50516280(%rbx)
	jne	.LBB803_6
# BB#8:
	addq	$50516160, %rbx         # imm = 0x302D0C0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB803_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB803_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5383;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5383
	.align	16, 0x90
_transaction_5383:                      # @_transaction_5383
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1359448(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB804_7
# BB#1:
	leaq	1359584(%rbx), %r12
	cmpl	$0, 1359600(%rbx)
	je	.LBB804_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB804_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB804_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB804_7
.LBB804_5:
	cmpb	$1, 50521168(%rbx)
	jne	.LBB804_6
# BB#8:
	addq	$50521048, %rbx         # imm = 0x302E3D8
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB804_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB804_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5398;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5398
	.align	16, 0x90
_transaction_5398:                      # @_transaction_5398
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1361256(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB805_7
# BB#1:
	leaq	1361392(%rbx), %r12
	cmpl	$0, 1361408(%rbx)
	je	.LBB805_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB805_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB805_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB805_7
.LBB805_5:
	cmpb	$1, 50526056(%rbx)
	jne	.LBB805_6
# BB#8:
	addq	$50525936, %rbx         # imm = 0x302F6F0
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB805_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB805_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5413;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5413
	.align	16, 0x90
_transaction_5413:                      # @_transaction_5413
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1363064(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB806_7
# BB#1:
	leaq	1363200(%rbx), %r12
	cmpl	$0, 1363216(%rbx)
	je	.LBB806_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB806_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB806_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB806_7
.LBB806_5:
	cmpb	$1, 50530944(%rbx)
	jne	.LBB806_6
# BB#8:
	addq	$50530824, %rbx         # imm = 0x3030A08
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB806_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB806_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5428;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5428
	.align	16, 0x90
_transaction_5428:                      # @_transaction_5428
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1364872(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB807_7
# BB#1:
	leaq	1365008(%rbx), %r12
	cmpl	$0, 1365024(%rbx)
	je	.LBB807_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB807_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB807_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB807_7
.LBB807_5:
	cmpb	$1, 50535832(%rbx)
	jne	.LBB807_6
# BB#8:
	addq	$50535712, %rbx         # imm = 0x3031D20
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB807_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB807_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5443;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5443
	.align	16, 0x90
_transaction_5443:                      # @_transaction_5443
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1366680(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB808_7
# BB#1:
	leaq	1366816(%rbx), %r12
	cmpl	$0, 1366832(%rbx)
	je	.LBB808_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB808_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB808_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB808_7
.LBB808_5:
	cmpb	$1, 50540720(%rbx)
	jne	.LBB808_6
# BB#8:
	addq	$50540600, %rbx         # imm = 0x3033038
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB808_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB808_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5458;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5458
	.align	16, 0x90
_transaction_5458:                      # @_transaction_5458
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1368488(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB809_7
# BB#1:
	leaq	1368624(%rbx), %r12
	cmpl	$0, 1368640(%rbx)
	je	.LBB809_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB809_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB809_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB809_7
.LBB809_5:
	cmpb	$1, 50545608(%rbx)
	jne	.LBB809_6
# BB#8:
	addq	$50545488, %rbx         # imm = 0x3034350
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB809_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB809_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _transaction_5473;
	.scl	2;
	.type	32;
	.endef
	.globl	_transaction_5473
	.align	16, 0x90
_transaction_5473:                      # @_transaction_5473
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$48, %rsp
	movl	%r9d, %esi
	movq	%rdx, %r15
	movq	%rcx, %rbx
	movl	48(%rbp), %edi
	leaq	1370296(%rbx), %r14
	movq	%r14, 32(%rsp)
	movq	%r15, %rcx
	movl	%r8d, %edx
	movl	%esi, %r8d
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_handle_force_release_and_driver_resolution(%rip)
	cmpl	$1, %eax
	je	.LBB810_7
# BB#1:
	leaq	1370432(%rbx), %r12
	cmpl	$0, 1370448(%rbx)
	je	.LBB810_3
# BB#2:
	movl	%edi, %r9d
	subl	%esi, %r9d
	incl	%r9d
	movq	%r14, %rcx
	movq	%r15, %rdx
	movl	%esi, %r8d
	callq	*__imp__iki_vlog_event_callback(%rip)
	movq	%rax, %r15
.LBB810_3:
	subl	%esi, %edi
	incl	%edi
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	movl	%edi, %r9d
	callq	*__imp__iki_vlog_memcmp_0(%rip)
	cmpl	$1, %eax
	je	.LBB810_5
# BB#4:
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_compare_resolved_strength(%rip)
	testl	%eax, %eax
	je	.LBB810_7
.LBB810_5:
	cmpb	$1, 50550496(%rbx)
	jne	.LBB810_6
# BB#8:
	addq	$50550376, %rbx         # imm = 0x3035668
	movq	%rbx, %rcx
	callq	*__imp__iki_schedule_process(%rip)
.LBB810_6:
	movl	%edi, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movl	%esi, %edx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	%r14, %rcx
	movl	%esi, %edx
	callq	*__imp__iki_vlog_copy_resolved_strength(%rip)
.LBB810_7:
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _execute_79803;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79803
	.align	16, 0x90
_execute_79803:                         # @_execute_79803
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	96(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1568(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	376(%rsi), %rcx
	addq	$1544, %rsi             # imm = 0x608
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79804;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79804
	.align	16, 0x90
_execute_79804:                         # @_execute_79804
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	152(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1736(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	432(%rsi), %rcx
	addq	$1712, %rsi             # imm = 0x6B0
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79805;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79805
	.align	16, 0x90
_execute_79805:                         # @_execute_79805
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	208(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1904(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	488(%rsi), %rcx
	addq	$1880, %rsi             # imm = 0x758
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79806;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79806
	.align	16, 0x90
_execute_79806:                         # @_execute_79806
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	264(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2072(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	544(%rsi), %rcx
	addq	$2048, %rsi             # imm = 0x800
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79807;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79807
	.align	16, 0x90
_execute_79807:                         # @_execute_79807
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	320(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2240(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	600(%rsi), %rcx
	addq	$2216, %rsi             # imm = 0x8A8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79808;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79808
	.align	16, 0x90
_execute_79808:                         # @_execute_79808
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	movq	664(%rsi), %rdx
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2408(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	40(%rsi), %rcx
	addq	$2384, %rsi             # imm = 0x950
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_1438;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_1438
	.align	16, 0x90
_execute_1438:                          # @_execute_1438
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$376, %rsp              # imm = 0x178
	movq	%rdx, %rsi
	leaq	872(%rsi), %r15
	.align	16, 0x90
.LBB817_1:                              # =>This Inner Loop Header: Depth=1
	movl	$4, %edx
	movq	%rsi, %rcx
	callq	*__imp__iki_vlog_set_threadId_for_unrandom(%rip)
	movq	912(%rsi), %rax
	testq	%rax, %rax
	je	.LBB817_18
# BB#2:                                 #   in Loop: Header=BB817_1 Depth=1
	jmpq	*%rax
.Ltmp2455:                              # Block address taken
.LBB817_3:
	movq	%r15, %r12
	movb	$0, 992(%rsi)
	movq	384(%rsi), %rax
	movq	440(%rsi), %rcx
	movl	(%rax), %edx
	xorl	(%rcx), %edx
	movl	%edx, -64(%rbp)
	movl	4(%rax), %eax
	orl	4(%rcx), %eax
	movl	%eax, -60(%rbp)
	je	.LBB817_4
# BB#19:
	orl	%eax, -64(%rbp)
.LBB817_4:
	movq	496(%rsi), %rcx
	movl	-64(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -72(%rbp)
	movl	-60(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -68(%rbp)
	je	.LBB817_5
# BB#20:
	orl	%eax, -72(%rbp)
.LBB817_5:
	movq	552(%rsi), %rcx
	movl	-72(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -80(%rbp)
	movl	-68(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -76(%rbp)
	je	.LBB817_6
# BB#21:
	orl	%eax, -80(%rbp)
.LBB817_6:
	movq	608(%rsi), %rcx
	movl	-80(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -88(%rbp)
	movl	-76(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -84(%rbp)
	je	.LBB817_7
# BB#22:
	orl	%eax, -88(%rbp)
.LBB817_7:
	leaq	768(%rsi), %r14
	leaq	1000(%rsi), %rdx
	leaq	-88(%rbp), %r8
	xorl	%r9d, %r9d
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	movq	776(%rsi), %rdi
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB817_9
# BB#8:
	testl	%edi, %edi
	movl	$1, -64(%rbp)
	je	.LBB817_9
# BB#23:
	movl	$1, -60(%rbp)
.LBB817_9:
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-60(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-64(%rbp), %ecx
	testb	$1, %cl
	je	.LBB817_10
# BB#24:
	movl	$1, -72(%rbp)
	jmp	.LBB817_11
.LBB817_10:
	testl	%eax, %eax
	je	.LBB817_11
# BB#25:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -72(%rbp)
.LBB817_11:
	cmpl	$0, -72(%rbp)
	movb	$1, %al
	je	.LBB817_13
# BB#12:
	cmpl	$0, -68(%rbp)
	setne	%al
.LBB817_13:
	testb	%al, %al
	je	.LBB817_14
# BB#26:
	movq	8(%r14), %rdi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB817_28
# BB#27:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB817_28
# BB#32:
	movl	$1, -76(%rbp)
.LBB817_28:
	leaq	-88(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-76(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-80(%rbp), %ecx
	testb	$1, %cl
	je	.LBB817_29
# BB#33:
	movl	$1, -88(%rbp)
	jmp	.LBB817_30
.LBB817_14:
	leaq	-96(%rbp), %rcx
	leaq	-72(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -96(%rbp)
	andl	$1, -92(%rbp)
	jmp	.LBB817_15
.LBB817_29:
	testl	%eax, %eax
	je	.LBB817_30
# BB#34:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -88(%rbp)
.LBB817_30:
	movl	-72(%rbp), %eax
	orl	-88(%rbp), %eax
	movl	%eax, -96(%rbp)
	movl	-68(%rbp), %eax
	orl	-84(%rbp), %eax
	movl	%eax, -92(%rbp)
	je	.LBB817_15
# BB#31:
	orl	%eax, -96(%rbp)
	movl	-68(%rbp), %eax
	notl	%eax
	andl	-72(%rbp), %eax
	notl	%eax
	andl	-92(%rbp), %eax
	movl	-84(%rbp), %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -92(%rbp)
.LBB817_15:
	movl	-92(%rbp), %eax
	notl	%eax
	testl	-96(%rbp), %eax
	je	.LBB817_16
# BB#35:
	movq	384(%rsi), %rax
	movq	440(%rsi), %rcx
	movq	496(%rsi), %rdx
	movq	552(%rsi), %rbx
	movq	608(%rsi), %rdi
	movq	%rax, 96(%rsp)
	movq	%rcx, 80(%rsp)
	movq	%rdx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 104(%rsp)
	movl	$1, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-112(%rbp), %rdi
	movl	$5, %edx
	movl	$5, %r8d
	movl	$5, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	leaq	832(%rsi), %r9
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$5, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$31, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-104(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	712(%rsi), %rcx
	leaq	1064(%rsi), %rdx
	xorl	%r9d, %r9d
	movq	%rax, %r8
	jmp	.LBB817_17
.LBB817_16:
	movl	$1, -128(%rbp)
	movl	$31, -124(%rbp)
	movl	$0, -120(%rbp)
	leaq	864(%rsi), %r9
	leaq	-128(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng33(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng26(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-72(%rbp), %r14
	movl	$1, %edx
	movl	$8, %r8d
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	384(%rsi), %rax
	movq	440(%rsi), %rcx
	movq	496(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-80(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rbx, %r15
	leaq	2968(%rsi), %rcx
	movq	%rcx, -304(%rbp)        # 8-byte Spill
	leaq	1352(%rsi), %rdx
	movq	%rdx, -264(%rbp)        # 8-byte Spill
	movl	$7, 32(%rsp)
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rbx
	xorl	%r9d, %r9d
	movq	%r14, %r8
	callq	*%rbx
	leaq	3024(%rsi), %rcx
	movq	%rcx, -296(%rbp)        # 8-byte Spill
	leaq	1384(%rsi), %rdx
	movq	%rdx, -272(%rbp)        # 8-byte Spill
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%rcx, %r13
	movq	%rdi, %r8
	callq	*%rbx
	leaq	3080(%rsi), %rdx
	movq	%rdx, -280(%rbp)        # 8-byte Spill
	leaq	_subprog_m_3f35b2f_bcb3c0fa_1(%rip), %r8
	movq	%r12, %rcx
	movq	%rcx, -288(%rbp)        # 8-byte Spill
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	leaq	2912(%rsi), %rcx
	movq	%rcx, -312(%rbp)        # 8-byte Spill
	movl	$1, %edx
	movq	%rcx, %r14
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %r12
	xorl	%edx, %edx
	movl	$8, %r8d
	leaq	-88(%rbp), %rax
	movq	%rax, %rbx
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	952(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -144(%rbp)
	movl	$31, -140(%rbp)
	movl	$0, -136(%rbp)
	leaq	856(%rsi), %r9
	leaq	-144(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng36(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng35(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-96(%rbp), %rbx
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	movq	__imp__iki_vlog_get_part_select_value(%rip), %rdi
	movq	%rdi, %rax
	callq	*%rax
	movq	384(%rsi), %rax
	movq	440(%rsi), %rcx
	movq	496(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-104(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%r15
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-304(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rcx
	movq	-264(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rbx
	callq	*%rbx
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r13, %rcx
	movq	-272(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	callq	*%rbx
	movq	-288(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rcx
	movq	-280(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_3f35b2f_bcb3c0fa_1(%rip), %r8
	movq	%rsi, %r9
	movq	__imp__iki_vlog_invoke_static_function(%rip), %r13
	callq	*%r13
	movl	$1, %edx
	movq	%r14, %rcx
	movq	__imp__iki_vlog_signal_handle_value(%rip), %r14
	callq	*%r14
	movq	%rax, %rdi
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rcx, %rbx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	952(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -176(%rbp)
	movl	$31, -172(%rbp)
	movl	$0, -168(%rbp)
	leaq	848(%rsi), %r9
	leaq	-176(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng38(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng37(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-152(%rbp), %rdi
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	384(%rsi), %rax
	movq	440(%rsi), %rcx
	movq	496(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-184(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movq	-264(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-296(%rbp), %rcx        # 8-byte Reload
	movq	-272(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	callq	*%rdi
	movq	%r12, %rcx
	movq	-280(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_3f35b2f_bcb3c0fa_1(%rip), %r8
	movq	%rsi, %r9
	callq	*%r13
	movl	$1, %edx
	movq	-312(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rcx
	callq	*%r14
	movq	%rax, %rdi
	leaq	-192(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	movq	__imp__iki_std_memset(%rip), %r15
	callq	*%r15
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_bit_copy(%rip), %r14
	callq	*%r14
	movq	952(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -224(%rbp)
	movl	$31, -220(%rbp)
	movl	$0, -216(%rbp)
	leaq	840(%rsi), %r9
	leaq	-224(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng40(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng39(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-200(%rbp), %rdi
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	384(%rsi), %rax
	movq	440(%rsi), %rcx
	movq	496(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-232(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	movq	__imp__iki_vlog_concat(%rip), %r12
	callq	*%r12
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-304(%rbp), %rcx        # 8-byte Reload
	movq	-264(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-296(%rbp), %rcx        # 8-byte Reload
	movq	-272(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	callq	*%rdi
	movq	-288(%rbp), %rcx        # 8-byte Reload
	movq	-280(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_3f35b2f_bcb3c0fa_1(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-240(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*%r15
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*%r14
	movq	952(%rsi), %rcx
	movq	__imp__iki_vlog_delete_function_invocation(%rip), %r13
	callq	*%r13
	leaq	-88(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	-112(%rbp), %rax
	movq	%rax, 64(%rsp)
	leaq	-192(%rbp), %rax
	movq	%rax, 48(%rsp)
	movq	%rbx, 32(%rsp)
	movl	$1, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-64(%rbp), %r15
	movl	$4, %edx
	movl	$4, %r8d
	movl	$4, %r9d
	movq	%r15, %rcx
	movq	%r12, %rdi
	callq	*%rdi
	movq	552(%rsi), %rax
	movq	608(%rsi), %rcx
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-248(%rbp), %rbx
	movl	$2, %edx
	movl	$2, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	leaq	3528(%rsi), %rcx
	leaq	1096(%rsi), %rdx
	movl	$3, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	leaq	3584(%rsi), %rcx
	leaq	1128(%rsi), %rdx
	movl	$1, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%rbx, %r8
	callq	*%rdi
	leaq	3640(%rsi), %rdx
	leaq	_subprog_m_3f35b2f_bcb3c0fa_2(%rip), %r8
	movq	-288(%rbp), %rcx        # 8-byte Reload
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	leaq	3472(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-256(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*%r14
	movq	952(%rsi), %rcx
	callq	*%r13
	leaq	712(%rsi), %rcx
	leaq	1064(%rsi), %rdx
	xorl	%r9d, %r9d
	movq	%rbx, %r8
.LBB817_17:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
.LBB817_18:
	movb	$1, 992(%rsi)
	leaq	.Ltmp2455(%rip), %rax
	movq	%rax, 912(%rsi)
	addq	$376, %rsp              # imm = 0x178
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _subprog_m_3f35b2f_bcb3c0fa_1;
	.scl	2;
	.type	32;
	.endef
	.globl	_subprog_m_3f35b2f_bcb3c0fa_1
	.align	16, 0x90
_subprog_m_3f35b2f_bcb3c0fa_1:          # @_subprog_m_3f35b2f_bcb3c0fa_1
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$520, %rsp              # imm = 0x208
	movq	%rdx, %r12
	leaq	3024(%r12), %rdi
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %r15
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	leaq	-72(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movl	(%rbx), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -80(%rbp)
	movl	4(%rbx), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -76(%rbp)
	je	.LBB818_1
# BB#149:
	orl	%ecx, -80(%rbp)
.LBB818_1:
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rbx
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rbx), %ecx
	movl	4(%rbx), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_3
# BB#2:
	testl	%ebx, %ebx
	movl	$1, -96(%rbp)
	je	.LBB818_3
# BB#150:
	movl	$1, -92(%rbp)
.LBB818_3:
	movl	-80(%rbp), %eax
	xorl	-96(%rbp), %eax
	movl	%eax, -104(%rbp)
	movl	-76(%rbp), %eax
	orl	-92(%rbp), %eax
	movl	%eax, -100(%rbp)
	je	.LBB818_4
# BB#151:
	orl	%eax, -104(%rbp)
.LBB818_4:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_5
# BB#152:
	movl	$1, -112(%rbp)
	jmp	.LBB818_6
.LBB818_5:
	testl	%eax, %eax
	je	.LBB818_6
# BB#153:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB818_6:
	cmpl	$0, -112(%rbp)
	movb	$1, %al
	je	.LBB818_8
# BB#7:
	cmpl	$0, -108(%rbp)
	setne	%al
.LBB818_8:
	testb	%al, %al
	je	.LBB818_9
# BB#154:
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	leaq	-120(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	leaq	-128(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movl	(%rsi), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -136(%rbp)
	movl	4(%rsi), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -132(%rbp)
	je	.LBB818_155
# BB#162:
	orl	%ecx, -136(%rbp)
.LBB818_155:
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-144(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_157
# BB#156:
	testl	%ebx, %ebx
	movl	$1, -152(%rbp)
	je	.LBB818_157
# BB#163:
	movl	$1, -148(%rbp)
.LBB818_157:
	movl	-136(%rbp), %eax
	xorl	-152(%rbp), %eax
	movl	%eax, -160(%rbp)
	movl	-132(%rbp), %eax
	orl	-148(%rbp), %eax
	movl	%eax, -156(%rbp)
	je	.LBB818_158
# BB#164:
	orl	%eax, -160(%rbp)
.LBB818_158:
	movq	%rdi, %r14
	leaq	-168(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-156(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-160(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_159
# BB#165:
	movl	$1, -168(%rbp)
	jmp	.LBB818_160
.LBB818_9:
	movq	%rdi, %r14
	leaq	-176(%rbp), %rcx
	leaq	-112(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -176(%rbp)
	andl	$1, -172(%rbp)
	jmp	.LBB818_10
.LBB818_159:
	testl	%eax, %eax
	je	.LBB818_160
# BB#166:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -168(%rbp)
.LBB818_160:
	movl	-112(%rbp), %eax
	orl	-168(%rbp), %eax
	movl	%eax, -176(%rbp)
	movl	-108(%rbp), %eax
	orl	-164(%rbp), %eax
	movl	%eax, -172(%rbp)
	je	.LBB818_10
# BB#161:
	orl	%eax, -176(%rbp)
	movl	-108(%rbp), %eax
	notl	%eax
	andl	-112(%rbp), %eax
	notl	%eax
	andl	-172(%rbp), %eax
	movl	-164(%rbp), %ecx
	notl	%ecx
	andl	-168(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -172(%rbp)
.LBB818_10:
	movl	-176(%rbp), %esi
	movl	-172(%rbp), %edi
	notl	%edi
	leaq	2968(%r12), %rbx
	movl	$8, %edx
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %r13
	testl	%edi, %esi
	je	.LBB818_11
# BB#167:
	movl	$3, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-184(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r13, %r9
.LBB818_201:
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2912(%r12), %rcx
	addq	$2880, %r12             # imm = 0xB40
	xorl	%r9d, %r9d
	movq	%r12, %rdx
	movq	%rax, %r8
	jmp	.LBB818_148
.LBB818_11:
	movq	%rbx, -440(%rbp)        # 8-byte Spill
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%r13), %eax
	movl	%eax, %ecx
	notl	%ecx
	andb	(%r13), %cl
	je	.LBB818_12
# BB#168:
	movl	$1, -72(%rbp)
	movq	%r14, %r13
	jmp	.LBB818_13
.LBB818_12:
	testl	%eax, %eax
	movq	%r14, %r13
	je	.LBB818_13
# BB#169:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -72(%rbp)
.LBB818_13:
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	andl	$1, %ecx
	movl	%ecx, -60(%rbp)
	movl	-72(%rbp), %ecx
	notl	%ecx
	orl	%eax, %ecx
	andl	$1, %ecx
	movl	%ecx, -64(%rbp)
	movl	-60(%rbp), %eax
	notl	%eax
	testl	%eax, %ecx
	je	.LBB818_14
# BB#170:
	movq	%r12, %rdx
	leaq	2912(%rdx), %rcx
	addq	$2880, %rdx             # imm = 0xB40
	leaq	ng23(%rip), %r8
	xorl	%r9d, %r9d
	jmp	.LBB818_148
.LBB818_14:
	movl	$8, %edx
	movq	-440(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rbx
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rbx), %eax
	movl	(%rbx), %ecx
	orl	%eax, %ecx
	cmpl	$255, %ecx
	jne	.LBB818_17
# BB#15:
	testl	%eax, %eax
	movl	$1, -64(%rbp)
	je	.LBB818_17
# BB#16:
	movl	$1, -60(%rbp)
.LBB818_17:
	movl	-60(%rbp), %eax
	notl	%eax
	testl	-64(%rbp), %eax
	je	.LBB818_18
# BB#172:
	movq	%r12, %rdx
	leaq	2912(%rdx), %rcx
	addq	$2880, %rdx             # imm = 0xB40
	leaq	ng24(%rip), %r8
	xorl	%r9d, %r9d
.LBB818_148:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	addq	$520, %rsp              # imm = 0x208
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB818_18:
	movl	$3, %edx
	movq	%r13, %rcx
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rsi
	movq	%rsi, %r14
	leaq	-72(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rsi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng24(%rip), %ecx
	movl	ng24+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_20
# BB#19:
	testl	%edi, %edi
	movl	$1, -80(%rbp)
	je	.LBB818_20
# BB#173:
	movl	$1, -76(%rbp)
.LBB818_20:
	movl	(%rbx), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%rbx), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB818_21
# BB#174:
	orl	%eax, -88(%rbp)
.LBB818_21:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB818_22
# BB#175:
	movl	$1, -96(%rbp)
	jmp	.LBB818_23
.LBB818_22:
	testl	%eax, %eax
	je	.LBB818_23
# BB#176:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB818_23:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB818_25
# BB#24:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB818_25:
	testb	%al, %al
	je	.LBB818_26
# BB#177:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-104(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-112(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng23(%rip), %ecx
	movl	ng23+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_179
# BB#178:
	testl	%edi, %edi
	movl	$1, -120(%rbp)
	je	.LBB818_179
# BB#184:
	movl	$1, -116(%rbp)
.LBB818_179:
	movl	(%rbx), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%rbx), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB818_180
# BB#185:
	orl	%eax, -128(%rbp)
.LBB818_180:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_181
# BB#186:
	movl	$1, -136(%rbp)
	jmp	.LBB818_182
.LBB818_26:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB818_27
.LBB818_181:
	testl	%eax, %eax
	je	.LBB818_182
# BB#187:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB818_182:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB818_27
# BB#183:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB818_27:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_28
# BB#188:
	movl	$1, -152(%rbp)
	jmp	.LBB818_29
.LBB818_28:
	testl	%eax, %eax
	je	.LBB818_29
# BB#189:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB818_29:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB818_31
# BB#30:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB818_31:
	testb	%al, %al
	je	.LBB818_32
# BB#190:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	movl	$1, -208(%rbp)
	movl	$2, -204(%rbp)
	movl	$0, -200(%rbp)
	leaq	-208(%rbp), %rcx
	movq	%rcx, 80(%rsp)
	leaq	ng33(%rip), %rcx
	movq	%rcx, 56(%rsp)
	leaq	ng32(%rip), %rcx
	movq	%rcx, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	movq	%r15, %r12
	leaq	-176(%rbp), %rbx
	movl	$1, %edx
	movl	$2, %r8d
	movq	%rbx, %rcx
	movq	%rax, %r9
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%rbx, 48(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rdi
	leaq	-168(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-160(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rsi, %r9
	callq	*%rbx
	movq	%rbx, %r15
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%r14, %rbx
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rbx
	movl	$1, -240(%rbp)
	movl	$2, -236(%rbp)
	movl	$0, -232(%rbp)
	leaq	-240(%rbp), %rcx
	movq	%rcx, 80(%rsp)
	leaq	ng33(%rip), %rcx
	movq	%rcx, 56(%rsp)
	leaq	ng32(%rip), %rcx
	movq	%rcx, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-224(%rbp), %rbx
	movl	$1, %edx
	movl	$2, %r8d
	movq	%rbx, %rcx
	movq	%rax, %r9
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%rbx, 48(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-216(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-184(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r15
	movq	%rax, %rbx
	leaq	-248(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_192
# BB#191:
	testl	%edi, %edi
	movl	$1, -248(%rbp)
	je	.LBB818_192
# BB#196:
	movl	$1, -244(%rbp)
.LBB818_192:
	leaq	-256(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-244(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-248(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_193
# BB#197:
	movl	$1, -256(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	%r12, %r15
	jmp	.LBB818_194
.LBB818_32:
	leaq	-264(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -264(%rbp)
	andl	$1, -260(%rbp)
	jmp	.LBB818_33
.LBB818_193:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	%r12, %r15
	je	.LBB818_194
# BB#198:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -256(%rbp)
.LBB818_194:
	movl	-152(%rbp), %eax
	andl	-256(%rbp), %eax
	movl	%eax, -264(%rbp)
	movl	-148(%rbp), %eax
	orl	-252(%rbp), %eax
	movl	%eax, -260(%rbp)
	movq	-448(%rbp), %r12        # 8-byte Reload
	je	.LBB818_33
# BB#195:
	orl	%eax, -264(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-260(%rbp), %ecx
	movl	-256(%rbp), %eax
	movl	-252(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -260(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-264(%rbp), %ecx
	movl	-256(%rbp), %eax
	movl	-252(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -264(%rbp)
.LBB818_33:
	movl	-260(%rbp), %eax
	notl	%eax
	testl	-264(%rbp), %eax
	je	.LBB818_34
# BB#199:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	movl	$1, -304(%rbp)
	movl	$2, -300(%rbp)
	movl	$0, -296(%rbp)
	leaq	-304(%rbp), %rcx
	movq	%rcx, 80(%rsp)
	leaq	ng33(%rip), %rcx
	movq	%rcx, 56(%rsp)
	leaq	ng32(%rip), %rcx
	movq	%rcx, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-288(%rbp), %rdi
	movl	$1, %edx
	movl	$2, %r8d
	movq	%rdi, %rcx
	movq	%rax, %r9
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%rdi, 48(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$2, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rcx
	jmp	.LBB818_200
.LBB818_34:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-72(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_36
# BB#35:
	testl	%edi, %edi
	movl	$1, -80(%rbp)
	je	.LBB818_36
# BB#203:
	movl	$1, -76(%rbp)
.LBB818_36:
	movl	(%rbx), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%rbx), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB818_37
# BB#204:
	orl	%eax, -88(%rbp)
.LBB818_37:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_38
# BB#205:
	movl	$1, -96(%rbp)
	jmp	.LBB818_39
.LBB818_38:
	testl	%eax, %eax
	je	.LBB818_39
# BB#206:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB818_39:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB818_41
# BB#40:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB818_41:
	testb	%al, %al
	je	.LBB818_42
# BB#207:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-104(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-112(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_209
# BB#208:
	testl	%edi, %edi
	movl	$1, -120(%rbp)
	je	.LBB818_209
# BB#214:
	movl	$1, -116(%rbp)
.LBB818_209:
	movl	(%rbx), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%rbx), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB818_210
# BB#215:
	orl	%eax, -128(%rbp)
.LBB818_210:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_211
# BB#216:
	movl	$1, -136(%rbp)
	jmp	.LBB818_212
.LBB818_42:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB818_43
.LBB818_211:
	testl	%eax, %eax
	je	.LBB818_212
# BB#217:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB818_212:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB818_43
# BB#213:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB818_43:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_44
# BB#218:
	movl	$1, -152(%rbp)
	jmp	.LBB818_45
.LBB818_44:
	testl	%eax, %eax
	je	.LBB818_45
# BB#219:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB818_45:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB818_47
# BB#46:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB818_47:
	testb	%al, %al
	je	.LBB818_48
# BB#220:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %r12
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-176(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rdi
	callq	*%rdi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-184(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rbx, 64(%rsp)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-168(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rsi
	leaq	-160(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r12, %r9
	callq	*%rsi
	movq	%rsi, %r12
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %r15
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-248(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-256(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rbx, 64(%rsp)
	leaq	ng24(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-224(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-216(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r15, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-264(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_222
# BB#221:
	testl	%edi, %edi
	movl	$1, -264(%rbp)
	je	.LBB818_222
# BB#226:
	movl	$1, -260(%rbp)
.LBB818_222:
	leaq	-272(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-260(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-264(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_223
# BB#227:
	movl	$1, -272(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB818_224
.LBB818_48:
	leaq	-280(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -280(%rbp)
	andl	$1, -276(%rbp)
	jmp	.LBB818_49
.LBB818_223:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB818_224
# BB#228:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -272(%rbp)
.LBB818_224:
	movl	-152(%rbp), %eax
	andl	-272(%rbp), %eax
	movl	%eax, -280(%rbp)
	movl	-148(%rbp), %eax
	orl	-268(%rbp), %eax
	movl	%eax, -276(%rbp)
	movq	-448(%rbp), %r12        # 8-byte Reload
	je	.LBB818_49
# BB#225:
	orl	%eax, -280(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-276(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -276(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-280(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -280(%rbp)
.LBB818_49:
	movl	-276(%rbp), %eax
	notl	%eax
	testl	-280(%rbp), %eax
	je	.LBB818_50
# BB#229:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-320(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rdi
	callq	*%rdi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-328(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rbx, 64(%rsp)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-312(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-288(%rbp), %rcx
.LBB818_200:
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rsi, %r9
	jmp	.LBB818_201
.LBB818_50:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rbx
	callq	*%rbx
	movq	%r14, %rsi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rsi
	movq	%rsi, %rdi
	leaq	-72(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%rbx
	movq	%rax, %rsi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_52
# BB#51:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB818_52
# BB#230:
	movl	$1, -76(%rbp)
.LBB818_52:
	movl	(%r14), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%r14), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB818_53
# BB#231:
	orl	%eax, -88(%rbp)
.LBB818_53:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_54
# BB#232:
	movl	$1, -96(%rbp)
	jmp	.LBB818_55
.LBB818_54:
	testl	%eax, %eax
	je	.LBB818_55
# BB#233:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB818_55:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB818_57
# BB#56:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB818_57:
	testb	%al, %al
	je	.LBB818_58
# BB#234:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-104(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-112(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_236
# BB#235:
	testl	%ebx, %ebx
	movl	$1, -120(%rbp)
	je	.LBB818_236
# BB#241:
	movl	$1, -116(%rbp)
.LBB818_236:
	movl	(%r14), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%r14), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB818_237
# BB#242:
	orl	%eax, -128(%rbp)
.LBB818_237:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_238
# BB#243:
	movl	$1, -136(%rbp)
	jmp	.LBB818_239
.LBB818_58:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB818_59
.LBB818_238:
	testl	%eax, %eax
	je	.LBB818_239
# BB#244:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB818_239:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB818_59
# BB#240:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB818_59:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_60
# BB#245:
	movl	$1, -152(%rbp)
	jmp	.LBB818_61
.LBB818_60:
	testl	%eax, %eax
	je	.LBB818_61
# BB#246:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB818_61:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB818_63
# BB#62:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB818_63:
	testb	%al, %al
	je	.LBB818_64
# BB#247:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-176(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-184(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-168(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-160(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-248(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-256(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-224(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-216(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-264(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_249
# BB#248:
	testl	%edi, %edi
	movl	$1, -264(%rbp)
	je	.LBB818_249
# BB#253:
	movl	$1, -260(%rbp)
.LBB818_249:
	leaq	-272(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-260(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-264(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_250
# BB#254:
	movl	$1, -272(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB818_251
.LBB818_64:
	leaq	-280(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -280(%rbp)
	andl	$1, -276(%rbp)
	jmp	.LBB818_65
.LBB818_250:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB818_251
# BB#255:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -272(%rbp)
.LBB818_251:
	movl	-152(%rbp), %eax
	andl	-272(%rbp), %eax
	movl	%eax, -280(%rbp)
	movl	-148(%rbp), %eax
	orl	-268(%rbp), %eax
	movl	%eax, -276(%rbp)
	movq	-448(%rbp), %r12        # 8-byte Reload
	je	.LBB818_65
# BB#252:
	orl	%eax, -280(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-276(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -276(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-280(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -280(%rbp)
.LBB818_65:
	movl	-276(%rbp), %eax
	notl	%eax
	testl	-280(%rbp), %eax
	je	.LBB818_66
# BB#256:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-320(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-328(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-312(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-288(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	jmp	.LBB818_201
.LBB818_66:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_68
# BB#67:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB818_68
# BB#257:
	movl	$1, -68(%rbp)
.LBB818_68:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_69
# BB#258:
	movl	$1, -80(%rbp)
	jmp	.LBB818_70
.LBB818_69:
	testl	%eax, %eax
	je	.LBB818_70
# BB#259:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB818_70:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	je	.LBB818_72
# BB#71:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB818_72:
	testb	%al, %al
	je	.LBB818_73
# BB#260:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_262
# BB#261:
	testl	%ebx, %ebx
	movl	$1, -96(%rbp)
	je	.LBB818_262
# BB#266:
	movl	$1, -92(%rbp)
.LBB818_262:
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-92(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-96(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_263
# BB#267:
	movl	$1, -104(%rbp)
	jmp	.LBB818_264
.LBB818_73:
	leaq	-112(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -112(%rbp)
	andl	$1, -108(%rbp)
	jmp	.LBB818_74
.LBB818_263:
	testl	%eax, %eax
	je	.LBB818_264
# BB#268:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -104(%rbp)
.LBB818_264:
	movl	-80(%rbp), %eax
	orl	-104(%rbp), %eax
	movl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	orl	-100(%rbp), %eax
	movl	%eax, -108(%rbp)
	je	.LBB818_74
# BB#265:
	orl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	notl	%eax
	andl	-80(%rbp), %eax
	notl	%eax
	andl	-108(%rbp), %eax
	movl	-100(%rbp), %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -108(%rbp)
.LBB818_74:
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-108(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-112(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_75
# BB#269:
	movl	$1, -120(%rbp)
	jmp	.LBB818_76
.LBB818_75:
	testl	%eax, %eax
	je	.LBB818_76
# BB#270:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -120(%rbp)
.LBB818_76:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	cmpl	$0, -120(%rbp)
	movb	$1, %al
	jne	.LBB818_78
# BB#77:
	cmpl	$0, -116(%rbp)
	setne	%al
.LBB818_78:
	testb	%al, %al
	je	.LBB818_79
# BB#271:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-144(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-136(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-128(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-168(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 48(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-160(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-176(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_273
# BB#272:
	testl	%edi, %edi
	movl	$1, -176(%rbp)
	je	.LBB818_273
# BB#277:
	movl	$1, -172(%rbp)
.LBB818_273:
	leaq	-184(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_274
# BB#278:
	movl	$1, -184(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB818_275
.LBB818_79:
	leaq	-216(%rbp), %rcx
	leaq	-120(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -216(%rbp)
	andl	$1, -212(%rbp)
	jmp	.LBB818_80
.LBB818_274:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB818_275
# BB#279:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB818_275:
	movl	-120(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -216(%rbp)
	movl	-116(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -212(%rbp)
	je	.LBB818_80
# BB#276:
	orl	%eax, -216(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-212(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -212(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -216(%rbp)
.LBB818_80:
	leaq	-224(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_81
# BB#280:
	movl	$1, -224(%rbp)
	jmp	.LBB818_82
.LBB818_81:
	testl	%eax, %eax
	je	.LBB818_82
# BB#281:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -224(%rbp)
.LBB818_82:
	cmpl	$0, -224(%rbp)
	movb	$1, %al
	jne	.LBB818_84
# BB#83:
	cmpl	$0, -220(%rbp)
	setne	%al
.LBB818_84:
	testb	%al, %al
	je	.LBB818_85
# BB#282:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-264(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-256(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-248(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-288(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-312(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_284
# BB#283:
	testl	%edi, %edi
	movl	$1, -312(%rbp)
	je	.LBB818_284
# BB#288:
	movl	$1, -308(%rbp)
.LBB818_284:
	leaq	-320(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-308(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-312(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_285
# BB#289:
	movl	$1, -320(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB818_286
.LBB818_85:
	leaq	-328(%rbp), %rcx
	leaq	-224(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -328(%rbp)
	andl	$1, -324(%rbp)
	jmp	.LBB818_86
.LBB818_285:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB818_286
# BB#290:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -320(%rbp)
.LBB818_286:
	movl	-224(%rbp), %eax
	andl	-320(%rbp), %eax
	movl	%eax, -328(%rbp)
	movl	-220(%rbp), %eax
	orl	-316(%rbp), %eax
	movl	%eax, -324(%rbp)
	je	.LBB818_86
# BB#287:
	orl	%eax, -328(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-324(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -324(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -328(%rbp)
.LBB818_86:
	leaq	-336(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-324(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_87
# BB#291:
	movl	$1, -336(%rbp)
	jmp	.LBB818_88
.LBB818_87:
	testl	%eax, %eax
	je	.LBB818_88
# BB#292:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -336(%rbp)
.LBB818_88:
	cmpl	$0, -336(%rbp)
	movb	$1, %al
	jne	.LBB818_90
# BB#89:
	cmpl	$0, -332(%rbp)
	setne	%al
.LBB818_90:
	testb	%al, %al
	je	.LBB818_91
# BB#293:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-360(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-352(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-344(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-384(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-368(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-392(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_295
# BB#294:
	testl	%edi, %edi
	movl	$1, -392(%rbp)
	je	.LBB818_295
# BB#299:
	movl	$1, -388(%rbp)
.LBB818_295:
	leaq	-400(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-388(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-392(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_296
# BB#300:
	movl	$1, -400(%rbp)
	jmp	.LBB818_297
.LBB818_91:
	leaq	-408(%rbp), %rcx
	leaq	-336(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -408(%rbp)
	andl	$1, -404(%rbp)
	jmp	.LBB818_92
.LBB818_296:
	testl	%eax, %eax
	je	.LBB818_297
# BB#301:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -400(%rbp)
.LBB818_297:
	movl	-336(%rbp), %eax
	andl	-400(%rbp), %eax
	movl	%eax, -408(%rbp)
	movl	-332(%rbp), %eax
	orl	-396(%rbp), %eax
	movl	%eax, -404(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB818_92
# BB#298:
	orl	%eax, -408(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-404(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -404(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-408(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -408(%rbp)
.LBB818_92:
	movl	-404(%rbp), %eax
	notl	%eax
	testl	-408(%rbp), %eax
	je	.LBB818_93
# BB#302:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-432(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-424(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-416(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	jmp	.LBB818_350
.LBB818_93:
	movq	%r15, %r12
	movq	%rdi, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB818_95
# BB#94:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB818_95
# BB#303:
	movl	$1, -68(%rbp)
.LBB818_95:
	leaq	-80(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_96
# BB#304:
	movl	$1, -80(%rbp)
	jmp	.LBB818_97
.LBB818_96:
	testl	%eax, %eax
	je	.LBB818_97
# BB#305:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB818_97:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	je	.LBB818_99
# BB#98:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB818_99:
	testb	%al, %al
	je	.LBB818_100
# BB#306:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-96(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_308
# BB#307:
	testl	%eax, %eax
	movl	$1, -96(%rbp)
	je	.LBB818_308
# BB#312:
	movl	$1, -92(%rbp)
.LBB818_308:
	leaq	-104(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-92(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-96(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_309
# BB#313:
	movl	$1, -104(%rbp)
	jmp	.LBB818_310
.LBB818_100:
	leaq	-112(%rbp), %rax
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -112(%rbp)
	andl	$1, -108(%rbp)
	jmp	.LBB818_101
.LBB818_309:
	testl	%eax, %eax
	je	.LBB818_310
# BB#314:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -104(%rbp)
.LBB818_310:
	movl	-80(%rbp), %eax
	orl	-104(%rbp), %eax
	movl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	orl	-100(%rbp), %eax
	movl	%eax, -108(%rbp)
	je	.LBB818_101
# BB#311:
	orl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	notl	%eax
	andl	-80(%rbp), %eax
	notl	%eax
	andl	-108(%rbp), %eax
	movl	-100(%rbp), %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -108(%rbp)
.LBB818_101:
	leaq	-120(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-108(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-112(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_102
# BB#315:
	movl	$1, -120(%rbp)
	jmp	.LBB818_103
.LBB818_102:
	testl	%eax, %eax
	je	.LBB818_103
# BB#316:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -120(%rbp)
.LBB818_103:
	cmpl	$0, -120(%rbp)
	movb	$1, %al
	jne	.LBB818_105
# BB#104:
	cmpl	$0, -116(%rbp)
	setne	%al
.LBB818_105:
	testb	%al, %al
	je	.LBB818_106
# BB#317:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-144(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-136(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-128(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-168(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-160(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-176(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_319
# BB#318:
	testl	%eax, %eax
	movl	$1, -176(%rbp)
	je	.LBB818_319
# BB#323:
	movl	$1, -172(%rbp)
.LBB818_319:
	leaq	-184(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_320
# BB#324:
	movl	$1, -184(%rbp)
	jmp	.LBB818_321
.LBB818_106:
	leaq	-216(%rbp), %rax
	leaq	-120(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -216(%rbp)
	andl	$1, -212(%rbp)
	jmp	.LBB818_107
.LBB818_320:
	testl	%eax, %eax
	je	.LBB818_321
# BB#325:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB818_321:
	movl	-120(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -216(%rbp)
	movl	-116(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -212(%rbp)
	je	.LBB818_107
# BB#322:
	orl	%eax, -216(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-212(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -212(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -216(%rbp)
.LBB818_107:
	leaq	-224(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_108
# BB#326:
	movl	$1, -224(%rbp)
	jmp	.LBB818_109
.LBB818_108:
	testl	%eax, %eax
	je	.LBB818_109
# BB#327:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -224(%rbp)
.LBB818_109:
	cmpl	$0, -224(%rbp)
	movb	$1, %al
	jne	.LBB818_111
# BB#110:
	cmpl	$0, -220(%rbp)
	setne	%al
.LBB818_111:
	testb	%al, %al
	je	.LBB818_112
# BB#328:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-264(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-256(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-248(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-288(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rdi, 64(%rsp)
	movq	%rax, 48(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-312(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_330
# BB#329:
	testl	%eax, %eax
	movl	$1, -312(%rbp)
	je	.LBB818_330
# BB#334:
	movl	$1, -308(%rbp)
.LBB818_330:
	leaq	-320(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-308(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-312(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_331
# BB#335:
	movl	$1, -320(%rbp)
	jmp	.LBB818_332
.LBB818_112:
	leaq	-328(%rbp), %rax
	leaq	-224(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -328(%rbp)
	andl	$1, -324(%rbp)
	jmp	.LBB818_113
.LBB818_331:
	testl	%eax, %eax
	je	.LBB818_332
# BB#336:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -320(%rbp)
.LBB818_332:
	movl	-224(%rbp), %eax
	andl	-320(%rbp), %eax
	movl	%eax, -328(%rbp)
	movl	-220(%rbp), %eax
	orl	-316(%rbp), %eax
	movl	%eax, -324(%rbp)
	je	.LBB818_113
# BB#333:
	orl	%eax, -328(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-324(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -324(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -328(%rbp)
.LBB818_113:
	leaq	-336(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-324(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_114
# BB#337:
	movl	$1, -336(%rbp)
	jmp	.LBB818_115
.LBB818_114:
	testl	%eax, %eax
	je	.LBB818_115
# BB#338:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -336(%rbp)
.LBB818_115:
	cmpl	$0, -336(%rbp)
	movb	$1, %al
	jne	.LBB818_117
# BB#116:
	cmpl	$0, -332(%rbp)
	setne	%al
.LBB818_117:
	testb	%al, %al
	je	.LBB818_118
# BB#339:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-360(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rdi
	leaq	-352(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-344(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*%rbx
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-384(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %r15
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r15, %rcx
	callq	*%rdi
	movq	%r15, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-368(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*%rbx
	movq	%rax, %rdi
	leaq	-392(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_341
# BB#340:
	testl	%eax, %eax
	movl	$1, -392(%rbp)
	je	.LBB818_341
# BB#345:
	movl	$1, -388(%rbp)
.LBB818_341:
	leaq	-400(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-388(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-392(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_342
# BB#346:
	movl	$1, -400(%rbp)
	jmp	.LBB818_343
.LBB818_118:
	leaq	-408(%rbp), %rax
	leaq	-336(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -408(%rbp)
	andl	$1, -404(%rbp)
	jmp	.LBB818_119
.LBB818_342:
	testl	%eax, %eax
	je	.LBB818_343
# BB#347:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -400(%rbp)
.LBB818_343:
	movl	-336(%rbp), %eax
	andl	-400(%rbp), %eax
	movl	%eax, -408(%rbp)
	movl	-332(%rbp), %eax
	orl	-396(%rbp), %eax
	movl	%eax, -404(%rbp)
	je	.LBB818_119
# BB#344:
	orl	%eax, -408(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-404(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -404(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-408(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -408(%rbp)
.LBB818_119:
	movl	-404(%rbp), %eax
	notl	%eax
	testl	-408(%rbp), %eax
	je	.LBB818_120
# BB#348:
	movl	$8, %edx
	movq	%r12, %rcx
	movq	%r14, %rdi
	callq	*%rdi
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-432(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	jmp	.LBB818_349
.LBB818_120:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-72(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_122
# BB#121:
	testl	%eax, %eax
	movl	$1, -72(%rbp)
	je	.LBB818_122
# BB#351:
	movl	$1, -68(%rbp)
.LBB818_122:
	leaq	-80(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_123
# BB#352:
	movl	$1, -80(%rbp)
	jmp	.LBB818_124
.LBB818_123:
	testl	%eax, %eax
	je	.LBB818_124
# BB#353:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB818_124:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	je	.LBB818_126
# BB#125:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB818_126:
	testb	%al, %al
	je	.LBB818_127
# BB#354:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-96(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_356
# BB#355:
	testl	%eax, %eax
	movl	$1, -96(%rbp)
	je	.LBB818_356
# BB#360:
	movl	$1, -92(%rbp)
.LBB818_356:
	leaq	-104(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-92(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-96(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_357
# BB#361:
	movl	$1, -104(%rbp)
	jmp	.LBB818_358
.LBB818_127:
	leaq	-112(%rbp), %rax
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -112(%rbp)
	andl	$1, -108(%rbp)
	jmp	.LBB818_128
.LBB818_357:
	testl	%eax, %eax
	je	.LBB818_358
# BB#362:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -104(%rbp)
.LBB818_358:
	movl	-80(%rbp), %eax
	orl	-104(%rbp), %eax
	movl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	orl	-100(%rbp), %eax
	movl	%eax, -108(%rbp)
	je	.LBB818_128
# BB#359:
	orl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	notl	%eax
	andl	-80(%rbp), %eax
	notl	%eax
	andl	-108(%rbp), %eax
	movl	-100(%rbp), %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -108(%rbp)
.LBB818_128:
	leaq	-120(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-108(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-112(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_129
# BB#363:
	movl	$1, -120(%rbp)
	jmp	.LBB818_130
.LBB818_129:
	testl	%eax, %eax
	je	.LBB818_130
# BB#364:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -120(%rbp)
.LBB818_130:
	cmpl	$0, -120(%rbp)
	movb	$1, %al
	jne	.LBB818_132
# BB#131:
	cmpl	$0, -116(%rbp)
	setne	%al
.LBB818_132:
	testb	%al, %al
	je	.LBB818_133
# BB#365:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-144(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-136(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-128(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-168(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-160(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-176(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_367
# BB#366:
	testl	%eax, %eax
	movl	$1, -176(%rbp)
	je	.LBB818_367
# BB#371:
	movl	$1, -172(%rbp)
.LBB818_367:
	leaq	-184(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_368
# BB#372:
	movl	$1, -184(%rbp)
	jmp	.LBB818_369
.LBB818_133:
	leaq	-216(%rbp), %rax
	leaq	-120(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -216(%rbp)
	andl	$1, -212(%rbp)
	jmp	.LBB818_134
.LBB818_368:
	testl	%eax, %eax
	je	.LBB818_369
# BB#373:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB818_369:
	movl	-120(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -216(%rbp)
	movl	-116(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -212(%rbp)
	je	.LBB818_134
# BB#370:
	orl	%eax, -216(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-212(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -212(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -216(%rbp)
.LBB818_134:
	leaq	-224(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_135
# BB#374:
	movl	$1, -224(%rbp)
	jmp	.LBB818_136
.LBB818_135:
	testl	%eax, %eax
	je	.LBB818_136
# BB#375:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -224(%rbp)
.LBB818_136:
	cmpl	$0, -224(%rbp)
	movb	$1, %al
	jne	.LBB818_138
# BB#137:
	cmpl	$0, -220(%rbp)
	setne	%al
.LBB818_138:
	testb	%al, %al
	je	.LBB818_139
# BB#376:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-264(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-256(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-248(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-288(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rdi, 64(%rsp)
	leaq	ng24(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-312(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_378
# BB#377:
	testl	%eax, %eax
	movl	$1, -312(%rbp)
	je	.LBB818_378
# BB#382:
	movl	$1, -308(%rbp)
.LBB818_378:
	leaq	-320(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-308(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-312(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_379
# BB#383:
	movl	$1, -320(%rbp)
	jmp	.LBB818_380
.LBB818_139:
	leaq	-328(%rbp), %rax
	leaq	-224(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -328(%rbp)
	andl	$1, -324(%rbp)
	jmp	.LBB818_140
.LBB818_379:
	testl	%eax, %eax
	je	.LBB818_380
# BB#384:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -320(%rbp)
.LBB818_380:
	movl	-224(%rbp), %eax
	andl	-320(%rbp), %eax
	movl	%eax, -328(%rbp)
	movl	-220(%rbp), %eax
	orl	-316(%rbp), %eax
	movl	%eax, -324(%rbp)
	je	.LBB818_140
# BB#381:
	orl	%eax, -328(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-324(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -324(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -328(%rbp)
.LBB818_140:
	leaq	-336(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-324(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_141
# BB#385:
	movl	$1, -336(%rbp)
	jmp	.LBB818_142
.LBB818_141:
	testl	%eax, %eax
	je	.LBB818_142
# BB#386:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -336(%rbp)
.LBB818_142:
	cmpl	$0, -336(%rbp)
	movb	$1, %al
	jne	.LBB818_144
# BB#143:
	cmpl	$0, -332(%rbp)
	setne	%al
.LBB818_144:
	testb	%al, %al
	je	.LBB818_145
# BB#387:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-360(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rdi
	leaq	-352(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-344(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*%rbx
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-384(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %r15
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r15, %rcx
	callq	*%rdi
	movq	%r15, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-368(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*%rbx
	movq	%rax, %rdi
	leaq	-392(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB818_389
# BB#388:
	testl	%eax, %eax
	movl	$1, -392(%rbp)
	je	.LBB818_389
# BB#393:
	movl	$1, -388(%rbp)
.LBB818_389:
	leaq	-400(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-388(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-392(%rbp), %ecx
	testb	$1, %cl
	je	.LBB818_390
# BB#394:
	movl	$1, -400(%rbp)
	jmp	.LBB818_391
.LBB818_145:
	leaq	-408(%rbp), %rax
	leaq	-336(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -408(%rbp)
	andl	$1, -404(%rbp)
	jmp	.LBB818_146
.LBB818_390:
	testl	%eax, %eax
	je	.LBB818_391
# BB#395:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -400(%rbp)
.LBB818_391:
	movl	-336(%rbp), %eax
	andl	-400(%rbp), %eax
	movl	%eax, -408(%rbp)
	movl	-332(%rbp), %eax
	orl	-396(%rbp), %eax
	movl	%eax, -404(%rbp)
	je	.LBB818_146
# BB#392:
	orl	%eax, -408(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-404(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -404(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-408(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -408(%rbp)
.LBB818_146:
	movl	-404(%rbp), %eax
	notl	%eax
	testl	-408(%rbp), %eax
	je	.LBB818_147
# BB#396:
	movl	$8, %edx
	movq	%r12, %rcx
	movq	%r14, %rdi
	callq	*%rdi
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-432(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
.LBB818_349:
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-424(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-416(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
.LBB818_350:
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	-448(%rbp), %rdx        # 8-byte Reload
	leaq	2912(%rdx), %rcx
	addq	$2880, %rdx             # imm = 0xB40
	xorl	%r9d, %r9d
	movq	%rax, %r8
	jmp	.LBB818_148
.LBB818_147:
	movq	-448(%rbp), %rdx        # 8-byte Reload
	leaq	2912(%rdx), %rax
	addq	$2880, %rdx             # imm = 0xB40
	leaq	ng42(%rip), %rbx
	xorl	%r9d, %r9d
	movq	%rax, %rcx
	movq	%rbx, %r8
	jmp	.LBB818_148

	.def	 _subprog_m_3f35b2f_bcb3c0fa_2;
	.scl	2;
	.type	32;
	.endef
	.globl	_subprog_m_3f35b2f_bcb3c0fa_2
	.align	16, 0x90
_subprog_m_3f35b2f_bcb3c0fa_2:          # @_subprog_m_3f35b2f_bcb3c0fa_2
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$264, %rsp              # imm = 0x108
	leaq	3584(%rdx), %r15
	movq	%rdx, %r12
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rsi
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %r14
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rdi
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	leaq	-72(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rbx
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rbx), %ecx
	movl	4(%rbx), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_2
# BB#1:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB819_2
# BB#64:
	movl	$1, -76(%rbp)
.LBB819_2:
	movl	(%rdi), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%rdi), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB819_3
# BB#65:
	orl	%eax, -88(%rbp)
.LBB819_3:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_4
# BB#66:
	movl	$1, -96(%rbp)
	jmp	.LBB819_5
.LBB819_4:
	testl	%eax, %eax
	je	.LBB819_5
# BB#67:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB819_5:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB819_7
# BB#6:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB819_7:
	testb	%al, %al
	je	.LBB819_8
# BB#68:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	leaq	-104(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rdi
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	leaq	-112(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rbx
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rbx), %ecx
	movl	4(%rbx), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_70
# BB#69:
	testl	%ebx, %ebx
	movl	$1, -120(%rbp)
	je	.LBB819_70
# BB#75:
	movl	$1, -116(%rbp)
.LBB819_70:
	movl	(%rdi), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%rdi), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB819_71
# BB#76:
	orl	%eax, -128(%rbp)
.LBB819_71:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_72
# BB#77:
	movq	%r15, -208(%rbp)        # 8-byte Spill
	movl	$1, -136(%rbp)
	jmp	.LBB819_73
.LBB819_8:
	movq	%r15, -208(%rbp)        # 8-byte Spill
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB819_9
.LBB819_72:
	movq	%r15, -208(%rbp)        # 8-byte Spill
	testl	%eax, %eax
	je	.LBB819_73
# BB#78:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB819_73:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB819_9
# BB#74:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB819_9:
	movl	-144(%rbp), %ebx
	movl	-140(%rbp), %r13d
	notl	%r13d
	leaq	3528(%r12), %r15
	movl	$4, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rdi
	testl	%r13d, %ebx
	je	.LBB819_10
# BB#79:
	movl	$2, %edx
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$2, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$3, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rdi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	3472(%r12), %rcx
	addq	$3440, %r12             # imm = 0xD70
	xorl	%r9d, %r9d
	movq	%r12, %rdx
	movq	%rax, %r8
	jmp	.LBB819_63
.LBB819_10:
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rdi, %rdx
	callq	*%r14
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-72(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%r14, %r13
	movl	(%rdi), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -80(%rbp)
	movl	4(%rdi), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -76(%rbp)
	je	.LBB819_11
# BB#80:
	orl	%ecx, -80(%rbp)
.LBB819_11:
	leaq	-88(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-80(%rbp), %ecx
	movl	-76(%rbp), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_13
# BB#12:
	testl	%ebx, %ebx
	movl	$1, -88(%rbp)
	je	.LBB819_13
# BB#81:
	movl	$1, -84(%rbp)
.LBB819_13:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_14
# BB#82:
	movl	$1, -96(%rbp)
	jmp	.LBB819_15
.LBB819_14:
	testl	%eax, %eax
	je	.LBB819_15
# BB#83:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB819_15:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	movq	%r15, %r14
	jne	.LBB819_17
# BB#16:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB819_17:
	testb	%al, %al
	je	.LBB819_18
# BB#84:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-104(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-112(%rbp), %rcx
	movl	$3, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movl	(%rdi), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -120(%rbp)
	movl	4(%rdi), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -116(%rbp)
	je	.LBB819_85
# BB#91:
	orl	%ecx, -120(%rbp)
.LBB819_85:
	leaq	-128(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-120(%rbp), %ecx
	movl	-116(%rbp), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_87
# BB#86:
	testl	%ebx, %ebx
	movl	$1, -128(%rbp)
	je	.LBB819_87
# BB#92:
	movl	$1, -124(%rbp)
.LBB819_87:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_88
# BB#93:
	movl	$1, -136(%rbp)
	jmp	.LBB819_89
.LBB819_18:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB819_19
.LBB819_88:
	testl	%eax, %eax
	je	.LBB819_89
# BB#94:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB819_89:
	movl	-96(%rbp), %eax
	andl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB819_19
# BB#90:
	orl	%eax, -144(%rbp)
	movl	-96(%rbp), %eax
	movl	-92(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-140(%rbp), %ecx
	movl	-136(%rbp), %eax
	movl	-132(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -140(%rbp)
	movl	-96(%rbp), %eax
	movl	-92(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	movl	-136(%rbp), %eax
	movl	-132(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -144(%rbp)
.LBB819_19:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	movq	-208(%rbp), %r15        # 8-byte Reload
	je	.LBB819_20
# BB#95:
	movl	$1, -152(%rbp)
	jmp	.LBB819_21
.LBB819_20:
	testl	%eax, %eax
	je	.LBB819_21
# BB#96:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB819_21:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB819_23
# BB#22:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB819_23:
	testb	%al, %al
	je	.LBB819_24
# BB#97:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-160(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-168(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rax), %ecx
	movl	4(%rax), %eax
	movl	%edi, %ebx
	orl	%eax, %ebx
	orl	%ecx, %ebx
	orl	%eax, %edi
	cmovel	%ecx, %ebx
	leaq	-176(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	xorl	ng33(%rip), %ebx
	movl	ng33+4(%rip), %eax
	movl	%edi, %ecx
	xorl	%eax, %ecx
	orl	%ebx, %ecx
	orl	%eax, %edi
	movl	%edi, %eax
	notl	%eax
	testl	%eax, %ecx
	jne	.LBB819_99
# BB#98:
	testl	%edi, %edi
	movl	$1, -176(%rbp)
	je	.LBB819_99
# BB#103:
	movl	$1, -172(%rbp)
.LBB819_99:
	leaq	-184(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_100
# BB#104:
	movl	$1, -184(%rbp)
	jmp	.LBB819_101
.LBB819_24:
	leaq	-192(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -192(%rbp)
	andl	$1, -188(%rbp)
	jmp	.LBB819_25
.LBB819_100:
	testl	%eax, %eax
	je	.LBB819_101
# BB#105:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB819_101:
	movl	-152(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -192(%rbp)
	movl	-148(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -188(%rbp)
	je	.LBB819_25
# BB#102:
	orl	%eax, -192(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-188(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -188(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-192(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -192(%rbp)
.LBB819_25:
	movl	-188(%rbp), %eax
	notl	%eax
	testl	-192(%rbp), %eax
	je	.LBB819_26
# BB#106:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-200(%rbp), %rcx
	jmp	.LBB819_107
.LBB819_26:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_28
# BB#27:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB819_28
# BB#110:
	movl	$1, -68(%rbp)
.LBB819_28:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_29
# BB#111:
	movl	$1, -80(%rbp)
	jmp	.LBB819_30
.LBB819_29:
	testl	%eax, %eax
	je	.LBB819_30
# BB#112:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB819_30:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB819_32
# BB#31:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB819_32:
	testb	%al, %al
	je	.LBB819_33
# BB#113:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_115
# BB#114:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB819_115
# BB#119:
	movl	$1, -100(%rbp)
.LBB819_115:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_116
# BB#120:
	movl	$1, -112(%rbp)
	jmp	.LBB819_117
.LBB819_33:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB819_34
.LBB819_116:
	testl	%eax, %eax
	je	.LBB819_117
# BB#121:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB819_117:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB819_34
# BB#118:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB819_34:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	jne	.LBB819_147
# BB#35:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_37
# BB#36:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB819_37
# BB#122:
	movl	$1, -68(%rbp)
.LBB819_37:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_38
# BB#123:
	movl	$1, -80(%rbp)
	jmp	.LBB819_39
.LBB819_38:
	testl	%eax, %eax
	je	.LBB819_39
# BB#124:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB819_39:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB819_41
# BB#40:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB819_41:
	testb	%al, %al
	je	.LBB819_42
# BB#125:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$3, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_127
# BB#126:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB819_127
# BB#131:
	movl	$1, -100(%rbp)
.LBB819_127:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_128
# BB#132:
	movl	$1, -112(%rbp)
	jmp	.LBB819_129
.LBB819_42:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB819_43
.LBB819_128:
	testl	%eax, %eax
	je	.LBB819_129
# BB#133:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB819_129:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB819_43
# BB#130:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB819_43:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	je	.LBB819_44
# BB#134:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-128(%rbp), %rcx
	movl	$2, %r8d
	jmp	.LBB819_108
.LBB819_44:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_46
# BB#45:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB819_46
# BB#135:
	movl	$1, -68(%rbp)
.LBB819_46:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_47
# BB#136:
	movl	$1, -80(%rbp)
	jmp	.LBB819_48
.LBB819_47:
	testl	%eax, %eax
	je	.LBB819_48
# BB#137:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB819_48:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB819_50
# BB#49:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB819_50:
	testb	%al, %al
	je	.LBB819_51
# BB#138:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_140
# BB#139:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB819_140
# BB#144:
	movl	$1, -100(%rbp)
.LBB819_140:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_141
# BB#145:
	movl	$1, -112(%rbp)
	jmp	.LBB819_142
.LBB819_51:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB819_52
.LBB819_141:
	testl	%eax, %eax
	je	.LBB819_142
# BB#146:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB819_142:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB819_52
# BB#143:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB819_52:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	je	.LBB819_53
.LBB819_147:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-128(%rbp), %rcx
.LBB819_107:
	xorl	%r8d, %r8d
.LBB819_108:
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%r12, %rdx
	leaq	3472(%rdx), %rcx
	addq	$3440, %rdx             # imm = 0xD70
	xorl	%r9d, %r9d
	movq	%rax, %r8
.LBB819_63:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	addq	$264, %rsp              # imm = 0x108
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB819_53:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_55
# BB#54:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB819_55
# BB#148:
	movl	$1, -68(%rbp)
.LBB819_55:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_56
# BB#149:
	movl	$1, -80(%rbp)
	jmp	.LBB819_57
.LBB819_56:
	testl	%eax, %eax
	je	.LBB819_57
# BB#150:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB819_57:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB819_59
# BB#58:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB819_59:
	testb	%al, %al
	je	.LBB819_60
# BB#151:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$3, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB819_153
# BB#152:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB819_153
# BB#157:
	movl	$1, -100(%rbp)
.LBB819_153:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB819_154
# BB#158:
	movl	$1, -112(%rbp)
	jmp	.LBB819_155
.LBB819_60:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB819_61
.LBB819_154:
	testl	%eax, %eax
	je	.LBB819_155
# BB#159:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB819_155:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB819_61
# BB#156:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB819_61:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	je	.LBB819_62
# BB#160:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-128(%rbp), %rcx
	movl	$1, %r8d
	jmp	.LBB819_108
.LBB819_62:
	movq	%r12, %rdx
	leaq	3472(%rdx), %rcx
	addq	$3440, %rdx             # imm = 0xD70
	leaq	ng42(%rip), %r8
	xorl	%r9d, %r9d
	jmp	.LBB819_63

	.def	 _execute_79932;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79932
	.align	16, 0x90
_execute_79932:                         # @_execute_79932
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	96(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2048(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	432(%rsi), %rcx
	addq	$2024, %rsi             # imm = 0x7E8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79933;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79933
	.align	16, 0x90
_execute_79933:                         # @_execute_79933
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	152(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2216(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	488(%rsi), %rcx
	addq	$2192, %rsi             # imm = 0x890
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79934;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79934
	.align	16, 0x90
_execute_79934:                         # @_execute_79934
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	208(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2384(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	544(%rsi), %rcx
	addq	$2360, %rsi             # imm = 0x938
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79935;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79935
	.align	16, 0x90
_execute_79935:                         # @_execute_79935
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	264(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2552(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	600(%rsi), %rcx
	addq	$2528, %rsi             # imm = 0x9E0
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79936;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79936
	.align	16, 0x90
_execute_79936:                         # @_execute_79936
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	320(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2720(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	656(%rsi), %rcx
	addq	$2696, %rsi             # imm = 0xA88
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79937;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79937
	.align	16, 0x90
_execute_79937:                         # @_execute_79937
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	376(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2888(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	712(%rsi), %rcx
	addq	$2864, %rsi             # imm = 0xB30
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79938;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79938
	.align	16, 0x90
_execute_79938:                         # @_execute_79938
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	movq	776(%rsi), %rdx
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	3056(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	40(%rsi), %rcx
	addq	$3032, %rsi             # imm = 0xBD8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_1506;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_1506
	.align	16, 0x90
_execute_1506:                          # @_execute_1506
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$616, %rsp              # imm = 0x268
	movq	%rdx, %rsi
	leaq	1096(%rsi), %r14
	.align	16, 0x90
.LBB827_1:                              # =>This Inner Loop Header: Depth=1
	movl	$5, %edx
	movq	%rsi, %rcx
	callq	*__imp__iki_vlog_set_threadId_for_unrandom(%rip)
	movq	1136(%rsi), %rax
	testq	%rax, %rax
	je	.LBB827_19
# BB#2:                                 #   in Loop: Header=BB827_1 Depth=1
	jmpq	*%rax
.Ltmp2486:                              # Block address taken
.LBB827_3:
	movb	$0, 1216(%rsi)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movl	(%rax), %edx
	xorl	(%rcx), %edx
	movl	%edx, -64(%rbp)
	movl	4(%rax), %eax
	orl	4(%rcx), %eax
	movl	%eax, -60(%rbp)
	je	.LBB827_4
# BB#20:
	orl	%eax, -64(%rbp)
.LBB827_4:
	movq	552(%rsi), %rcx
	movl	-64(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -72(%rbp)
	movl	-60(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -68(%rbp)
	je	.LBB827_5
# BB#21:
	orl	%eax, -72(%rbp)
.LBB827_5:
	movq	608(%rsi), %rcx
	movl	-72(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -80(%rbp)
	movl	-68(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -76(%rbp)
	je	.LBB827_6
# BB#22:
	orl	%eax, -80(%rbp)
.LBB827_6:
	movq	664(%rsi), %rcx
	movl	-80(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -88(%rbp)
	movl	-76(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -84(%rbp)
	je	.LBB827_7
# BB#23:
	orl	%eax, -88(%rbp)
.LBB827_7:
	movq	720(%rsi), %rcx
	movl	-88(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -96(%rbp)
	movl	-84(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -92(%rbp)
	je	.LBB827_8
# BB#24:
	orl	%eax, -96(%rbp)
.LBB827_8:
	leaq	880(%rsi), %rbx
	leaq	1224(%rsi), %rdx
	leaq	-96(%rbp), %r8
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	movq	888(%rsi), %rdi
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB827_10
# BB#9:
	testl	%edi, %edi
	movl	$1, -64(%rbp)
	je	.LBB827_10
# BB#25:
	movl	$1, -60(%rbp)
.LBB827_10:
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-60(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-64(%rbp), %ecx
	testb	$1, %cl
	je	.LBB827_11
# BB#26:
	movl	$1, -72(%rbp)
	jmp	.LBB827_12
.LBB827_11:
	testl	%eax, %eax
	je	.LBB827_12
# BB#27:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -72(%rbp)
.LBB827_12:
	cmpl	$0, -72(%rbp)
	movb	$1, %al
	je	.LBB827_14
# BB#13:
	cmpl	$0, -68(%rbp)
	setne	%al
.LBB827_14:
	testb	%al, %al
	je	.LBB827_15
# BB#28:
	movq	8(%rbx), %rdi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB827_30
# BB#29:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB827_30
# BB#34:
	movl	$1, -76(%rbp)
.LBB827_30:
	leaq	-88(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-76(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-80(%rbp), %ecx
	testb	$1, %cl
	je	.LBB827_31
# BB#35:
	movl	$1, -88(%rbp)
	jmp	.LBB827_32
.LBB827_15:
	leaq	-96(%rbp), %rcx
	leaq	-72(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -96(%rbp)
	andl	$1, -92(%rbp)
	jmp	.LBB827_16
.LBB827_31:
	testl	%eax, %eax
	je	.LBB827_32
# BB#36:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -88(%rbp)
.LBB827_32:
	movl	-72(%rbp), %eax
	orl	-88(%rbp), %eax
	movl	%eax, -96(%rbp)
	movl	-68(%rbp), %eax
	orl	-84(%rbp), %eax
	movl	%eax, -92(%rbp)
	je	.LBB827_16
# BB#33:
	orl	%eax, -96(%rbp)
	movl	-68(%rbp), %eax
	notl	%eax
	andl	-72(%rbp), %eax
	notl	%eax
	andl	-92(%rbp), %eax
	movl	-84(%rbp), %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -92(%rbp)
.LBB827_16:
	movl	-92(%rbp), %eax
	notl	%eax
	testl	-96(%rbp), %eax
	je	.LBB827_17
# BB#37:
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	608(%rsi), %rbx
	movq	664(%rsi), %rdi
	movq	720(%rsi), %r8
	movq	%rax, 112(%rsp)
	movq	%rcx, 96(%rsp)
	movq	%rdx, 80(%rsp)
	movq	%rbx, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%r8, 32(%rsp)
	movl	$1, 120(%rsp)
	movl	$1, 104(%rsp)
	movl	$1, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-112(%rbp), %rdi
	movl	$6, %edx
	movl	$6, %r8d
	movl	$6, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	leaq	952(%rsi), %r9
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$6, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$63, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-104(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	824(%rsi), %rcx
	leaq	1288(%rsi), %rdx
	xorl	%r9d, %r9d
	movq	%rax, %r8
	jmp	.LBB827_18
.LBB827_17:
	movl	$1, -128(%rbp)
	movl	$63, -124(%rbp)
	movl	$0, -120(%rbp)
	leaq	1080(%rsi), %r9
	leaq	-128(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng33(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng26(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-72(%rbp), %r12
	movl	$1, %edx
	movl	$8, %r8d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-80(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rbx, %r13
	leaq	3616(%rsi), %rcx
	movq	%rcx, -504(%rbp)        # 8-byte Spill
	leaq	1832(%rsi), %rdx
	movq	%rdx, -488(%rbp)        # 8-byte Spill
	movl	$7, 32(%rsp)
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rbx
	xorl	%r9d, %r9d
	movq	%r12, %r8
	callq	*%rbx
	leaq	3672(%rsi), %rcx
	movq	%rcx, -464(%rbp)        # 8-byte Spill
	leaq	1864(%rsi), %rdx
	movq	%rdx, -496(%rbp)        # 8-byte Spill
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%rdi, %r8
	callq	*%rbx
	leaq	3728(%rsi), %rdx
	movq	%rdx, -472(%rbp)        # 8-byte Spill
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r8
	movq	%r14, %rcx
	movq	%rcx, -480(%rbp)        # 8-byte Spill
	movq	%rdx, %r14
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	leaq	3560(%rsi), %rcx
	movq	%rcx, -456(%rbp)        # 8-byte Spill
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %r12
	leaq	-88(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%r12, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	1176(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -144(%rbp)
	movl	$63, -140(%rbp)
	movl	$0, -136(%rbp)
	leaq	1064(%rsi), %r9
	leaq	-144(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng36(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng35(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-96(%rbp), %r15
	movl	$1, %edx
	movl	$8, %r8d
	movq	%r15, %rcx
	movq	__imp__iki_vlog_get_part_select_value(%rip), %rax
	callq	*%rax
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-104(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%r13
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-504(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rcx
	movq	-488(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rdx
	movq	%r15, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %r15
	movq	%r15, %rbx
	callq	*%rbx
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %rcx        # 8-byte Reload
	movq	-496(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	callq	*%rbx
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	%r14, %rdx
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	-456(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rcx, %rbx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_bit_copy(%rip), %r14
	callq	*%r14
	movq	1176(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -176(%rbp)
	movl	$63, -172(%rbp)
	movl	$0, -168(%rbp)
	leaq	1048(%rsi), %r9
	leaq	-176(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng38(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng37(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-152(%rbp), %r15
	movl	$1, %edx
	movl	$8, %r8d
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-184(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r13, %rcx
	movq	%r12, %rdx
	movq	%r15, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rcx
	movq	-496(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rdx
	movq	%rbx, %r8
	callq	*%rdi
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	-456(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-192(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*%r14
	movq	1176(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -224(%rbp)
	movl	$63, -220(%rbp)
	movl	$0, -216(%rbp)
	leaq	1032(%rsi), %r9
	leaq	-224(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng40(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng39(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-200(%rbp), %rdi
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-232(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	movq	__imp__iki_vlog_concat(%rip), %r13
	callq	*%r13
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-504(%rbp), %rcx        # 8-byte Reload
	movq	-488(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movq	%r12, %rdx
	movq	%rbx, %r8
	callq	*%rdi
	movq	-480(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rcx
	movq	-472(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %rax
	movq	%rax, %r8
	movq	%rsi, %r9
	movq	__imp__iki_vlog_invoke_static_function(%rip), %r14
	callq	*%r14
	movl	$1, %edx
	movq	-456(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-240(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	1176(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -272(%rbp)
	movl	$63, -268(%rbp)
	movl	$0, -264(%rbp)
	leaq	1016(%rsi), %r9
	leaq	-272(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng45(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng44(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-248(%rbp), %rbx
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%r13
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-504(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rcx
	movq	-488(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdx
	movq	%rbx, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rbx
	callq	*%rbx
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %rcx        # 8-byte Reload
	movq	-496(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	callq	*%rbx
	movq	%r12, %rcx
	movq	-472(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r8
	movq	%rsi, %r9
	callq	*%r14
	movl	$1, %edx
	movq	-456(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rcx
	movq	__imp__iki_vlog_signal_handle_value(%rip), %r14
	callq	*%r14
	movq	%rax, %rdi
	leaq	-288(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	1176(%rsi), %rcx
	movq	__imp__iki_vlog_delete_function_invocation(%rip), %rdi
	movq	%rdi, %rax
	callq	*%rax
	movl	$1, -320(%rbp)
	movl	$63, -316(%rbp)
	movl	$0, -312(%rbp)
	leaq	1000(%rsi), %r9
	leaq	-320(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng47(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng46(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-296(%rbp), %rdi
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-328(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movq	%r13, %rdx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %rcx        # 8-byte Reload
	movq	-496(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rdx
	movq	%rbx, %r8
	callq	*%rdi
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, %r14
	leaq	-336(%rbp), %rdi
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	movq	__imp__iki_std_memset(%rip), %rbx
	movq	%rbx, %r13
	callq	*%r13
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rdi, %rcx
	movq	%r14, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	1176(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -368(%rbp)
	movl	$63, -364(%rbp)
	movl	$0, -360(%rbp)
	leaq	984(%rsi), %r9
	leaq	-368(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng49(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng48(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-344(%rbp), %rdi
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	movq	__imp__iki_vlog_get_part_select_value(%rip), %rax
	callq	*%rax
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-504(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rcx
	movq	-488(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %rcx        # 8-byte Reload
	movq	%r15, %rdx
	movq	%r14, %r8
	callq	*%rdi
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r15
	movq	%r15, %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	-456(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-384(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*%r13
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_bit_copy(%rip), %r14
	callq	*%r14
	movq	1176(%rsi), %rcx
	movq	__imp__iki_vlog_delete_function_invocation(%rip), %r14
	callq	*%r14
	movl	$1, -416(%rbp)
	movl	$63, -412(%rbp)
	movl	$0, -408(%rbp)
	leaq	968(%rsi), %r9
	leaq	-416(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng51(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng50(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-392(%rbp), %rdi
	movl	$1, %edx
	movl	$8, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	552(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-424(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	movq	__imp__iki_vlog_concat(%rip), %r13
	callq	*%r13
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movq	-488(%rbp), %rdx        # 8-byte Reload
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %rcx        # 8-byte Reload
	movq	-496(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	callq	*%rdi
	movq	%rdi, %r12
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %rdx        # 8-byte Reload
	movq	%r15, %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	-456(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-432(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_bit_copy(%rip), %r15
	callq	*%r15
	movq	1176(%rsi), %rcx
	callq	*%r14
	leaq	-88(%rbp), %rax
	movq	%rax, 144(%rsp)
	leaq	-112(%rbp), %rax
	movq	%rax, 128(%rsp)
	leaq	-192(%rbp), %rax
	movq	%rax, 112(%rsp)
	leaq	-240(%rbp), %rax
	movq	%rax, 96(%rsp)
	leaq	-288(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	-336(%rbp), %rax
	movq	%rax, 64(%rsp)
	leaq	-384(%rbp), %rax
	movq	%rax, 48(%rsp)
	movq	%rbx, 32(%rsp)
	movl	$1, 152(%rsp)
	movl	$1, 136(%rsp)
	movl	$1, 120(%rsp)
	movl	$1, 104(%rsp)
	movl	$1, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-64(%rbp), %r14
	movl	$8, %edx
	movl	$8, %r8d
	movl	$8, %r9d
	movq	%r14, %rcx
	movq	%r13, %rdi
	callq	*%rdi
	movq	608(%rsi), %rax
	movq	664(%rsi), %rcx
	movq	720(%rsi), %rdx
	movq	%rax, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rdx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-440(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movl	$7, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-504(%rbp), %rcx        # 8-byte Reload
	movq	-488(%rbp), %rdx        # 8-byte Reload
	movq	%r14, %r8
	callq	*%r12
	movl	$2, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-464(%rbp), %rcx        # 8-byte Reload
	movq	-496(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	callq	*%r12
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8a82f32d_25ba9140_33(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	-456(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-448(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*%r15
	movq	1176(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	leaq	824(%rsi), %rcx
	leaq	1288(%rsi), %rdx
	xorl	%r9d, %r9d
	movq	%rbx, %r8
.LBB827_18:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
.LBB827_19:
	movb	$1, 1216(%rsi)
	leaq	.Ltmp2486(%rip), %rax
	movq	%rax, 1136(%rsi)
	addq	$616, %rsp              # imm = 0x268
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _subprog_m_8a82f32d_25ba9140_33;
	.scl	2;
	.type	32;
	.endef
	.globl	_subprog_m_8a82f32d_25ba9140_33
	.align	16, 0x90
_subprog_m_8a82f32d_25ba9140_33:        # @_subprog_m_8a82f32d_25ba9140_33
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$520, %rsp              # imm = 0x208
	movq	%rdx, %r12
	leaq	3672(%r12), %rdi
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %r15
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	leaq	-72(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movl	(%rbx), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -80(%rbp)
	movl	4(%rbx), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -76(%rbp)
	je	.LBB828_1
# BB#149:
	orl	%ecx, -80(%rbp)
.LBB828_1:
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rbx
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rbx), %ecx
	movl	4(%rbx), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_3
# BB#2:
	testl	%ebx, %ebx
	movl	$1, -96(%rbp)
	je	.LBB828_3
# BB#150:
	movl	$1, -92(%rbp)
.LBB828_3:
	movl	-80(%rbp), %eax
	xorl	-96(%rbp), %eax
	movl	%eax, -104(%rbp)
	movl	-76(%rbp), %eax
	orl	-92(%rbp), %eax
	movl	%eax, -100(%rbp)
	je	.LBB828_4
# BB#151:
	orl	%eax, -104(%rbp)
.LBB828_4:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_5
# BB#152:
	movl	$1, -112(%rbp)
	jmp	.LBB828_6
.LBB828_5:
	testl	%eax, %eax
	je	.LBB828_6
# BB#153:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB828_6:
	cmpl	$0, -112(%rbp)
	movb	$1, %al
	je	.LBB828_8
# BB#7:
	cmpl	$0, -108(%rbp)
	setne	%al
.LBB828_8:
	testb	%al, %al
	je	.LBB828_9
# BB#154:
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	leaq	-120(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*%r14
	leaq	-128(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movl	(%rsi), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -136(%rbp)
	movl	4(%rsi), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -132(%rbp)
	je	.LBB828_155
# BB#162:
	orl	%ecx, -136(%rbp)
.LBB828_155:
	movl	$3, %edx
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-144(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_157
# BB#156:
	testl	%ebx, %ebx
	movl	$1, -152(%rbp)
	je	.LBB828_157
# BB#163:
	movl	$1, -148(%rbp)
.LBB828_157:
	movl	-136(%rbp), %eax
	xorl	-152(%rbp), %eax
	movl	%eax, -160(%rbp)
	movl	-132(%rbp), %eax
	orl	-148(%rbp), %eax
	movl	%eax, -156(%rbp)
	je	.LBB828_158
# BB#164:
	orl	%eax, -160(%rbp)
.LBB828_158:
	movq	%rdi, %r14
	leaq	-168(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-156(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-160(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_159
# BB#165:
	movl	$1, -168(%rbp)
	jmp	.LBB828_160
.LBB828_9:
	movq	%rdi, %r14
	leaq	-176(%rbp), %rcx
	leaq	-112(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -176(%rbp)
	andl	$1, -172(%rbp)
	jmp	.LBB828_10
.LBB828_159:
	testl	%eax, %eax
	je	.LBB828_160
# BB#166:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -168(%rbp)
.LBB828_160:
	movl	-112(%rbp), %eax
	orl	-168(%rbp), %eax
	movl	%eax, -176(%rbp)
	movl	-108(%rbp), %eax
	orl	-164(%rbp), %eax
	movl	%eax, -172(%rbp)
	je	.LBB828_10
# BB#161:
	orl	%eax, -176(%rbp)
	movl	-108(%rbp), %eax
	notl	%eax
	andl	-112(%rbp), %eax
	notl	%eax
	andl	-172(%rbp), %eax
	movl	-164(%rbp), %ecx
	notl	%ecx
	andl	-168(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -172(%rbp)
.LBB828_10:
	movl	-176(%rbp), %esi
	movl	-172(%rbp), %edi
	notl	%edi
	leaq	3616(%r12), %rbx
	movl	$8, %edx
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %r13
	testl	%edi, %esi
	je	.LBB828_11
# BB#167:
	movl	$3, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-184(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r13, %r9
.LBB828_201:
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	3560(%r12), %rcx
	addq	$3528, %r12             # imm = 0xDC8
	xorl	%r9d, %r9d
	movq	%r12, %rdx
	movq	%rax, %r8
	jmp	.LBB828_148
.LBB828_11:
	movq	%rbx, -440(%rbp)        # 8-byte Spill
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%r13), %eax
	movl	%eax, %ecx
	notl	%ecx
	andb	(%r13), %cl
	je	.LBB828_12
# BB#168:
	movl	$1, -72(%rbp)
	movq	%r14, %r13
	jmp	.LBB828_13
.LBB828_12:
	testl	%eax, %eax
	movq	%r14, %r13
	je	.LBB828_13
# BB#169:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -72(%rbp)
.LBB828_13:
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	andl	$1, %ecx
	movl	%ecx, -60(%rbp)
	movl	-72(%rbp), %ecx
	notl	%ecx
	orl	%eax, %ecx
	andl	$1, %ecx
	movl	%ecx, -64(%rbp)
	movl	-60(%rbp), %eax
	notl	%eax
	testl	%eax, %ecx
	je	.LBB828_14
# BB#170:
	movq	%r12, %rdx
	leaq	3560(%rdx), %rcx
	addq	$3528, %rdx             # imm = 0xDC8
	leaq	ng23(%rip), %r8
	xorl	%r9d, %r9d
	jmp	.LBB828_148
.LBB828_14:
	movl	$8, %edx
	movq	-440(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rbx
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	4(%rbx), %eax
	movl	(%rbx), %ecx
	orl	%eax, %ecx
	cmpl	$255, %ecx
	jne	.LBB828_17
# BB#15:
	testl	%eax, %eax
	movl	$1, -64(%rbp)
	je	.LBB828_17
# BB#16:
	movl	$1, -60(%rbp)
.LBB828_17:
	movl	-60(%rbp), %eax
	notl	%eax
	testl	-64(%rbp), %eax
	je	.LBB828_18
# BB#172:
	movq	%r12, %rdx
	leaq	3560(%rdx), %rcx
	addq	$3528, %rdx             # imm = 0xDC8
	leaq	ng24(%rip), %r8
	xorl	%r9d, %r9d
.LBB828_148:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	addq	$520, %rsp              # imm = 0x208
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB828_18:
	movl	$3, %edx
	movq	%r13, %rcx
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rsi
	movq	%rsi, %r14
	leaq	-72(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rax, %rsi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng24(%rip), %ecx
	movl	ng24+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_20
# BB#19:
	testl	%edi, %edi
	movl	$1, -80(%rbp)
	je	.LBB828_20
# BB#173:
	movl	$1, -76(%rbp)
.LBB828_20:
	movl	(%rbx), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%rbx), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB828_21
# BB#174:
	orl	%eax, -88(%rbp)
.LBB828_21:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB828_22
# BB#175:
	movl	$1, -96(%rbp)
	jmp	.LBB828_23
.LBB828_22:
	testl	%eax, %eax
	je	.LBB828_23
# BB#176:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB828_23:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB828_25
# BB#24:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB828_25:
	testb	%al, %al
	je	.LBB828_26
# BB#177:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-104(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-112(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng23(%rip), %ecx
	movl	ng23+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_179
# BB#178:
	testl	%edi, %edi
	movl	$1, -120(%rbp)
	je	.LBB828_179
# BB#184:
	movl	$1, -116(%rbp)
.LBB828_179:
	movl	(%rbx), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%rbx), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB828_180
# BB#185:
	orl	%eax, -128(%rbp)
.LBB828_180:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_181
# BB#186:
	movl	$1, -136(%rbp)
	jmp	.LBB828_182
.LBB828_26:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB828_27
.LBB828_181:
	testl	%eax, %eax
	je	.LBB828_182
# BB#187:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB828_182:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB828_27
# BB#183:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB828_27:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_28
# BB#188:
	movl	$1, -152(%rbp)
	jmp	.LBB828_29
.LBB828_28:
	testl	%eax, %eax
	je	.LBB828_29
# BB#189:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB828_29:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB828_31
# BB#30:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB828_31:
	testb	%al, %al
	je	.LBB828_32
# BB#190:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	movl	$1, -208(%rbp)
	movl	$2, -204(%rbp)
	movl	$0, -200(%rbp)
	leaq	-208(%rbp), %rcx
	movq	%rcx, 80(%rsp)
	leaq	ng33(%rip), %rcx
	movq	%rcx, 56(%rsp)
	leaq	ng32(%rip), %rcx
	movq	%rcx, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	movq	%r15, %r12
	leaq	-176(%rbp), %rbx
	movl	$1, %edx
	movl	$2, %r8d
	movq	%rbx, %rcx
	movq	%rax, %r9
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%rbx, 48(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rdi
	leaq	-168(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-160(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rsi, %r9
	callq	*%rbx
	movq	%rbx, %r15
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%r14, %rbx
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rbx
	movl	$1, -240(%rbp)
	movl	$2, -236(%rbp)
	movl	$0, -232(%rbp)
	leaq	-240(%rbp), %rcx
	movq	%rcx, 80(%rsp)
	leaq	ng33(%rip), %rcx
	movq	%rcx, 56(%rsp)
	leaq	ng32(%rip), %rcx
	movq	%rcx, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-224(%rbp), %rbx
	movl	$1, %edx
	movl	$2, %r8d
	movq	%rbx, %rcx
	movq	%rax, %r9
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%rbx, 48(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-216(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-184(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r15
	movq	%rax, %rbx
	leaq	-248(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_192
# BB#191:
	testl	%edi, %edi
	movl	$1, -248(%rbp)
	je	.LBB828_192
# BB#196:
	movl	$1, -244(%rbp)
.LBB828_192:
	leaq	-256(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-244(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-248(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_193
# BB#197:
	movl	$1, -256(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	%r12, %r15
	jmp	.LBB828_194
.LBB828_32:
	leaq	-264(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -264(%rbp)
	andl	$1, -260(%rbp)
	jmp	.LBB828_33
.LBB828_193:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	%r12, %r15
	je	.LBB828_194
# BB#198:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -256(%rbp)
.LBB828_194:
	movl	-152(%rbp), %eax
	andl	-256(%rbp), %eax
	movl	%eax, -264(%rbp)
	movl	-148(%rbp), %eax
	orl	-252(%rbp), %eax
	movl	%eax, -260(%rbp)
	movq	-448(%rbp), %r12        # 8-byte Reload
	je	.LBB828_33
# BB#195:
	orl	%eax, -264(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-260(%rbp), %ecx
	movl	-256(%rbp), %eax
	movl	-252(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -260(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-264(%rbp), %ecx
	movl	-256(%rbp), %eax
	movl	-252(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -264(%rbp)
.LBB828_33:
	movl	-260(%rbp), %eax
	notl	%eax
	testl	-264(%rbp), %eax
	je	.LBB828_34
# BB#199:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	movl	$1, -304(%rbp)
	movl	$2, -300(%rbp)
	movl	$0, -296(%rbp)
	leaq	-304(%rbp), %rcx
	movq	%rcx, 80(%rsp)
	leaq	ng33(%rip), %rcx
	movq	%rcx, 56(%rsp)
	leaq	ng32(%rip), %rcx
	movq	%rcx, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-288(%rbp), %rdi
	movl	$1, %edx
	movl	$2, %r8d
	movq	%rdi, %rcx
	movq	%rax, %r9
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	%rdi, 48(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$2, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$2, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rcx
	jmp	.LBB828_200
.LBB828_34:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-72(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_36
# BB#35:
	testl	%edi, %edi
	movl	$1, -80(%rbp)
	je	.LBB828_36
# BB#203:
	movl	$1, -76(%rbp)
.LBB828_36:
	movl	(%rbx), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%rbx), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB828_37
# BB#204:
	orl	%eax, -88(%rbp)
.LBB828_37:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_38
# BB#205:
	movl	$1, -96(%rbp)
	jmp	.LBB828_39
.LBB828_38:
	testl	%eax, %eax
	je	.LBB828_39
# BB#206:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB828_39:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB828_41
# BB#40:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB828_41:
	testb	%al, %al
	je	.LBB828_42
# BB#207:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-104(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-112(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_209
# BB#208:
	testl	%edi, %edi
	movl	$1, -120(%rbp)
	je	.LBB828_209
# BB#214:
	movl	$1, -116(%rbp)
.LBB828_209:
	movl	(%rbx), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%rbx), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB828_210
# BB#215:
	orl	%eax, -128(%rbp)
.LBB828_210:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_211
# BB#216:
	movl	$1, -136(%rbp)
	jmp	.LBB828_212
.LBB828_42:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB828_43
.LBB828_211:
	testl	%eax, %eax
	je	.LBB828_212
# BB#217:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB828_212:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB828_43
# BB#213:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB828_43:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_44
# BB#218:
	movl	$1, -152(%rbp)
	jmp	.LBB828_45
.LBB828_44:
	testl	%eax, %eax
	je	.LBB828_45
# BB#219:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB828_45:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB828_47
# BB#46:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB828_47:
	testb	%al, %al
	je	.LBB828_48
# BB#220:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %r12
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-176(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rdi
	callq	*%rdi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-184(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rbx, 64(%rsp)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-168(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rsi
	leaq	-160(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r12, %r9
	callq	*%rsi
	movq	%rsi, %r12
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %r15
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-248(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-256(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rbx, 64(%rsp)
	leaq	ng24(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-224(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-216(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r15, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-264(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_222
# BB#221:
	testl	%edi, %edi
	movl	$1, -264(%rbp)
	je	.LBB828_222
# BB#226:
	movl	$1, -260(%rbp)
.LBB828_222:
	leaq	-272(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-260(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-264(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_223
# BB#227:
	movl	$1, -272(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB828_224
.LBB828_48:
	leaq	-280(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -280(%rbp)
	andl	$1, -276(%rbp)
	jmp	.LBB828_49
.LBB828_223:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %r14
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB828_224
# BB#228:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -272(%rbp)
.LBB828_224:
	movl	-152(%rbp), %eax
	andl	-272(%rbp), %eax
	movl	%eax, -280(%rbp)
	movl	-148(%rbp), %eax
	orl	-268(%rbp), %eax
	movl	%eax, -276(%rbp)
	movq	-448(%rbp), %r12        # 8-byte Reload
	je	.LBB828_49
# BB#225:
	orl	%eax, -280(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-276(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -276(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-280(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -280(%rbp)
.LBB828_49:
	movl	-276(%rbp), %eax
	notl	%eax
	testl	-280(%rbp), %eax
	je	.LBB828_50
# BB#229:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-320(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rdi
	callq	*%rdi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-328(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rdi
	movq	%rbx, 64(%rsp)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-312(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-288(%rbp), %rcx
.LBB828_200:
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rsi, %r9
	jmp	.LBB828_201
.LBB828_50:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rbx
	callq	*%rbx
	movq	%r14, %rsi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rsi
	movq	%rsi, %rdi
	leaq	-72(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%rbx
	movq	%rax, %rsi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_52
# BB#51:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB828_52
# BB#230:
	movl	$1, -76(%rbp)
.LBB828_52:
	movl	(%r14), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%r14), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB828_53
# BB#231:
	orl	%eax, -88(%rbp)
.LBB828_53:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_54
# BB#232:
	movl	$1, -96(%rbp)
	jmp	.LBB828_55
.LBB828_54:
	testl	%eax, %eax
	je	.LBB828_55
# BB#233:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB828_55:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB828_57
# BB#56:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB828_57:
	testb	%al, %al
	je	.LBB828_58
# BB#234:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-104(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-112(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rsi
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_236
# BB#235:
	testl	%ebx, %ebx
	movl	$1, -120(%rbp)
	je	.LBB828_236
# BB#241:
	movl	$1, -116(%rbp)
.LBB828_236:
	movl	(%r14), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%r14), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB828_237
# BB#242:
	orl	%eax, -128(%rbp)
.LBB828_237:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_238
# BB#243:
	movl	$1, -136(%rbp)
	jmp	.LBB828_239
.LBB828_58:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB828_59
.LBB828_238:
	testl	%eax, %eax
	je	.LBB828_239
# BB#244:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB828_239:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB828_59
# BB#240:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB828_59:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_60
# BB#245:
	movl	$1, -152(%rbp)
	jmp	.LBB828_61
.LBB828_60:
	testl	%eax, %eax
	je	.LBB828_61
# BB#246:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB828_61:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB828_63
# BB#62:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB828_63:
	testb	%al, %al
	je	.LBB828_64
# BB#247:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-176(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-184(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-168(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-160(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-248(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-256(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-224(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-216(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-264(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_249
# BB#248:
	testl	%edi, %edi
	movl	$1, -264(%rbp)
	je	.LBB828_249
# BB#253:
	movl	$1, -260(%rbp)
.LBB828_249:
	leaq	-272(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-260(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-264(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_250
# BB#254:
	movl	$1, -272(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB828_251
.LBB828_64:
	leaq	-280(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -280(%rbp)
	andl	$1, -276(%rbp)
	jmp	.LBB828_65
.LBB828_250:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB828_251
# BB#255:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -272(%rbp)
.LBB828_251:
	movl	-152(%rbp), %eax
	andl	-272(%rbp), %eax
	movl	%eax, -280(%rbp)
	movl	-148(%rbp), %eax
	orl	-268(%rbp), %eax
	movl	%eax, -276(%rbp)
	movq	-448(%rbp), %r12        # 8-byte Reload
	je	.LBB828_65
# BB#252:
	orl	%eax, -280(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-276(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -276(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-280(%rbp), %ecx
	movl	-272(%rbp), %eax
	movl	-268(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -280(%rbp)
.LBB828_65:
	movl	-276(%rbp), %eax
	notl	%eax
	testl	-280(%rbp), %eax
	je	.LBB828_66
# BB#256:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-320(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, %rbx
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-328(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rbx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-312(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-288(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	jmp	.LBB828_201
.LBB828_66:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_68
# BB#67:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB828_68
# BB#257:
	movl	$1, -68(%rbp)
.LBB828_68:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_69
# BB#258:
	movl	$1, -80(%rbp)
	jmp	.LBB828_70
.LBB828_69:
	testl	%eax, %eax
	je	.LBB828_70
# BB#259:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB828_70:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	je	.LBB828_72
# BB#71:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB828_72:
	testb	%al, %al
	je	.LBB828_73
# BB#260:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_262
# BB#261:
	testl	%ebx, %ebx
	movl	$1, -96(%rbp)
	je	.LBB828_262
# BB#266:
	movl	$1, -92(%rbp)
.LBB828_262:
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-92(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-96(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_263
# BB#267:
	movl	$1, -104(%rbp)
	jmp	.LBB828_264
.LBB828_73:
	leaq	-112(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -112(%rbp)
	andl	$1, -108(%rbp)
	jmp	.LBB828_74
.LBB828_263:
	testl	%eax, %eax
	je	.LBB828_264
# BB#268:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -104(%rbp)
.LBB828_264:
	movl	-80(%rbp), %eax
	orl	-104(%rbp), %eax
	movl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	orl	-100(%rbp), %eax
	movl	%eax, -108(%rbp)
	je	.LBB828_74
# BB#265:
	orl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	notl	%eax
	andl	-80(%rbp), %eax
	notl	%eax
	andl	-108(%rbp), %eax
	movl	-100(%rbp), %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -108(%rbp)
.LBB828_74:
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-108(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-112(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_75
# BB#269:
	movl	$1, -120(%rbp)
	jmp	.LBB828_76
.LBB828_75:
	testl	%eax, %eax
	je	.LBB828_76
# BB#270:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -120(%rbp)
.LBB828_76:
	movq	%r12, -448(%rbp)        # 8-byte Spill
	cmpl	$0, -120(%rbp)
	movb	$1, %al
	jne	.LBB828_78
# BB#77:
	cmpl	$0, -116(%rbp)
	setne	%al
.LBB828_78:
	testb	%al, %al
	je	.LBB828_79
# BB#271:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-144(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-136(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-128(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-168(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 48(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-160(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-176(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_273
# BB#272:
	testl	%edi, %edi
	movl	$1, -176(%rbp)
	je	.LBB828_273
# BB#277:
	movl	$1, -172(%rbp)
.LBB828_273:
	leaq	-184(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_274
# BB#278:
	movl	$1, -184(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB828_275
.LBB828_79:
	leaq	-216(%rbp), %rcx
	leaq	-120(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -216(%rbp)
	andl	$1, -212(%rbp)
	jmp	.LBB828_80
.LBB828_274:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB828_275
# BB#279:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB828_275:
	movl	-120(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -216(%rbp)
	movl	-116(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -212(%rbp)
	je	.LBB828_80
# BB#276:
	orl	%eax, -216(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-212(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -212(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -216(%rbp)
.LBB828_80:
	leaq	-224(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_81
# BB#280:
	movl	$1, -224(%rbp)
	jmp	.LBB828_82
.LBB828_81:
	testl	%eax, %eax
	je	.LBB828_82
# BB#281:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -224(%rbp)
.LBB828_82:
	cmpl	$0, -224(%rbp)
	movb	$1, %al
	jne	.LBB828_84
# BB#83:
	cmpl	$0, -220(%rbp)
	setne	%al
.LBB828_84:
	testb	%al, %al
	je	.LBB828_85
# BB#282:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-264(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-256(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-248(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-288(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-312(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_284
# BB#283:
	testl	%edi, %edi
	movl	$1, -312(%rbp)
	je	.LBB828_284
# BB#288:
	movl	$1, -308(%rbp)
.LBB828_284:
	leaq	-320(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-308(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-312(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_285
# BB#289:
	movl	$1, -320(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	jmp	.LBB828_286
.LBB828_85:
	leaq	-328(%rbp), %rcx
	leaq	-224(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -328(%rbp)
	andl	$1, -324(%rbp)
	jmp	.LBB828_86
.LBB828_285:
	testl	%eax, %eax
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB828_286
# BB#290:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -320(%rbp)
.LBB828_286:
	movl	-224(%rbp), %eax
	andl	-320(%rbp), %eax
	movl	%eax, -328(%rbp)
	movl	-220(%rbp), %eax
	orl	-316(%rbp), %eax
	movl	%eax, -324(%rbp)
	je	.LBB828_86
# BB#287:
	orl	%eax, -328(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-324(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -324(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -328(%rbp)
.LBB828_86:
	leaq	-336(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-324(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_87
# BB#291:
	movl	$1, -336(%rbp)
	jmp	.LBB828_88
.LBB828_87:
	testl	%eax, %eax
	je	.LBB828_88
# BB#292:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -336(%rbp)
.LBB828_88:
	cmpl	$0, -336(%rbp)
	movb	$1, %al
	jne	.LBB828_90
# BB#89:
	cmpl	$0, -332(%rbp)
	setne	%al
.LBB828_90:
	testb	%al, %al
	je	.LBB828_91
# BB#293:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-360(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %rsi
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-352(%rbp), %r12
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%r12, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-344(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%rbx
	movq	%rbx, %r12
	movq	%r15, %rcx
	movq	%rax, %r15
	movl	$8, %edx
	callq	*%rdi
	movq	%rax, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-384(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%rsi
	movq	%rax, 64(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-368(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%r14, %r9
	callq	*%r12
	movq	%rax, %rbx
	leaq	-392(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%r15), %ecx
	movl	4(%r15), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_295
# BB#294:
	testl	%edi, %edi
	movl	$1, -392(%rbp)
	je	.LBB828_295
# BB#299:
	movl	$1, -388(%rbp)
.LBB828_295:
	leaq	-400(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-388(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-392(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_296
# BB#300:
	movl	$1, -400(%rbp)
	jmp	.LBB828_297
.LBB828_91:
	leaq	-408(%rbp), %rcx
	leaq	-336(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -408(%rbp)
	andl	$1, -404(%rbp)
	jmp	.LBB828_92
.LBB828_296:
	testl	%eax, %eax
	je	.LBB828_297
# BB#301:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -400(%rbp)
.LBB828_297:
	movl	-336(%rbp), %eax
	andl	-400(%rbp), %eax
	movl	%eax, -408(%rbp)
	movl	-332(%rbp), %eax
	orl	-396(%rbp), %eax
	movl	%eax, -404(%rbp)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %rdi
	movq	-440(%rbp), %r15        # 8-byte Reload
	je	.LBB828_92
# BB#298:
	orl	%eax, -408(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-404(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -404(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-408(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -408(%rbp)
.LBB828_92:
	movl	-404(%rbp), %eax
	notl	%eax
	testl	-408(%rbp), %eax
	je	.LBB828_93
# BB#302:
	movl	$8, %edx
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-432(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, 64(%rsp)
	leaq	ng23(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-424(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-416(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	jmp	.LBB828_350
.LBB828_93:
	movq	%r15, %r12
	movq	%rdi, %r14
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB828_95
# BB#94:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB828_95
# BB#303:
	movl	$1, -68(%rbp)
.LBB828_95:
	leaq	-80(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_96
# BB#304:
	movl	$1, -80(%rbp)
	jmp	.LBB828_97
.LBB828_96:
	testl	%eax, %eax
	je	.LBB828_97
# BB#305:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB828_97:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	je	.LBB828_99
# BB#98:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB828_99:
	testb	%al, %al
	je	.LBB828_100
# BB#306:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-96(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_308
# BB#307:
	testl	%eax, %eax
	movl	$1, -96(%rbp)
	je	.LBB828_308
# BB#312:
	movl	$1, -92(%rbp)
.LBB828_308:
	leaq	-104(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-92(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-96(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_309
# BB#313:
	movl	$1, -104(%rbp)
	jmp	.LBB828_310
.LBB828_100:
	leaq	-112(%rbp), %rax
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -112(%rbp)
	andl	$1, -108(%rbp)
	jmp	.LBB828_101
.LBB828_309:
	testl	%eax, %eax
	je	.LBB828_310
# BB#314:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -104(%rbp)
.LBB828_310:
	movl	-80(%rbp), %eax
	orl	-104(%rbp), %eax
	movl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	orl	-100(%rbp), %eax
	movl	%eax, -108(%rbp)
	je	.LBB828_101
# BB#311:
	orl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	notl	%eax
	andl	-80(%rbp), %eax
	notl	%eax
	andl	-108(%rbp), %eax
	movl	-100(%rbp), %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -108(%rbp)
.LBB828_101:
	leaq	-120(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-108(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-112(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_102
# BB#315:
	movl	$1, -120(%rbp)
	jmp	.LBB828_103
.LBB828_102:
	testl	%eax, %eax
	je	.LBB828_103
# BB#316:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -120(%rbp)
.LBB828_103:
	cmpl	$0, -120(%rbp)
	movb	$1, %al
	jne	.LBB828_105
# BB#104:
	cmpl	$0, -116(%rbp)
	setne	%al
.LBB828_105:
	testb	%al, %al
	je	.LBB828_106
# BB#317:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-144(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-136(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-128(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-168(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-160(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-176(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_319
# BB#318:
	testl	%eax, %eax
	movl	$1, -176(%rbp)
	je	.LBB828_319
# BB#323:
	movl	$1, -172(%rbp)
.LBB828_319:
	leaq	-184(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_320
# BB#324:
	movl	$1, -184(%rbp)
	jmp	.LBB828_321
.LBB828_106:
	leaq	-216(%rbp), %rax
	leaq	-120(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -216(%rbp)
	andl	$1, -212(%rbp)
	jmp	.LBB828_107
.LBB828_320:
	testl	%eax, %eax
	je	.LBB828_321
# BB#325:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB828_321:
	movl	-120(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -216(%rbp)
	movl	-116(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -212(%rbp)
	je	.LBB828_107
# BB#322:
	orl	%eax, -216(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-212(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -212(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -216(%rbp)
.LBB828_107:
	leaq	-224(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_108
# BB#326:
	movl	$1, -224(%rbp)
	jmp	.LBB828_109
.LBB828_108:
	testl	%eax, %eax
	je	.LBB828_109
# BB#327:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -224(%rbp)
.LBB828_109:
	cmpl	$0, -224(%rbp)
	movb	$1, %al
	jne	.LBB828_111
# BB#110:
	cmpl	$0, -220(%rbp)
	setne	%al
.LBB828_111:
	testb	%al, %al
	je	.LBB828_112
# BB#328:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-264(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rdi, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-256(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-248(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-288(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rdi, 64(%rsp)
	movq	%rax, 48(%rsp)
	leaq	ng24(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-312(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_330
# BB#329:
	testl	%eax, %eax
	movl	$1, -312(%rbp)
	je	.LBB828_330
# BB#334:
	movl	$1, -308(%rbp)
.LBB828_330:
	leaq	-320(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-308(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-312(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_331
# BB#335:
	movl	$1, -320(%rbp)
	jmp	.LBB828_332
.LBB828_112:
	leaq	-328(%rbp), %rax
	leaq	-224(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -328(%rbp)
	andl	$1, -324(%rbp)
	jmp	.LBB828_113
.LBB828_331:
	testl	%eax, %eax
	je	.LBB828_332
# BB#336:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -320(%rbp)
.LBB828_332:
	movl	-224(%rbp), %eax
	andl	-320(%rbp), %eax
	movl	%eax, -328(%rbp)
	movl	-220(%rbp), %eax
	orl	-316(%rbp), %eax
	movl	%eax, -324(%rbp)
	je	.LBB828_113
# BB#333:
	orl	%eax, -328(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-324(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -324(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -328(%rbp)
.LBB828_113:
	leaq	-336(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-324(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_114
# BB#337:
	movl	$1, -336(%rbp)
	jmp	.LBB828_115
.LBB828_114:
	testl	%eax, %eax
	je	.LBB828_115
# BB#338:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -336(%rbp)
.LBB828_115:
	cmpl	$0, -336(%rbp)
	movb	$1, %al
	jne	.LBB828_117
# BB#116:
	cmpl	$0, -332(%rbp)
	setne	%al
.LBB828_117:
	testb	%al, %al
	je	.LBB828_118
# BB#339:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-360(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rdi
	leaq	-352(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-344(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*%rbx
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-384(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %r15
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r15, %rcx
	callq	*%rdi
	movq	%r15, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-368(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*%rbx
	movq	%rax, %rdi
	leaq	-392(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_341
# BB#340:
	testl	%eax, %eax
	movl	$1, -392(%rbp)
	je	.LBB828_341
# BB#345:
	movl	$1, -388(%rbp)
.LBB828_341:
	leaq	-400(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-388(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-392(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_342
# BB#346:
	movl	$1, -400(%rbp)
	jmp	.LBB828_343
.LBB828_118:
	leaq	-408(%rbp), %rax
	leaq	-336(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -408(%rbp)
	andl	$1, -404(%rbp)
	jmp	.LBB828_119
.LBB828_342:
	testl	%eax, %eax
	je	.LBB828_343
# BB#347:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -400(%rbp)
.LBB828_343:
	movl	-336(%rbp), %eax
	andl	-400(%rbp), %eax
	movl	%eax, -408(%rbp)
	movl	-332(%rbp), %eax
	orl	-396(%rbp), %eax
	movl	%eax, -404(%rbp)
	je	.LBB828_119
# BB#344:
	orl	%eax, -408(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-404(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -404(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-408(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -408(%rbp)
.LBB828_119:
	movl	-404(%rbp), %eax
	notl	%eax
	testl	-408(%rbp), %eax
	je	.LBB828_120
# BB#348:
	movl	$8, %edx
	movq	%r12, %rcx
	movq	%r14, %rdi
	callq	*%rdi
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-432(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	jmp	.LBB828_349
.LBB828_120:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-72(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_122
# BB#121:
	testl	%eax, %eax
	movl	$1, -72(%rbp)
	je	.LBB828_122
# BB#351:
	movl	$1, -68(%rbp)
.LBB828_122:
	leaq	-80(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_123
# BB#352:
	movl	$1, -80(%rbp)
	jmp	.LBB828_124
.LBB828_123:
	testl	%eax, %eax
	je	.LBB828_124
# BB#353:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB828_124:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	je	.LBB828_126
# BB#125:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB828_126:
	testb	%al, %al
	je	.LBB828_127
# BB#354:
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-88(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rsi
	leaq	-96(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_356
# BB#355:
	testl	%eax, %eax
	movl	$1, -96(%rbp)
	je	.LBB828_356
# BB#360:
	movl	$1, -92(%rbp)
.LBB828_356:
	leaq	-104(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-92(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-96(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_357
# BB#361:
	movl	$1, -104(%rbp)
	jmp	.LBB828_358
.LBB828_127:
	leaq	-112(%rbp), %rax
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -112(%rbp)
	andl	$1, -108(%rbp)
	jmp	.LBB828_128
.LBB828_357:
	testl	%eax, %eax
	je	.LBB828_358
# BB#362:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -104(%rbp)
.LBB828_358:
	movl	-80(%rbp), %eax
	orl	-104(%rbp), %eax
	movl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	orl	-100(%rbp), %eax
	movl	%eax, -108(%rbp)
	je	.LBB828_128
# BB#359:
	orl	%eax, -112(%rbp)
	movl	-76(%rbp), %eax
	notl	%eax
	andl	-80(%rbp), %eax
	notl	%eax
	andl	-108(%rbp), %eax
	movl	-100(%rbp), %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -108(%rbp)
.LBB828_128:
	leaq	-120(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-108(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-112(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_129
# BB#363:
	movl	$1, -120(%rbp)
	jmp	.LBB828_130
.LBB828_129:
	testl	%eax, %eax
	je	.LBB828_130
# BB#364:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -120(%rbp)
.LBB828_130:
	cmpl	$0, -120(%rbp)
	movb	$1, %al
	jne	.LBB828_132
# BB#131:
	cmpl	$0, -116(%rbp)
	setne	%al
.LBB828_132:
	testb	%al, %al
	je	.LBB828_133
# BB#365:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-144(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-136(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-128(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-168(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-160(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-176(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_367
# BB#366:
	testl	%eax, %eax
	movl	$1, -176(%rbp)
	je	.LBB828_367
# BB#371:
	movl	$1, -172(%rbp)
.LBB828_367:
	leaq	-184(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_368
# BB#372:
	movl	$1, -184(%rbp)
	jmp	.LBB828_369
.LBB828_133:
	leaq	-216(%rbp), %rax
	leaq	-120(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -216(%rbp)
	andl	$1, -212(%rbp)
	jmp	.LBB828_134
.LBB828_368:
	testl	%eax, %eax
	je	.LBB828_369
# BB#373:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB828_369:
	movl	-120(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -216(%rbp)
	movl	-116(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -212(%rbp)
	je	.LBB828_134
# BB#370:
	orl	%eax, -216(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-212(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -212(%rbp)
	movl	-120(%rbp), %eax
	movl	-116(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -216(%rbp)
.LBB828_134:
	leaq	-224(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-216(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_135
# BB#374:
	movl	$1, -224(%rbp)
	jmp	.LBB828_136
.LBB828_135:
	testl	%eax, %eax
	je	.LBB828_136
# BB#375:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -224(%rbp)
.LBB828_136:
	cmpl	$0, -224(%rbp)
	movb	$1, %al
	jne	.LBB828_138
# BB#137:
	cmpl	$0, -220(%rbp)
	setne	%al
.LBB828_138:
	testb	%al, %al
	je	.LBB828_139
# BB#376:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-264(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rdi
	movq	%rdi, 64(%rsp)
	movq	%rdi, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rbx
	leaq	-256(%rbp), %r14
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r14, %rcx
	callq	*%rbx
	movq	%r14, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-248(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rcx
	movq	%rcx, %r14
	leaq	-288(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	movq	%rdi, 64(%rsp)
	leaq	ng24(%rip), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-280(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*%rbx
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-272(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	%rax, %rdi
	leaq	-312(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_378
# BB#377:
	testl	%eax, %eax
	movl	$1, -312(%rbp)
	je	.LBB828_378
# BB#382:
	movl	$1, -308(%rbp)
.LBB828_378:
	leaq	-320(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-308(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-312(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_379
# BB#383:
	movl	$1, -320(%rbp)
	jmp	.LBB828_380
.LBB828_139:
	leaq	-328(%rbp), %rax
	leaq	-224(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -328(%rbp)
	andl	$1, -324(%rbp)
	jmp	.LBB828_140
.LBB828_379:
	testl	%eax, %eax
	je	.LBB828_380
# BB#384:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -320(%rbp)
.LBB828_380:
	movl	-224(%rbp), %eax
	andl	-320(%rbp), %eax
	movl	%eax, -328(%rbp)
	movl	-220(%rbp), %eax
	orl	-316(%rbp), %eax
	movl	%eax, -324(%rbp)
	je	.LBB828_140
# BB#381:
	orl	%eax, -328(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-324(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -324(%rbp)
	movl	-224(%rbp), %eax
	movl	-220(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	movl	-320(%rbp), %eax
	movl	-316(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -328(%rbp)
.LBB828_140:
	leaq	-336(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-324(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-328(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_141
# BB#385:
	movl	$1, -336(%rbp)
	jmp	.LBB828_142
.LBB828_141:
	testl	%eax, %eax
	je	.LBB828_142
# BB#386:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -336(%rbp)
.LBB828_142:
	cmpl	$0, -336(%rbp)
	movb	$1, %al
	jne	.LBB828_144
# BB#143:
	cmpl	$0, -332(%rbp)
	setne	%al
.LBB828_144:
	testb	%al, %al
	je	.LBB828_145
# BB#387:
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-360(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %rax
	movq	%rax, %r15
	callq	*%r15
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	movq	__imp__iki_vlog_concat(%rip), %rdi
	leaq	-352(%rbp), %rbx
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movq	%rbx, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	movq	__imp__iki_vlog_get_bit_select_value_p_input(%rip), %rbx
	leaq	-344(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	%rsi, %r9
	callq	*%rbx
	movq	%rax, %rsi
	movl	$8, %edx
	movq	%r12, %rcx
	callq	*%r14
	movq	%rax, -456(%rbp)        # 8-byte Spill
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%r14
	leaq	-384(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r15
	leaq	ng24(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-376(%rbp), %r15
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%r15, %rcx
	callq	*%rdi
	movq	%r15, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-368(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
	movq	-456(%rbp), %r9         # 8-byte Reload
	callq	*%rbx
	movq	%rax, %rdi
	leaq	-392(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rsi), %ecx
	movl	4(%rsi), %eax
	xorl	(%rdi), %ecx
	movl	4(%rdi), %edx
	movl	%eax, %ebx
	xorl	%edx, %ebx
	orl	%ecx, %ebx
	orl	%edx, %eax
	movl	%eax, %ecx
	notl	%ecx
	testl	%ecx, %ebx
	jne	.LBB828_389
# BB#388:
	testl	%eax, %eax
	movl	$1, -392(%rbp)
	je	.LBB828_389
# BB#393:
	movl	$1, -388(%rbp)
.LBB828_389:
	leaq	-400(%rbp), %rax
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	-388(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-392(%rbp), %ecx
	testb	$1, %cl
	je	.LBB828_390
# BB#394:
	movl	$1, -400(%rbp)
	jmp	.LBB828_391
.LBB828_145:
	leaq	-408(%rbp), %rax
	leaq	-336(%rbp), %rdx
	movl	$8, %r8d
	movq	%rax, %rcx
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -408(%rbp)
	andl	$1, -404(%rbp)
	jmp	.LBB828_146
.LBB828_390:
	testl	%eax, %eax
	je	.LBB828_391
# BB#395:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -400(%rbp)
.LBB828_391:
	movl	-336(%rbp), %eax
	andl	-400(%rbp), %eax
	movl	%eax, -408(%rbp)
	movl	-332(%rbp), %eax
	orl	-396(%rbp), %eax
	movl	%eax, -404(%rbp)
	je	.LBB828_146
# BB#392:
	orl	%eax, -408(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-404(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -404(%rbp)
	movl	-336(%rbp), %eax
	movl	-332(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-408(%rbp), %ecx
	movl	-400(%rbp), %eax
	movl	-396(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -408(%rbp)
.LBB828_146:
	movl	-404(%rbp), %eax
	notl	%eax
	testl	-408(%rbp), %eax
	je	.LBB828_147
# BB#396:
	movl	$8, %edx
	movq	%r12, %rcx
	movq	%r14, %rdi
	callq	*%rdi
	movq	%rax, %rsi
	movl	$3, %edx
	movq	%r13, %rcx
	callq	*%rdi
	leaq	-432(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	leaq	ng23(%rip), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 32(%rsp)
.LBB828_349:
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-424(%rbp), %rdi
	movl	$3, %edx
	movl	$3, %r8d
	movl	$3, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$3, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$7, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-416(%rbp), %rax
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rax, %rcx
.LBB828_350:
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	movq	-448(%rbp), %rdx        # 8-byte Reload
	leaq	3560(%rdx), %rcx
	addq	$3528, %rdx             # imm = 0xDC8
	xorl	%r9d, %r9d
	movq	%rax, %r8
	jmp	.LBB828_148
.LBB828_147:
	movq	-448(%rbp), %rdx        # 8-byte Reload
	leaq	3560(%rdx), %rax
	addq	$3528, %rdx             # imm = 0xDC8
	leaq	ng42(%rip), %rbx
	xorl	%r9d, %r9d
	movq	%rax, %rcx
	movq	%rbx, %r8
	jmp	.LBB828_148

	.def	 _execute_79964;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79964
	.align	16, 0x90
_execute_79964:                         # @_execute_79964
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	96(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1456(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	320(%rsi), %rcx
	addq	$1432, %rsi             # imm = 0x598
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79965;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79965
	.align	16, 0x90
_execute_79965:                         # @_execute_79965
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	152(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1624(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	376(%rsi), %rcx
	addq	$1600, %rsi             # imm = 0x640
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79966;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79966
	.align	16, 0x90
_execute_79966:                         # @_execute_79966
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	208(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1792(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	432(%rsi), %rcx
	addq	$1768, %rsi             # imm = 0x6E8
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79967;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79967
	.align	16, 0x90
_execute_79967:                         # @_execute_79967
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	leaq	264(%rsi), %rcx
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	1960(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	488(%rsi), %rcx
	addq	$1936, %rsi             # imm = 0x790
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg_no_agg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_79968;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_79968
	.align	16, 0x90
_execute_79968:                         # @_execute_79968
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%rsi
	pushq	%rdi
	subq	$48, %rsp
	movq	%rdx, %rsi
	movq	552(%rsi), %rdx
	leaq	-24(%rbp), %rdi
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_bufGate(%rip)
	leaq	2128(%rsi), %rcx
	movl	$8, %r8d
	movq	%rdi, %rdx
	callq	*__imp__iki_std_memcpy(%rip)
	leaq	40(%rsi), %rcx
	addq	$2104, %rsi             # imm = 0x838
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rsi, %rdx
	callq	*__imp__iki_vlog_schedule_transaction_signal_fast_no_reg(%rip)
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	ret

	.def	 _execute_1517;
	.scl	2;
	.type	32;
	.endef
	.globl	_execute_1517
	.align	16, 0x90
_execute_1517:                          # @_execute_1517
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$376, %rsp              # imm = 0x178
	movq	%rdx, %rsi
	leaq	760(%rsi), %r14
	.align	16, 0x90
.LBB834_1:                              # =>This Inner Loop Header: Depth=1
	movl	$6, %edx
	movq	%rsi, %rcx
	callq	*__imp__iki_vlog_set_threadId_for_unrandom(%rip)
	movq	800(%rsi), %rax
	testq	%rax, %rax
	je	.LBB834_17
# BB#2:                                 #   in Loop: Header=BB834_1 Depth=1
	jmpq	*%rax
.Ltmp2508:                              # Block address taken
.LBB834_3:
	movq	%r14, -264(%rbp)        # 8-byte Spill
	movb	$0, 880(%rsi)
	movq	328(%rsi), %rax
	movq	384(%rsi), %rcx
	movl	(%rax), %edx
	xorl	(%rcx), %edx
	movl	%edx, -64(%rbp)
	movl	4(%rax), %eax
	orl	4(%rcx), %eax
	movl	%eax, -60(%rbp)
	je	.LBB834_4
# BB#18:
	orl	%eax, -64(%rbp)
.LBB834_4:
	movq	440(%rsi), %rcx
	movl	-64(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -72(%rbp)
	movl	-60(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -68(%rbp)
	je	.LBB834_5
# BB#19:
	orl	%eax, -72(%rbp)
.LBB834_5:
	movq	496(%rsi), %rcx
	movl	-72(%rbp), %eax
	xorl	(%rcx), %eax
	movl	%eax, -80(%rbp)
	movl	-68(%rbp), %eax
	orl	4(%rcx), %eax
	movl	%eax, -76(%rbp)
	je	.LBB834_6
# BB#20:
	orl	%eax, -80(%rbp)
.LBB834_6:
	leaq	656(%rsi), %rbx
	leaq	888(%rsi), %rdx
	leaq	-80(%rbp), %r8
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	movq	664(%rsi), %rdi
	leaq	-64(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB834_8
# BB#7:
	testl	%edi, %edi
	movl	$1, -64(%rbp)
	je	.LBB834_8
# BB#21:
	movl	$1, -60(%rbp)
.LBB834_8:
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-60(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-64(%rbp), %ecx
	testb	$1, %cl
	je	.LBB834_9
# BB#22:
	movl	$1, -72(%rbp)
	jmp	.LBB834_10
.LBB834_9:
	testl	%eax, %eax
	je	.LBB834_10
# BB#23:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -72(%rbp)
.LBB834_10:
	cmpl	$0, -72(%rbp)
	movb	$1, %al
	je	.LBB834_12
# BB#11:
	cmpl	$0, -68(%rbp)
	setne	%al
.LBB834_12:
	testb	%al, %al
	je	.LBB834_13
# BB#24:
	movq	8(%rbx), %rdi
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB834_26
# BB#25:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB834_26
# BB#30:
	movl	$1, -76(%rbp)
.LBB834_26:
	leaq	-88(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-76(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-80(%rbp), %ecx
	testb	$1, %cl
	je	.LBB834_27
# BB#31:
	movl	$1, -88(%rbp)
	jmp	.LBB834_28
.LBB834_13:
	leaq	-96(%rbp), %rcx
	leaq	-72(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -96(%rbp)
	andl	$1, -92(%rbp)
	jmp	.LBB834_14
.LBB834_27:
	testl	%eax, %eax
	je	.LBB834_28
# BB#32:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -88(%rbp)
.LBB834_28:
	movl	-72(%rbp), %eax
	orl	-88(%rbp), %eax
	movl	%eax, -96(%rbp)
	movl	-68(%rbp), %eax
	orl	-84(%rbp), %eax
	movl	%eax, -92(%rbp)
	je	.LBB834_14
# BB#29:
	orl	%eax, -96(%rbp)
	movl	-68(%rbp), %eax
	notl	%eax
	andl	-72(%rbp), %eax
	notl	%eax
	andl	-92(%rbp), %eax
	movl	-84(%rbp), %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -92(%rbp)
.LBB834_14:
	movl	-92(%rbp), %eax
	notl	%eax
	testl	-96(%rbp), %eax
	je	.LBB834_15
# BB#33:
	movq	328(%rsi), %rax
	movq	384(%rsi), %rcx
	movq	440(%rsi), %rdx
	movq	496(%rsi), %rbx
	movq	%rax, 80(%rsp)
	movq	%rcx, 64(%rsp)
	movq	%rdx, 48(%rsp)
	movq	%rbx, 32(%rsp)
	movl	$1, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-112(%rbp), %rdi
	movl	$4, %edx
	movl	$4, %r8d
	movl	$4, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	leaq	720(%rsi), %r9
	movq	%rdi, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$4, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$15, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-104(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	600(%rsi), %rcx
	leaq	952(%rsi), %rdx
	xorl	%r9d, %r9d
	movq	%rax, %r8
	jmp	.LBB834_16
.LBB834_15:
	movl	$1, -128(%rbp)
	movl	$15, -124(%rbp)
	movl	$0, -120(%rbp)
	leaq	752(%rsi), %r9
	leaq	-128(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng33(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng30(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	movq	__imp__iki_vlog_get_part_select_value(%rip), %rdi
	leaq	-72(%rbp), %r15
	movl	$1, %edx
	movl	$4, %r8d
	movq	%r15, %rcx
	callq	*%rdi
	movq	%rdi, %r14
	movq	328(%rsi), %rax
	movq	384(%rsi), %rcx
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-80(%rbp), %rdi
	movl	$2, %edx
	movl	$2, %r8d
	movl	$2, %r9d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	leaq	2592(%rsi), %rcx
	movq	%rcx, -288(%rbp)        # 8-byte Spill
	leaq	1240(%rsi), %rdx
	movq	%rdx, -304(%rbp)        # 8-byte Spill
	movl	$3, 32(%rsp)
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rbx
	xorl	%r9d, %r9d
	movq	%r15, %r8
	callq	*%rbx
	movq	%rbx, %r13
	leaq	2648(%rsi), %rcx
	movq	%rcx, -312(%rbp)        # 8-byte Spill
	leaq	1272(%rsi), %rdx
	movq	%rdx, -296(%rbp)        # 8-byte Spill
	movl	$1, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%rcx, %r12
	movq	%rdi, %r8
	callq	*%r13
	leaq	2704(%rsi), %rdx
	movq	%rdx, -272(%rbp)        # 8-byte Spill
	leaq	_subprog_m_8d8d44e_cbb4f06c_36(%rip), %r8
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	leaq	2536(%rsi), %rcx
	movq	%rcx, -280(%rbp)        # 8-byte Spill
	movl	$1, %edx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %r15
	leaq	-88(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rcx, %rbx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%r15, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	840(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -144(%rbp)
	movl	$15, -140(%rbp)
	movl	$0, -136(%rbp)
	leaq	744(%rsi), %r9
	leaq	-144(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng29(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng26(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-96(%rbp), %rbx
	movl	$1, %edx
	movl	$4, %r8d
	movq	%rbx, %rcx
	callq	*%r14
	movq	328(%rsi), %rax
	movq	384(%rsi), %rcx
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-104(%rbp), %rdi
	movl	$2, %edx
	movl	$2, %r8d
	movl	$2, %r9d
	movq	%rdi, %rcx
	movq	__imp__iki_vlog_concat(%rip), %r14
	callq	*%r14
	movl	$3, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-288(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rcx
	movq	-304(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	movq	%r13, %rbx
	callq	*%rbx
	movl	$1, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r12, %rcx
	movq	-296(%rbp), %r12        # 8-byte Reload
	movq	%r12, %rdx
	movq	%rdi, %r8
	callq	*%rbx
	movq	-264(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rcx
	movq	-272(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8d8d44e_cbb4f06c_36(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	-280(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-112(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	840(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -176(%rbp)
	movl	$15, -172(%rbp)
	movl	$0, -168(%rbp)
	leaq	736(%rsi), %r9
	leaq	-176(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng36(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng53(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-152(%rbp), %rdi
	movl	$1, %edx
	movl	$4, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	328(%rsi), %rax
	movq	384(%rsi), %rcx
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-184(%rbp), %rbx
	movl	$2, %edx
	movl	$2, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%r14
	movl	$3, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movq	-304(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rdx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$1, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-312(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rcx
	movq	%r12, %rdx
	movq	%rbx, %r8
	callq	*%rdi
	movq	%r13, %rcx
	movq	-272(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8d8d44e_cbb4f06c_36(%rip), %r13
	movq	%r13, %r8
	movq	%rsi, %r9
	movq	__imp__iki_vlog_invoke_static_function(%rip), %r12
	callq	*%r12
	movl	$1, %edx
	movq	-280(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-192(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rcx, %rbx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*__imp__iki_vlog_bit_copy(%rip)
	movq	840(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	movl	$1, -224(%rbp)
	movl	$15, -220(%rbp)
	movl	$0, -216(%rbp)
	leaq	728(%rsi), %r9
	leaq	-224(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	ng54(%rip), %rax
	movq	%rax, 56(%rsp)
	leaq	ng35(%rip), %rax
	movq	%rax, 32(%rsp)
	movl	$1, 112(%rsp)
	movl	$2, 104(%rsp)
	movl	$1, 96(%rsp)
	movq	$0, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$1, 48(%rsp)
	movl	$32, 40(%rsp)
	leaq	-200(%rbp), %rdi
	movl	$1, %edx
	movl	$4, %r8d
	movq	%rdi, %rcx
	callq	*__imp__iki_vlog_get_part_select_value(%rip)
	movq	328(%rsi), %rax
	movq	384(%rsi), %rcx
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-232(%rbp), %rbx
	movl	$2, %edx
	movl	$2, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*__imp__iki_vlog_concat(%rip)
	movl	$3, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-288(%rbp), %rcx        # 8-byte Reload
	movq	%r14, %rdx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_schedule_transaction_blocking_var(%rip), %rdi
	callq	*%rdi
	movl	$1, 32(%rsp)
	xorl	%r9d, %r9d
	movq	%r15, %rcx
	movq	-296(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	callq	*%rdi
	movq	%rdi, %r15
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-272(%rbp), %rdx        # 8-byte Reload
	movq	%r13, %r8
	movq	%rsi, %r9
	callq	*%r12
	movl	$1, %edx
	movq	-280(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-240(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	movq	__imp__iki_vlog_bit_copy(%rip), %r14
	callq	*%r14
	movq	840(%rsi), %rcx
	movq	__imp__iki_vlog_delete_function_invocation(%rip), %r12
	callq	*%r12
	leaq	-88(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	-112(%rbp), %rax
	movq	%rax, 64(%rsp)
	leaq	-192(%rbp), %rax
	movq	%rax, 48(%rsp)
	movq	%rbx, 32(%rsp)
	movl	$1, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-64(%rbp), %r12
	movl	$4, %edx
	movl	$4, %r8d
	movl	$4, %r9d
	movq	%r12, %rcx
	movq	__imp__iki_vlog_concat(%rip), %rdi
	callq	*%rdi
	movq	440(%rsi), %rax
	movq	496(%rsi), %rcx
	movq	%rax, 48(%rsp)
	movq	%rcx, 32(%rsp)
	movl	$1, 56(%rsp)
	movl	$1, 40(%rsp)
	leaq	-248(%rbp), %rbx
	movl	$2, %edx
	movl	$2, %r8d
	movl	$2, %r9d
	movq	%rbx, %rcx
	callq	*%rdi
	movl	$3, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-288(%rbp), %rcx        # 8-byte Reload
	movq	-304(%rbp), %rdx        # 8-byte Reload
	movq	%r12, %r8
	callq	*%r15
	movl	$1, 32(%rsp)
	xorl	%r9d, %r9d
	movq	-312(%rbp), %rcx        # 8-byte Reload
	movq	-296(%rbp), %rdx        # 8-byte Reload
	movq	%rbx, %r8
	callq	*%r15
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-272(%rbp), %rdx        # 8-byte Reload
	leaq	_subprog_m_8d8d44e_cbb4f06c_36(%rip), %r8
	movq	%rsi, %r9
	callq	*__imp__iki_vlog_invoke_static_function(%rip)
	movl	$1, %edx
	movq	%r13, %rcx
	callq	*__imp__iki_vlog_signal_handle_value(%rip)
	movq	%rax, %rdi
	leaq	-256(%rbp), %rbx
	xorl	%edx, %edx
	movl	$8, %r8d
	movq	%rbx, %rcx
	callq	*__imp__iki_std_memset(%rip)
	movl	$1, 32(%rsp)
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	movq	%rbx, %rcx
	movq	%rdi, %r8
	callq	*%r14
	movq	840(%rsi), %rcx
	callq	*__imp__iki_vlog_delete_function_invocation(%rip)
	leaq	600(%rsi), %rcx
	leaq	952(%rsi), %rdx
	xorl	%r9d, %r9d
	movq	%rbx, %r8
.LBB834_16:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
.LBB834_17:
	movb	$1, 880(%rsi)
	leaq	.Ltmp2508(%rip), %rax
	movq	%rax, 800(%rsi)
	addq	$376, %rsp              # imm = 0x178
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

	.def	 _subprog_m_8d8d44e_cbb4f06c_36;
	.scl	2;
	.type	32;
	.endef
	.globl	_subprog_m_8d8d44e_cbb4f06c_36
	.align	16, 0x90
_subprog_m_8d8d44e_cbb4f06c_36:         # @_subprog_m_8d8d44e_cbb4f06c_36
# BB#0:
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rsi
	pushq	%rdi
	pushq	%rbx
	subq	$264, %rsp              # imm = 0x108
	leaq	2648(%rdx), %r15
	movq	%rdx, %r12
	movq	__imp__iki_vlog_signal_handle_value_input(%rip), %rsi
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	movq	__imp__iki_vlog_get_bit_select_value_simple(%rip), %r14
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rdi
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	leaq	-72(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rbx
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rbx), %ecx
	movl	4(%rbx), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_2
# BB#1:
	testl	%ebx, %ebx
	movl	$1, -80(%rbp)
	je	.LBB835_2
# BB#64:
	movl	$1, -76(%rbp)
.LBB835_2:
	movl	(%rdi), %eax
	xorl	-80(%rbp), %eax
	movl	%eax, -88(%rbp)
	movl	4(%rdi), %eax
	orl	-76(%rbp), %eax
	movl	%eax, -84(%rbp)
	je	.LBB835_3
# BB#65:
	orl	%eax, -88(%rbp)
.LBB835_3:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_4
# BB#66:
	movl	$1, -96(%rbp)
	jmp	.LBB835_5
.LBB835_4:
	testl	%eax, %eax
	je	.LBB835_5
# BB#67:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB835_5:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	je	.LBB835_7
# BB#6:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB835_7:
	testb	%al, %al
	je	.LBB835_8
# BB#68:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	leaq	-104(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rdi
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*%rsi
	leaq	-112(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%rax, %rbx
	leaq	-120(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rbx), %ecx
	movl	4(%rbx), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_70
# BB#69:
	testl	%ebx, %ebx
	movl	$1, -120(%rbp)
	je	.LBB835_70
# BB#75:
	movl	$1, -116(%rbp)
.LBB835_70:
	movl	(%rdi), %eax
	xorl	-120(%rbp), %eax
	movl	%eax, -128(%rbp)
	movl	4(%rdi), %eax
	orl	-116(%rbp), %eax
	movl	%eax, -124(%rbp)
	je	.LBB835_71
# BB#76:
	orl	%eax, -128(%rbp)
.LBB835_71:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_72
# BB#77:
	movq	%r15, -208(%rbp)        # 8-byte Spill
	movl	$1, -136(%rbp)
	jmp	.LBB835_73
.LBB835_8:
	movq	%r15, -208(%rbp)        # 8-byte Spill
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB835_9
.LBB835_72:
	movq	%r15, -208(%rbp)        # 8-byte Spill
	testl	%eax, %eax
	je	.LBB835_73
# BB#78:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB835_73:
	movl	-96(%rbp), %eax
	orl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB835_9
# BB#74:
	orl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	notl	%eax
	andl	-96(%rbp), %eax
	notl	%eax
	andl	-140(%rbp), %eax
	movl	-132(%rbp), %ecx
	notl	%ecx
	andl	-136(%rbp), %ecx
	notl	%ecx
	andl	%eax, %ecx
	movl	%ecx, -140(%rbp)
.LBB835_9:
	movl	-144(%rbp), %ebx
	movl	-140(%rbp), %r13d
	notl	%r13d
	leaq	2592(%r12), %r15
	movl	$4, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, %rdi
	testl	%r13d, %ebx
	je	.LBB835_10
# BB#79:
	movl	$2, %edx
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	movq	%rax, 80(%rsp)
	movl	$2, 96(%rsp)
	movl	$2, 88(%rsp)
	movl	$1, 72(%rsp)
	movl	$2, 64(%rsp)
	movl	$1, 56(%rsp)
	movl	$0, 48(%rsp)
	movl	$3, 40(%rsp)
	movl	$1, 32(%rsp)
	leaq	-152(%rbp), %rcx
	movl	$1, %edx
	movl	$1, %r8d
	movq	%rdi, %r9
	callq	*__imp__iki_vlog_get_bit_select_value_p_input(%rip)
	leaq	2536(%r12), %rcx
	addq	$2504, %r12             # imm = 0x9C8
	xorl	%r9d, %r9d
	movq	%r12, %rdx
	movq	%rax, %r8
	jmp	.LBB835_63
.LBB835_10:
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rdi, %rdx
	callq	*%r14
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-72(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r14
	movq	%r14, %r13
	movl	(%rdi), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -80(%rbp)
	movl	4(%rdi), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -76(%rbp)
	je	.LBB835_11
# BB#80:
	orl	%ecx, -80(%rbp)
.LBB835_11:
	leaq	-88(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-80(%rbp), %ecx
	movl	-76(%rbp), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_13
# BB#12:
	testl	%ebx, %ebx
	movl	$1, -88(%rbp)
	je	.LBB835_13
# BB#81:
	movl	$1, -84(%rbp)
.LBB835_13:
	leaq	-96(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-84(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-88(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_14
# BB#82:
	movl	$1, -96(%rbp)
	jmp	.LBB835_15
.LBB835_14:
	testl	%eax, %eax
	je	.LBB835_15
# BB#83:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -96(%rbp)
.LBB835_15:
	cmpl	$0, -96(%rbp)
	movb	$1, %al
	movq	%r15, %r14
	jne	.LBB835_17
# BB#16:
	cmpl	$0, -92(%rbp)
	setne	%al
.LBB835_17:
	testb	%al, %al
	je	.LBB835_18
# BB#84:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-104(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-112(%rbp), %rcx
	movl	$3, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movl	(%rdi), %ecx
	xorl	(%rax), %ecx
	movl	%ecx, -120(%rbp)
	movl	4(%rdi), %ecx
	orl	4(%rax), %ecx
	movl	%ecx, -116(%rbp)
	je	.LBB835_85
# BB#91:
	orl	%ecx, -120(%rbp)
.LBB835_85:
	leaq	-128(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-120(%rbp), %ecx
	movl	-116(%rbp), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_87
# BB#86:
	testl	%ebx, %ebx
	movl	$1, -128(%rbp)
	je	.LBB835_87
# BB#92:
	movl	$1, -124(%rbp)
.LBB835_87:
	leaq	-136(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-124(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-128(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_88
# BB#93:
	movl	$1, -136(%rbp)
	jmp	.LBB835_89
.LBB835_18:
	leaq	-144(%rbp), %rcx
	leaq	-96(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -144(%rbp)
	andl	$1, -140(%rbp)
	jmp	.LBB835_19
.LBB835_88:
	testl	%eax, %eax
	je	.LBB835_89
# BB#94:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -136(%rbp)
.LBB835_89:
	movl	-96(%rbp), %eax
	andl	-136(%rbp), %eax
	movl	%eax, -144(%rbp)
	movl	-92(%rbp), %eax
	orl	-132(%rbp), %eax
	movl	%eax, -140(%rbp)
	je	.LBB835_19
# BB#90:
	orl	%eax, -144(%rbp)
	movl	-96(%rbp), %eax
	movl	-92(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-140(%rbp), %ecx
	movl	-136(%rbp), %eax
	movl	-132(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -140(%rbp)
	movl	-96(%rbp), %eax
	movl	-92(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	movl	-136(%rbp), %eax
	movl	-132(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -144(%rbp)
.LBB835_19:
	leaq	-152(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-140(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-144(%rbp), %ecx
	testb	$1, %cl
	movq	-208(%rbp), %r15        # 8-byte Reload
	je	.LBB835_20
# BB#95:
	movl	$1, -152(%rbp)
	jmp	.LBB835_21
.LBB835_20:
	testl	%eax, %eax
	je	.LBB835_21
# BB#96:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -152(%rbp)
.LBB835_21:
	cmpl	$0, -152(%rbp)
	movb	$1, %al
	jne	.LBB835_23
# BB#22:
	cmpl	$0, -148(%rbp)
	setne	%al
.LBB835_23:
	testb	%al, %al
	je	.LBB835_24
# BB#97:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-160(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-168(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rax), %ecx
	movl	4(%rax), %eax
	movl	%edi, %ebx
	orl	%eax, %ebx
	orl	%ecx, %ebx
	orl	%eax, %edi
	cmovel	%ecx, %ebx
	leaq	-176(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	xorl	ng33(%rip), %ebx
	movl	ng33+4(%rip), %eax
	movl	%edi, %ecx
	xorl	%eax, %ecx
	orl	%ebx, %ecx
	orl	%eax, %edi
	movl	%edi, %eax
	notl	%eax
	testl	%eax, %ecx
	jne	.LBB835_99
# BB#98:
	testl	%edi, %edi
	movl	$1, -176(%rbp)
	je	.LBB835_99
# BB#103:
	movl	$1, -172(%rbp)
.LBB835_99:
	leaq	-184(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-172(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-176(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_100
# BB#104:
	movl	$1, -184(%rbp)
	jmp	.LBB835_101
.LBB835_24:
	leaq	-192(%rbp), %rcx
	leaq	-152(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -192(%rbp)
	andl	$1, -188(%rbp)
	jmp	.LBB835_25
.LBB835_100:
	testl	%eax, %eax
	je	.LBB835_101
# BB#105:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -184(%rbp)
.LBB835_101:
	movl	-152(%rbp), %eax
	andl	-184(%rbp), %eax
	movl	%eax, -192(%rbp)
	movl	-148(%rbp), %eax
	orl	-180(%rbp), %eax
	movl	%eax, -188(%rbp)
	je	.LBB835_25
# BB#102:
	orl	%eax, -192(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-188(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -188(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-192(%rbp), %ecx
	movl	-184(%rbp), %eax
	movl	-180(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -192(%rbp)
.LBB835_25:
	movl	-188(%rbp), %eax
	notl	%eax
	testl	-192(%rbp), %eax
	je	.LBB835_26
# BB#106:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-200(%rbp), %rcx
	jmp	.LBB835_107
.LBB835_26:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_28
# BB#27:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB835_28
# BB#110:
	movl	$1, -68(%rbp)
.LBB835_28:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_29
# BB#111:
	movl	$1, -80(%rbp)
	jmp	.LBB835_30
.LBB835_29:
	testl	%eax, %eax
	je	.LBB835_30
# BB#112:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB835_30:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB835_32
# BB#31:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB835_32:
	testb	%al, %al
	je	.LBB835_33
# BB#113:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_115
# BB#114:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB835_115
# BB#119:
	movl	$1, -100(%rbp)
.LBB835_115:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_116
# BB#120:
	movl	$1, -112(%rbp)
	jmp	.LBB835_117
.LBB835_33:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB835_34
.LBB835_116:
	testl	%eax, %eax
	je	.LBB835_117
# BB#121:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB835_117:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB835_34
# BB#118:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB835_34:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	jne	.LBB835_147
# BB#35:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_37
# BB#36:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB835_37
# BB#122:
	movl	$1, -68(%rbp)
.LBB835_37:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_38
# BB#123:
	movl	$1, -80(%rbp)
	jmp	.LBB835_39
.LBB835_38:
	testl	%eax, %eax
	je	.LBB835_39
# BB#124:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB835_39:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB835_41
# BB#40:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB835_41:
	testb	%al, %al
	je	.LBB835_42
# BB#125:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$3, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_127
# BB#126:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB835_127
# BB#131:
	movl	$1, -100(%rbp)
.LBB835_127:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_128
# BB#132:
	movl	$1, -112(%rbp)
	jmp	.LBB835_129
.LBB835_42:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB835_43
.LBB835_128:
	testl	%eax, %eax
	je	.LBB835_129
# BB#133:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB835_129:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB835_43
# BB#130:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB835_43:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	je	.LBB835_44
# BB#134:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-128(%rbp), %rcx
	movl	$2, %r8d
	jmp	.LBB835_108
.LBB835_44:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng33(%rip), %ecx
	movl	ng33+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_46
# BB#45:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB835_46
# BB#135:
	movl	$1, -68(%rbp)
.LBB835_46:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_47
# BB#136:
	movl	$1, -80(%rbp)
	jmp	.LBB835_48
.LBB835_47:
	testl	%eax, %eax
	je	.LBB835_48
# BB#137:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB835_48:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB835_50
# BB#49:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB835_50:
	testb	%al, %al
	je	.LBB835_51
# BB#138:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$2, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_140
# BB#139:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB835_140
# BB#144:
	movl	$1, -100(%rbp)
.LBB835_140:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_141
# BB#145:
	movl	$1, -112(%rbp)
	jmp	.LBB835_142
.LBB835_51:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB835_52
.LBB835_141:
	testl	%eax, %eax
	je	.LBB835_142
# BB#146:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB835_142:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB835_52
# BB#143:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB835_52:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	je	.LBB835_53
.LBB835_147:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-128(%rbp), %rcx
.LBB835_107:
	xorl	%r8d, %r8d
.LBB835_108:
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%r12, %rdx
	leaq	2536(%rdx), %rcx
	addq	$2504, %rdx             # imm = 0x9C8
	xorl	%r9d, %r9d
	movq	%rax, %r8
.LBB835_63:
	callq	*__imp__iki_vlog_schedule_transaction_blocking_var_setback0(%rip)
	addq	$264, %rsp              # imm = 0x108
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.LBB835_53:
	movl	$2, %edx
	movq	%r15, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-64(%rbp), %rcx
	xorl	%r8d, %r8d
	movq	%rax, %rdx
	callq	*__imp__iki_vlog_get_bit_select_value_simple(%rip)
	movq	%rax, %rdi
	leaq	-72(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %ebx
	xorl	ng32(%rip), %ecx
	movl	ng32+4(%rip), %edx
	movl	%ebx, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %ebx
	movl	%ebx, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_55
# BB#54:
	testl	%ebx, %ebx
	movl	$1, -72(%rbp)
	je	.LBB835_55
# BB#148:
	movl	$1, -68(%rbp)
.LBB835_55:
	leaq	-80(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-68(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-72(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_56
# BB#149:
	movl	$1, -80(%rbp)
	jmp	.LBB835_57
.LBB835_56:
	testl	%eax, %eax
	je	.LBB835_57
# BB#150:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -80(%rbp)
.LBB835_57:
	cmpl	$0, -80(%rbp)
	movb	$1, %al
	jne	.LBB835_59
# BB#58:
	cmpl	$0, -76(%rbp)
	setne	%al
.LBB835_59:
	testb	%al, %al
	je	.LBB835_60
# BB#151:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-88(%rbp), %rcx
	movl	$1, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rdi
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*%rsi
	leaq	-96(%rbp), %rcx
	movl	$3, %r8d
	movq	%rax, %rdx
	callq	*%r13
	movq	%rax, %rbx
	leaq	-104(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	(%rdi), %ecx
	movl	4(%rdi), %edi
	xorl	(%rbx), %ecx
	movl	4(%rbx), %edx
	movl	%edi, %eax
	xorl	%edx, %eax
	orl	%ecx, %eax
	orl	%edx, %edi
	movl	%edi, %ecx
	notl	%ecx
	testl	%ecx, %eax
	jne	.LBB835_153
# BB#152:
	testl	%edi, %edi
	movl	$1, -104(%rbp)
	je	.LBB835_153
# BB#157:
	movl	$1, -100(%rbp)
.LBB835_153:
	leaq	-112(%rbp), %rcx
	xorl	%edx, %edx
	movl	$8, %r8d
	callq	*__imp__iki_std_memset(%rip)
	movl	-100(%rbp), %eax
	movl	%eax, %ecx
	notl	%ecx
	andl	-104(%rbp), %ecx
	testb	$1, %cl
	je	.LBB835_154
# BB#158:
	movl	$1, -112(%rbp)
	jmp	.LBB835_155
.LBB835_60:
	leaq	-120(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movl	$8, %r8d
	callq	*__imp__iki_std_memcpy(%rip)
	andl	$1, -120(%rbp)
	andl	$1, -116(%rbp)
	jmp	.LBB835_61
.LBB835_154:
	testl	%eax, %eax
	je	.LBB835_155
# BB#159:
	movabsq	$4294967297, %rax       # imm = 0x100000001
	movq	%rax, -112(%rbp)
.LBB835_155:
	movl	-80(%rbp), %eax
	andl	-112(%rbp), %eax
	movl	%eax, -120(%rbp)
	movl	-76(%rbp), %eax
	orl	-108(%rbp), %eax
	movl	%eax, -116(%rbp)
	je	.LBB835_61
# BB#156:
	orl	%eax, -120(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-116(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -116(%rbp)
	movl	-80(%rbp), %eax
	movl	-76(%rbp), %ecx
	notl	%eax
	notl	%ecx
	andl	%eax, %ecx
	notl	%ecx
	andl	-120(%rbp), %ecx
	movl	-112(%rbp), %eax
	movl	-108(%rbp), %edx
	notl	%eax
	notl	%edx
	andl	%eax, %edx
	notl	%edx
	andl	%ecx, %edx
	movl	%edx, -120(%rbp)
.LBB835_61:
	movl	-116(%rbp), %eax
	notl	%eax
	testl	-120(%rbp), %eax
	je	.LBB835_62
# BB#160:
	movl	$4, %edx
	movq	%r14, %rcx
	callq	*__imp__iki_vlog_signal_handle_value_input(%rip)
	leaq	-128(%rbp), %rcx
	movl	$1, %r8d
	jmp	.LBB835_108
.LBB835_62:
	movq	%r12, %rdx
	leaq	2536(%rdx), %rcx
	addq	$2504, %rdx             # imm = 0x9C8
	leaq	ng42(%rip), %r8
	xorl	%r9d, %r9d
	jmp	.LBB835_63

	.data
	.align	16                      # @ng0
ng0:
	.quad	106305752               # 0x65618d8
	.quad	106310640               # 0x6562bf0
	.quad	106315528               # 0x6563f08
	.quad	106320416               # 0x6565220
	.quad	106325304               # 0x6566538
	.quad	106330192               # 0x6567850
	.quad	106335080               # 0x6568b68
	.quad	106339968               # 0x6569e80
	.quad	106344856               # 0x656b198
	.quad	106349744               # 0x656c4b0
	.quad	106354632               # 0x656d7c8
	.quad	106359520               # 0x656eae0
	.quad	106364408               # 0x656fdf8
	.quad	106369296               # 0x6571110
	.quad	106374184               # 0x6572428
	.quad	106379072               # 0x6573740
	.quad	106383960               # 0x6574a58
	.quad	106388848               # 0x6575d70
	.quad	106393736               # 0x6577088
	.quad	106398624               # 0x65783a0
	.quad	106403512               # 0x65796b8
	.quad	106408400               # 0x657a9d0
	.quad	106413288               # 0x657bce8
	.quad	106418176               # 0x657d000
	.quad	106423064               # 0x657e318
	.quad	106427952               # 0x657f630
	.quad	106432840               # 0x6580948
	.quad	106437728               # 0x6581c60
	.quad	106442616               # 0x6582f78
	.quad	106447504               # 0x6584290
	.quad	106452392               # 0x65855a8
	.quad	106457280               # 0x65868c0
	.quad	106462168               # 0x6587bd8
	.quad	106467056               # 0x6588ef0
	.quad	106471944               # 0x658a208
	.quad	106476832               # 0x658b520
	.quad	106481720               # 0x658c838
	.quad	106486608               # 0x658db50
	.quad	106491496               # 0x658ee68
	.quad	106496384               # 0x6590180
	.quad	106501272               # 0x6591498
	.quad	106506160               # 0x65927b0
	.quad	106511048               # 0x6593ac8
	.quad	106515936               # 0x6594de0
	.quad	106520824               # 0x65960f8
	.quad	106525712               # 0x6597410
	.quad	106530600               # 0x6598728
	.quad	106535488               # 0x6599a40
	.quad	106540376               # 0x659ad58
	.quad	106545264               # 0x659c070
	.quad	106550152               # 0x659d388
	.quad	106555040               # 0x659e6a0
	.quad	106559928               # 0x659f9b8
	.quad	106564816               # 0x65a0cd0
	.quad	106569704               # 0x65a1fe8
	.quad	106574592               # 0x65a3300
	.quad	106579480               # 0x65a4618
	.quad	106584368               # 0x65a5930
	.quad	106589256               # 0x65a6c48
	.quad	106594144               # 0x65a7f60
	.quad	106599032               # 0x65a9278
	.quad	106603920               # 0x65aa590
	.quad	106608808               # 0x65ab8a8
	.quad	106613696               # 0x65acbc0
	.quad	106618584               # 0x65aded8
	.quad	106623472               # 0x65af1f0
	.quad	106628360               # 0x65b0508
	.quad	106633248               # 0x65b1820
	.quad	106638136               # 0x65b2b38
	.quad	106643024               # 0x65b3e50
	.quad	106647912               # 0x65b5168
	.quad	106652800               # 0x65b6480
	.quad	106657688               # 0x65b7798
	.quad	106662576               # 0x65b8ab0
	.quad	106667464               # 0x65b9dc8
	.quad	106672352               # 0x65bb0e0
	.quad	106677240               # 0x65bc3f8
	.quad	106682128               # 0x65bd710
	.quad	106687016               # 0x65bea28
	.quad	106691904               # 0x65bfd40
	.quad	106696792               # 0x65c1058
	.quad	106701680               # 0x65c2370
	.quad	106706568               # 0x65c3688
	.quad	106711456               # 0x65c49a0
	.quad	106716344               # 0x65c5cb8
	.quad	106721232               # 0x65c6fd0
	.quad	106726120               # 0x65c82e8
	.quad	108115104               # 0x671b4a0
	.quad	109106280               # 0x680d468
	.quad	109111168               # 0x680e780
	.quad	109116056               # 0x680fa98
	.quad	109120944               # 0x6810db0
	.quad	109125832               # 0x68120c8
	.quad	109130720               # 0x68133e0
	.quad	109135608               # 0x68146f8
	.quad	109140496               # 0x6815a10
	.quad	109145384               # 0x6816d28
	.quad	109150272               # 0x6818040
	.quad	109155160               # 0x6819358
	.quad	109160048               # 0x681a670
	.quad	109164936               # 0x681b988
	.quad	109169824               # 0x681cca0
	.quad	109174712               # 0x681dfb8
	.quad	109179600               # 0x681f2d0
	.quad	109184488               # 0x68205e8
	.quad	109189376               # 0x6821900
	.quad	109194264               # 0x6822c18
	.quad	109199152               # 0x6823f30
	.quad	109204040               # 0x6825248
	.quad	109208928               # 0x6826560
	.quad	109213816               # 0x6827878
	.quad	109218704               # 0x6828b90
	.quad	109223592               # 0x6829ea8
	.quad	109228480               # 0x682b1c0
	.quad	109233368               # 0x682c4d8
	.quad	109238256               # 0x682d7f0
	.quad	109243144               # 0x682eb08
	.quad	109248032               # 0x682fe20
	.quad	109252920               # 0x6831138
	.quad	109257808               # 0x6832450
	.quad	109262696               # 0x6833768
	.quad	109267584               # 0x6834a80
	.quad	109272472               # 0x6835d98
	.quad	109277360               # 0x68370b0
	.quad	109282248               # 0x68383c8
	.quad	109287136               # 0x68396e0
	.quad	109292024               # 0x683a9f8
	.quad	109296912               # 0x683bd10
	.quad	109301800               # 0x683d028
	.quad	109306688               # 0x683e340
	.quad	109311576               # 0x683f658
	.quad	109316464               # 0x6840970
	.quad	109321352               # 0x6841c88
	.quad	109326240               # 0x6842fa0
	.quad	109331128               # 0x68442b8
	.quad	109336016               # 0x68455d0
	.quad	109340904               # 0x68468e8
	.quad	109345792               # 0x6847c00
	.quad	109350680               # 0x6848f18
	.quad	109355568               # 0x684a230
	.quad	109360456               # 0x684b548
	.quad	109365344               # 0x684c860
	.quad	109370232               # 0x684db78
	.quad	109375120               # 0x684ee90
	.quad	109380008               # 0x68501a8
	.quad	109384896               # 0x68514c0
	.quad	109389784               # 0x68527d8
	.quad	109394672               # 0x6853af0
	.quad	109399560               # 0x6854e08
	.quad	109404448               # 0x6856120
	.quad	109409336               # 0x6857438
	.quad	109414224               # 0x6858750
	.quad	109419112               # 0x6859a68
	.quad	109424000               # 0x685ad80
	.quad	109428888               # 0x685c098
	.quad	109433776               # 0x685d3b0
	.quad	109438664               # 0x685e6c8
	.quad	109443552               # 0x685f9e0
	.quad	109448440               # 0x6860cf8
	.quad	109453328               # 0x6862010
	.quad	109458216               # 0x6863328
	.quad	109463104               # 0x6864640
	.quad	109467992               # 0x6865958
	.quad	109472880               # 0x6866c70
	.quad	109477768               # 0x6867f88
	.quad	109482656               # 0x68692a0
	.quad	109487544               # 0x686a5b8
	.quad	109492432               # 0x686b8d0
	.quad	109497320               # 0x686cbe8
	.quad	109502208               # 0x686df00
	.quad	109507096               # 0x686f218
	.quad	109511984               # 0x6870530
	.quad	109516872               # 0x6871848
	.quad	109521760               # 0x6872b60
	.quad	109526648               # 0x6873e78
	.quad	110915632               # 0x69c7030
	.quad	111906808               # 0x6ab8ff8
	.quad	111911696               # 0x6aba310
	.quad	111916584               # 0x6abb628
	.quad	111921472               # 0x6abc940
	.quad	111926360               # 0x6abdc58
	.quad	111931248               # 0x6abef70
	.quad	111936136               # 0x6ac0288
	.quad	111941024               # 0x6ac15a0
	.quad	111945912               # 0x6ac28b8
	.quad	111950800               # 0x6ac3bd0
	.quad	111955688               # 0x6ac4ee8
	.quad	111960576               # 0x6ac6200
	.quad	111965464               # 0x6ac7518
	.quad	111970352               # 0x6ac8830
	.quad	111975240               # 0x6ac9b48
	.quad	111980128               # 0x6acae60
	.quad	111985016               # 0x6acc178
	.quad	111989904               # 0x6acd490
	.quad	111994792               # 0x6ace7a8
	.quad	111999680               # 0x6acfac0
	.quad	112004568               # 0x6ad0dd8
	.quad	112009456               # 0x6ad20f0
	.quad	112014344               # 0x6ad3408
	.quad	112019232               # 0x6ad4720
	.quad	112024120               # 0x6ad5a38
	.quad	112029008               # 0x6ad6d50
	.quad	112033896               # 0x6ad8068
	.quad	112038784               # 0x6ad9380
	.quad	112043672               # 0x6ada698
	.quad	112048560               # 0x6adb9b0
	.quad	112053448               # 0x6adccc8
	.quad	112058336               # 0x6addfe0
	.quad	112063224               # 0x6adf2f8
	.quad	112068112               # 0x6ae0610
	.quad	112073000               # 0x6ae1928
	.quad	112077888               # 0x6ae2c40
	.quad	112082776               # 0x6ae3f58
	.quad	112087664               # 0x6ae5270
	.quad	112092552               # 0x6ae6588
	.quad	112097440               # 0x6ae78a0
	.quad	112102328               # 0x6ae8bb8
	.quad	112107216               # 0x6ae9ed0
	.quad	112112104               # 0x6aeb1e8
	.quad	112116992               # 0x6aec500
	.quad	112121880               # 0x6aed818
	.quad	112126768               # 0x6aeeb30
	.quad	112131656               # 0x6aefe48
	.quad	112136544               # 0x6af1160
	.quad	112141432               # 0x6af2478
	.quad	112146320               # 0x6af3790
	.quad	112151208               # 0x6af4aa8
	.quad	112156096               # 0x6af5dc0
	.quad	112160984               # 0x6af70d8
	.quad	112165872               # 0x6af83f0
	.quad	112170760               # 0x6af9708
	.quad	112175648               # 0x6afaa20
	.quad	112180536               # 0x6afbd38
	.quad	112185424               # 0x6afd050
	.quad	112190312               # 0x6afe368
	.quad	112195200               # 0x6aff680
	.quad	112200088               # 0x6b00998
	.quad	112204976               # 0x6b01cb0
	.quad	112209864               # 0x6b02fc8
	.quad	112214752               # 0x6b042e0
	.quad	112219640               # 0x6b055f8
	.quad	112224528               # 0x6b06910
	.quad	112229416               # 0x6b07c28
	.quad	112234304               # 0x6b08f40
	.quad	112239192               # 0x6b0a258
	.quad	112244080               # 0x6b0b570
	.quad	112248968               # 0x6b0c888
	.quad	112253856               # 0x6b0dba0
	.quad	112258744               # 0x6b0eeb8
	.quad	112263632               # 0x6b101d0
	.quad	112268520               # 0x6b114e8
	.quad	112273408               # 0x6b12800
	.quad	112278296               # 0x6b13b18
	.quad	112283184               # 0x6b14e30
	.quad	112288072               # 0x6b16148
	.quad	112292960               # 0x6b17460
	.quad	112297848               # 0x6b18778
	.quad	112302736               # 0x6b19a90
	.quad	112307624               # 0x6b1ada8
	.quad	112312512               # 0x6b1c0c0
	.quad	112317400               # 0x6b1d3d8
	.quad	112322288               # 0x6b1e6f0
	.quad	112327176               # 0x6b1fa08
	.quad	113716160               # 0x6c72bc0
	.quad	114707336               # 0x6d64b88
	.quad	114712224               # 0x6d65ea0
	.quad	114717112               # 0x6d671b8
	.quad	114722000               # 0x6d684d0
	.quad	114726888               # 0x6d697e8
	.quad	114731776               # 0x6d6ab00
	.quad	114736664               # 0x6d6be18
	.quad	114741552               # 0x6d6d130
	.quad	114746440               # 0x6d6e448
	.quad	114751328               # 0x6d6f760
	.quad	114756216               # 0x6d70a78
	.quad	114761104               # 0x6d71d90
	.quad	114765992               # 0x6d730a8
	.quad	114770880               # 0x6d743c0
	.quad	114775768               # 0x6d756d8
	.quad	114780656               # 0x6d769f0
	.quad	114785544               # 0x6d77d08
	.quad	114790432               # 0x6d79020
	.quad	114795320               # 0x6d7a338
	.quad	114800208               # 0x6d7b650
	.quad	114805096               # 0x6d7c968
	.quad	114809984               # 0x6d7dc80
	.quad	114814872               # 0x6d7ef98
	.quad	114819760               # 0x6d802b0
	.quad	114824648               # 0x6d815c8
	.quad	114829536               # 0x6d828e0
	.quad	114834424               # 0x6d83bf8
	.quad	114839312               # 0x6d84f10
	.quad	114844200               # 0x6d86228
	.quad	114849088               # 0x6d87540
	.quad	114853976               # 0x6d88858
	.quad	114858864               # 0x6d89b70
	.quad	114863752               # 0x6d8ae88
	.quad	114868640               # 0x6d8c1a0
	.quad	114873528               # 0x6d8d4b8
	.quad	114878416               # 0x6d8e7d0
	.quad	114883304               # 0x6d8fae8
	.quad	114888192               # 0x6d90e00
	.quad	114893080               # 0x6d92118
	.quad	114897968               # 0x6d93430
	.quad	114902856               # 0x6d94748
	.quad	114907744               # 0x6d95a60
	.quad	114912632               # 0x6d96d78
	.quad	114917520               # 0x6d98090
	.quad	114922408               # 0x6d993a8
	.quad	114927296               # 0x6d9a6c0
	.quad	114932184               # 0x6d9b9d8
	.quad	114937072               # 0x6d9ccf0
	.quad	114941960               # 0x6d9e008
	.quad	114946848               # 0x6d9f320
	.quad	114951736               # 0x6da0638
	.quad	114956624               # 0x6da1950
	.quad	114961512               # 0x6da2c68
	.quad	114966400               # 0x6da3f80
	.quad	114971288               # 0x6da5298
	.quad	114976176               # 0x6da65b0
	.quad	114981064               # 0x6da78c8
	.quad	114985952               # 0x6da8be0
	.quad	114990840               # 0x6da9ef8
	.quad	114995728               # 0x6dab210
	.quad	115000616               # 0x6dac528
	.quad	115005504               # 0x6dad840
	.quad	115010392               # 0x6daeb58
	.quad	115015280               # 0x6dafe70
	.quad	115020168               # 0x6db1188
	.quad	115025056               # 0x6db24a0
	.quad	115029944               # 0x6db37b8
	.quad	115034832               # 0x6db4ad0
	.quad	115039720               # 0x6db5de8
	.quad	115044608               # 0x6db7100
	.quad	115049496               # 0x6db8418
	.quad	115054384               # 0x6db9730
	.quad	115059272               # 0x6dbaa48
	.quad	115064160               # 0x6dbbd60
	.quad	115069048               # 0x6dbd078
	.quad	115073936               # 0x6dbe390
	.quad	115078824               # 0x6dbf6a8
	.quad	115083712               # 0x6dc09c0
	.quad	115088600               # 0x6dc1cd8
	.quad	115093488               # 0x6dc2ff0
	.quad	115098376               # 0x6dc4308
	.quad	115103264               # 0x6dc5620
	.quad	115108152               # 0x6dc6938
	.quad	115113040               # 0x6dc7c50
	.quad	115117928               # 0x6dc8f68
	.quad	115122816               # 0x6dca280
	.quad	115127704               # 0x6dcb598
	.quad	116516688               # 0x6f1e750
	.quad	117507864               # 0x7010718
	.quad	117512752               # 0x7011a30
	.quad	117517640               # 0x7012d48
	.quad	117522528               # 0x7014060
	.quad	117527416               # 0x7015378
	.quad	117532304               # 0x7016690
	.quad	117537192               # 0x70179a8
	.quad	117542080               # 0x7018cc0
	.quad	117546968               # 0x7019fd8
	.quad	117551856               # 0x701b2f0
	.quad	117556744               # 0x701c608
	.quad	117561632               # 0x701d920
	.quad	117566520               # 0x701ec38
	.quad	117571408               # 0x701ff50
	.quad	117576296               # 0x7021268
	.quad	117581184               # 0x7022580
	.quad	117586072               # 0x7023898
	.quad	117590960               # 0x7024bb0
	.quad	117595848               # 0x7025ec8
	.quad	117600736               # 0x70271e0
	.quad	117605624               # 0x70284f8
	.quad	117610512               # 0x7029810
	.quad	117615400               # 0x702ab28
	.quad	117620288               # 0x702be40
	.quad	117625176               # 0x702d158
	.quad	117630064               # 0x702e470
	.quad	117634952               # 0x702f788
	.quad	117639840               # 0x7030aa0
	.quad	117644728               # 0x7031db8
	.quad	117649616               # 0x70330d0
	.quad	117654504               # 0x70343e8
	.quad	117659392               # 0x7035700
	.quad	117664280               # 0x7036a18
	.quad	117669168               # 0x7037d30
	.quad	117674056               # 0x7039048
	.quad	117678944               # 0x703a360
	.quad	117683832               # 0x703b678
	.quad	117688720               # 0x703c990
	.quad	117693608               # 0x703dca8
	.quad	117698496               # 0x703efc0
	.quad	117703384               # 0x70402d8
	.quad	117708272               # 0x70415f0
	.quad	117713160               # 0x7042908
	.quad	117718048               # 0x7043c20
	.quad	117722936               # 0x7044f38
	.quad	117727824               # 0x7046250
	.quad	117732712               # 0x7047568
	.quad	117737600               # 0x7048880
	.quad	117742488               # 0x7049b98
	.quad	117747376               # 0x704aeb0
	.quad	117752264               # 0x704c1c8
	.quad	117757152               # 0x704d4e0
	.quad	117762040               # 0x704e7f8
	.quad	117766928               # 0x704fb10
	.quad	117771816               # 0x7050e28
	.quad	117776704               # 0x7052140
	.quad	117781592               # 0x7053458
	.quad	117786480               # 0x7054770
	.quad	117791368               # 0x7055a88
	.quad	117796256               # 0x7056da0
	.quad	117801144               # 0x70580b8
	.quad	117806032               # 0x70593d0
	.quad	117810920               # 0x705a6e8
	.quad	117815808               # 0x705ba00
	.quad	117820696               # 0x705cd18
	.quad	117825584               # 0x705e030
	.quad	117830472               # 0x705f348
	.quad	117835360               # 0x7060660
	.quad	117840248               # 0x7061978
	.quad	117845136               # 0x7062c90
	.quad	117850024               # 0x7063fa8
	.quad	117854912               # 0x70652c0
	.quad	117859800               # 0x70665d8
	.quad	117864688               # 0x70678f0
	.quad	117869576               # 0x7068c08
	.quad	117874464               # 0x7069f20
	.quad	117879352               # 0x706b238
	.quad	117884240               # 0x706c550
	.quad	117889128               # 0x706d868
	.quad	117894016               # 0x706eb80
	.quad	117898904               # 0x706fe98
	.quad	117903792               # 0x70711b0
	.quad	117908680               # 0x70724c8
	.quad	117913568               # 0x70737e0
	.quad	117918456               # 0x7074af8
	.quad	117923344               # 0x7075e10
	.quad	117928232               # 0x7077128
	.quad	119317216               # 0x71ca2e0
	.quad	120308392               # 0x72bc2a8
	.quad	120313280               # 0x72bd5c0
	.quad	120318168               # 0x72be8d8
	.quad	120323056               # 0x72bfbf0
	.quad	120327944               # 0x72c0f08
	.quad	120332832               # 0x72c2220
	.quad	120337720               # 0x72c3538
	.quad	120342608               # 0x72c4850
	.quad	120347496               # 0x72c5b68
	.quad	120352384               # 0x72c6e80
	.quad	120357272               # 0x72c8198
	.quad	120362160               # 0x72c94b0
	.quad	120367048               # 0x72ca7c8
	.quad	120371936               # 0x72cbae0
	.quad	120376824               # 0x72ccdf8
	.quad	120381712               # 0x72ce110
	.quad	120386600               # 0x72cf428
	.quad	120391488               # 0x72d0740
	.quad	120396376               # 0x72d1a58
	.quad	120401264               # 0x72d2d70
	.quad	120406152               # 0x72d4088
	.quad	120411040               # 0x72d53a0
	.quad	120415928               # 0x72d66b8
	.quad	120420816               # 0x72d79d0
	.quad	120425704               # 0x72d8ce8
	.quad	120430592               # 0x72da000
	.quad	120435480               # 0x72db318
	.quad	120440368               # 0x72dc630
	.quad	120445256               # 0x72dd948
	.quad	120450144               # 0x72dec60
	.quad	120455032               # 0x72dff78
	.quad	120459920               # 0x72e1290
	.quad	120464808               # 0x72e25a8
	.quad	120469696               # 0x72e38c0
	.quad	120474584               # 0x72e4bd8
	.quad	120479472               # 0x72e5ef0
	.quad	120484360               # 0x72e7208
	.quad	120489248               # 0x72e8520
	.quad	120494136               # 0x72e9838
	.quad	120499024               # 0x72eab50
	.quad	120503912               # 0x72ebe68
	.quad	120508800               # 0x72ed180
	.quad	120513688               # 0x72ee498
	.quad	120518576               # 0x72ef7b0
	.quad	120523464               # 0x72f0ac8
	.quad	120528352               # 0x72f1de0
	.quad	120533240               # 0x72f30f8
	.quad	120538128               # 0x72f4410
	.quad	120543016               # 0x72f5728
	.quad	120547904               # 0x72f6a40
	.quad	120552792               # 0x72f7d58
	.quad	120557680               # 0x72f9070
	.quad	120562568               # 0x72fa388
	.quad	120567456               # 0x72fb6a0
	.quad	120572344               # 0x72fc9b8
	.quad	120577232               # 0x72fdcd0
	.quad	120582120               # 0x72fefe8
	.quad	120587008               # 0x7300300
	.quad	120591896               # 0x7301618
	.quad	120596784               # 0x7302930
	.quad	120601672               # 0x7303c48
	.quad	120606560               # 0x7304f60
	.quad	120611448               # 0x7306278
	.quad	120616336               # 0x7307590
	.quad	120621224               # 0x73088a8
	.quad	120626112               # 0x7309bc0
	.quad	120631000               # 0x730aed8
	.quad	120635888               # 0x730c1f0
	.quad	120640776               # 0x730d508
	.quad	120645664               # 0x730e820
	.quad	120650552               # 0x730fb38
	.quad	120655440               # 0x7310e50
	.quad	120660328               # 0x7312168
	.quad	120665216               # 0x7313480
	.quad	120670104               # 0x7314798
	.quad	120674992               # 0x7315ab0
	.quad	120679880               # 0x7316dc8
	.quad	120684768               # 0x73180e0
	.quad	120689656               # 0x73193f8
	.quad	120694544               # 0x731a710
	.quad	120699432               # 0x731ba28
	.quad	120704320               # 0x731cd40
	.quad	120709208               # 0x731e058
	.quad	120714096               # 0x731f370
	.quad	120718984               # 0x7320688
	.quad	120723872               # 0x73219a0
	.quad	120728760               # 0x7322cb8
	.quad	122117744               # 0x7475e70
	.quad	123108920               # 0x7567e38
	.quad	123113808               # 0x7569150
	.quad	123118696               # 0x756a468
	.quad	123123584               # 0x756b780
	.quad	123128472               # 0x756ca98
	.quad	123133360               # 0x756ddb0
	.quad	123138248               # 0x756f0c8
	.quad	123143136               # 0x75703e0
	.quad	123148024               # 0x75716f8
	.quad	123152912               # 0x7572a10
	.quad	123157800               # 0x7573d28
	.quad	123162688               # 0x7575040
	.quad	123167576               # 0x7576358
	.quad	123172464               # 0x7577670
	.quad	123177352               # 0x7578988
	.quad	123182240               # 0x7579ca0
	.quad	123187128               # 0x757afb8
	.quad	123192016               # 0x757c2d0
	.quad	123196904               # 0x757d5e8
	.quad	123201792               # 0x757e900
	.quad	123206680               # 0x757fc18
	.quad	123211568               # 0x7580f30
	.quad	123216456               # 0x7582248
	.quad	123221344               # 0x7583560
	.quad	123226232               # 0x7584878
	.quad	123231120               # 0x7585b90
	.quad	123236008               # 0x7586ea8
	.quad	123240896               # 0x75881c0
	.quad	123245784               # 0x75894d8
	.quad	123250672               # 0x758a7f0
	.quad	123255560               # 0x758bb08
	.quad	123260448               # 0x758ce20
	.quad	123265336               # 0x758e138
	.quad	123270224               # 0x758f450
	.quad	123275112               # 0x7590768
	.quad	123280000               # 0x7591a80
	.quad	123284888               # 0x7592d98
	.quad	123289776               # 0x75940b0
	.quad	123294664               # 0x75953c8
	.quad	123299552               # 0x75966e0
	.quad	123304440               # 0x75979f8
	.quad	123309328               # 0x7598d10
	.quad	123314216               # 0x759a028
	.quad	123319104               # 0x759b340
	.quad	123323992               # 0x759c658
	.quad	123328880               # 0x759d970
	.quad	123333768               # 0x759ec88
	.quad	123338656               # 0x759ffa0
	.quad	123343544               # 0x75a12b8
	.quad	123348432               # 0x75a25d0
	.quad	123353320               # 0x75a38e8
	.quad	123358208               # 0x75a4c00
	.quad	123363096               # 0x75a5f18
	.quad	123367984               # 0x75a7230
	.quad	123372872               # 0x75a8548
	.quad	123377760               # 0x75a9860
	.quad	123382648               # 0x75aab78
	.quad	123387536               # 0x75abe90
	.quad	123392424               # 0x75ad1a8
	.quad	123397312               # 0x75ae4c0
	.quad	123402200               # 0x75af7d8
	.quad	123407088               # 0x75b0af0
	.quad	123411976               # 0x75b1e08
	.quad	123416864               # 0x75b3120
	.quad	123421752               # 0x75b4438
	.quad	123426640               # 0x75b5750
	.quad	123431528               # 0x75b6a68
	.quad	123436416               # 0x75b7d80
	.quad	123441304               # 0x75b9098
	.quad	123446192               # 0x75ba3b0
	.quad	123451080               # 0x75bb6c8
	.quad	123455968               # 0x75bc9e0
	.quad	123460856               # 0x75bdcf8
	.quad	123465744               # 0x75bf010
	.quad	123470632               # 0x75c0328
	.quad	123475520               # 0x75c1640
	.quad	123480408               # 0x75c2958
	.quad	123485296               # 0x75c3c70
	.quad	123490184               # 0x75c4f88
	.quad	123495072               # 0x75c62a0
	.quad	123499960               # 0x75c75b8
	.quad	123504848               # 0x75c88d0
	.quad	123509736               # 0x75c9be8
	.quad	123514624               # 0x75caf00
	.quad	123519512               # 0x75cc218
	.quad	123524400               # 0x75cd530
	.quad	123529288               # 0x75ce848
	.quad	124918272               # 0x7721a00
	.quad	125909448               # 0x78139c8
	.quad	125914336               # 0x7814ce0
	.quad	125919224               # 0x7815ff8
	.quad	125924112               # 0x7817310
	.quad	125929000               # 0x7818628
	.quad	125933888               # 0x7819940
	.quad	125938776               # 0x781ac58
	.quad	125943664               # 0x781bf70
	.quad	125948552               # 0x781d288
	.quad	125953440               # 0x781e5a0
	.quad	125958328               # 0x781f8b8
	.quad	125963216               # 0x7820bd0
	.quad	125968104               # 0x7821ee8
	.quad	125972992               # 0x7823200
	.quad	125977880               # 0x7824518
	.quad	125982768               # 0x7825830
	.quad	125987656               # 0x7826b48
	.quad	125992544               # 0x7827e60
	.quad	125997432               # 0x7829178
	.quad	126002320               # 0x782a490
	.quad	126007208               # 0x782b7a8
	.quad	126012096               # 0x782cac0
	.quad	126016984               # 0x782ddd8
	.quad	126021872               # 0x782f0f0
	.quad	126026760               # 0x7830408
	.quad	126031648               # 0x7831720
	.quad	126036536               # 0x7832a38
	.quad	126041424               # 0x7833d50
	.quad	126046312               # 0x7835068
	.quad	126051200               # 0x7836380
	.quad	126056088               # 0x7837698
	.quad	126060976               # 0x78389b0
	.quad	126065864               # 0x7839cc8
	.quad	126070752               # 0x783afe0
	.quad	126075640               # 0x783c2f8
	.quad	126080528               # 0x783d610
	.quad	126085416               # 0x783e928
	.quad	126090304               # 0x783fc40
	.quad	126095192               # 0x7840f58
	.quad	126100080               # 0x7842270
	.quad	126104968               # 0x7843588
	.quad	126109856               # 0x78448a0
	.quad	126114744               # 0x7845bb8
	.quad	126119632               # 0x7846ed0
	.quad	126124520               # 0x78481e8
	.quad	126129408               # 0x7849500
	.quad	126134296               # 0x784a818
	.quad	126139184               # 0x784bb30
	.quad	126144072               # 0x784ce48
	.quad	126148960               # 0x784e160
	.quad	126153848               # 0x784f478
	.quad	126158736               # 0x7850790
	.quad	126163624               # 0x7851aa8
	.quad	126168512               # 0x7852dc0
	.quad	126173400               # 0x78540d8
	.quad	126178288               # 0x78553f0
	.quad	126183176               # 0x7856708
	.quad	126188064               # 0x7857a20
	.quad	126192952               # 0x7858d38
	.quad	126197840               # 0x785a050
	.quad	126202728               # 0x785b368
	.quad	126207616               # 0x785c680
	.quad	126212504               # 0x785d998
	.quad	126217392               # 0x785ecb0
	.quad	126222280               # 0x785ffc8
	.quad	126227168               # 0x78612e0
	.quad	126232056               # 0x78625f8
	.quad	126236944               # 0x7863910
	.quad	126241832               # 0x7864c28
	.quad	126246720               # 0x7865f40
	.quad	126251608               # 0x7867258
	.quad	126256496               # 0x7868570
	.quad	126261384               # 0x7869888
	.quad	126266272               # 0x786aba0
	.quad	126271160               # 0x786beb8
	.quad	126276048               # 0x786d1d0
	.quad	126280936               # 0x786e4e8
	.quad	126285824               # 0x786f800
	.quad	126290712               # 0x7870b18
	.quad	126295600               # 0x7871e30
	.quad	126300488               # 0x7873148
	.quad	126305376               # 0x7874460
	.quad	126310264               # 0x7875778
	.quad	126315152               # 0x7876a90
	.quad	126320040               # 0x7877da8
	.quad	126324928               # 0x78790c0
	.quad	126329816               # 0x787a3d8
	.quad	127718800               # 0x79cd590
	.quad	128709976               # 0x7abf558
	.quad	128714864               # 0x7ac0870
	.quad	128719752               # 0x7ac1b88
	.quad	128724640               # 0x7ac2ea0
	.quad	128729528               # 0x7ac41b8
	.quad	128734416               # 0x7ac54d0
	.quad	128739304               # 0x7ac67e8
	.quad	128744192               # 0x7ac7b00
	.quad	128749080               # 0x7ac8e18
	.quad	128753968               # 0x7aca130
	.quad	128758856               # 0x7acb448
	.quad	128763744               # 0x7acc760
	.quad	128768632               # 0x7acda78
	.quad	128773520               # 0x7aced90
	.quad	128778408               # 0x7ad00a8
	.quad	128783296               # 0x7ad13c0
	.quad	128788184               # 0x7ad26d8
	.quad	128793072               # 0x7ad39f0
	.quad	128797960               # 0x7ad4d08
	.quad	128802848               # 0x7ad6020
	.quad	128807736               # 0x7ad7338
	.quad	128812624               # 0x7ad8650
	.quad	128817512               # 0x7ad9968
	.quad	128822400               # 0x7adac80
	.quad	128827288               # 0x7adbf98
	.quad	128832176               # 0x7add2b0
	.quad	128837064               # 0x7ade5c8
	.quad	128841952               # 0x7adf8e0
	.quad	128846840               # 0x7ae0bf8
	.quad	128851728               # 0x7ae1f10
	.quad	128856616               # 0x7ae3228
	.quad	128861504               # 0x7ae4540
	.quad	128866392               # 0x7ae5858
	.quad	128871280               # 0x7ae6b70
	.quad	128876168               # 0x7ae7e88
	.quad	128881056               # 0x7ae91a0
	.quad	128885944               # 0x7aea4b8
	.quad	128890832               # 0x7aeb7d0
	.quad	128895720               # 0x7aecae8
	.quad	128900608               # 0x7aede00
	.quad	128905496               # 0x7aef118
	.quad	128910384               # 0x7af0430
	.quad	128915272               # 0x7af1748
	.quad	128920160               # 0x7af2a60
	.quad	128925048               # 0x7af3d78
	.quad	128929936               # 0x7af5090
	.quad	128934824               # 0x7af63a8
	.quad	128939712               # 0x7af76c0
	.quad	128944600               # 0x7af89d8
	.quad	128949488               # 0x7af9cf0
	.quad	128954376               # 0x7afb008
	.quad	128959264               # 0x7afc320
	.quad	128964152               # 0x7afd638
	.quad	128969040               # 0x7afe950
	.quad	128973928               # 0x7affc68
	.quad	128978816               # 0x7b00f80
	.quad	128983704               # 0x7b02298
	.quad	128988592               # 0x7b035b0
	.quad	128993480               # 0x7b048c8
	.quad	128998368               # 0x7b05be0
	.quad	129003256               # 0x7b06ef8
	.quad	129008144               # 0x7b08210
	.quad	129013032               # 0x7b09528
	.quad	129017920               # 0x7b0a840
	.quad	129022808               # 0x7b0bb58
	.quad	129027696               # 0x7b0ce70
	.quad	129032584               # 0x7b0e188
	.quad	129037472               # 0x7b0f4a0
	.quad	129042360               # 0x7b107b8
	.quad	129047248               # 0x7b11ad0
	.quad	129052136               # 0x7b12de8
	.quad	129057024               # 0x7b14100
	.quad	129061912               # 0x7b15418
	.quad	129066800               # 0x7b16730
	.quad	129071688               # 0x7b17a48
	.quad	129076576               # 0x7b18d60
	.quad	129081464               # 0x7b1a078
	.quad	129086352               # 0x7b1b390
	.quad	129091240               # 0x7b1c6a8
	.quad	129096128               # 0x7b1d9c0
	.quad	129101016               # 0x7b1ecd8
	.quad	129105904               # 0x7b1fff0
	.quad	129110792               # 0x7b21308
	.quad	129115680               # 0x7b22620
	.quad	129120568               # 0x7b23938
	.quad	129125456               # 0x7b24c50
	.quad	129130344               # 0x7b25f68
	.quad	130519328               # 0x7c79120
	.quad	131510504               # 0x7d6b0e8
	.quad	131515392               # 0x7d6c400
	.quad	131520280               # 0x7d6d718
	.quad	131525168               # 0x7d6ea30
	.quad	131530056               # 0x7d6fd48
	.quad	131534944               # 0x7d71060
	.quad	131539832               # 0x7d72378
	.quad	131544720               # 0x7d73690
	.quad	131549608               # 0x7d749a8
	.quad	131554496               # 0x7d75cc0
	.quad	131559384               # 0x7d76fd8
	.quad	131564272               # 0x7d782f0
	.quad	131569160               # 0x7d79608
	.quad	131574048               # 0x7d7a920
	.quad	131578936               # 0x7d7bc38
	.quad	131583824               # 0x7d7cf50
	.quad	131588712               # 0x7d7e268
	.quad	131593600               # 0x7d7f580
	.quad	131598488               # 0x7d80898
	.quad	131603376               # 0x7d81bb0
	.quad	131608264               # 0x7d82ec8
	.quad	131613152               # 0x7d841e0
	.quad	131618040               # 0x7d854f8
	.quad	131622928               # 0x7d86810
	.quad	131627816               # 0x7d87b28
	.quad	131632704               # 0x7d88e40
	.quad	131637592               # 0x7d8a158
	.quad	131642480               # 0x7d8b470
	.quad	131647368               # 0x7d8c788
	.quad	131652256               # 0x7d8daa0
	.quad	131657144               # 0x7d8edb8
	.quad	131662032               # 0x7d900d0
	.quad	131666920               # 0x7d913e8
	.quad	131671808               # 0x7d92700
	.quad	131676696               # 0x7d93a18
	.quad	131681584               # 0x7d94d30
	.quad	131686472               # 0x7d96048
	.quad	131691360               # 0x7d97360
	.quad	131696248               # 0x7d98678
	.quad	131701136               # 0x7d99990
	.quad	131706024               # 0x7d9aca8
	.quad	131710912               # 0x7d9bfc0
	.quad	131715800               # 0x7d9d2d8
	.quad	131720688               # 0x7d9e5f0
	.quad	131725576               # 0x7d9f908
	.quad	131730464               # 0x7da0c20
	.quad	131735352               # 0x7da1f38
	.quad	131740240               # 0x7da3250
	.quad	131745128               # 0x7da4568
	.quad	131750016               # 0x7da5880
	.quad	131754904               # 0x7da6b98
	.quad	131759792               # 0x7da7eb0
	.quad	131764680               # 0x7da91c8
	.quad	131769568               # 0x7daa4e0
	.quad	131774456               # 0x7dab7f8
	.quad	131779344               # 0x7dacb10
	.quad	131784232               # 0x7dade28
	.quad	131789120               # 0x7daf140
	.quad	131794008               # 0x7db0458
	.quad	131798896               # 0x7db1770
	.quad	131803784               # 0x7db2a88
	.quad	131808672               # 0x7db3da0
	.quad	131813560               # 0x7db50b8
	.quad	131818448               # 0x7db63d0
	.quad	131823336               # 0x7db76e8
	.quad	131828224               # 0x7db8a00
	.quad	131833112               # 0x7db9d18
	.quad	131838000               # 0x7dbb030
	.quad	131842888               # 0x7dbc348
	.quad	131847776               # 0x7dbd660
	.quad	131852664               # 0x7dbe978
	.quad	131857552               # 0x7dbfc90
	.quad	131862440               # 0x7dc0fa8
	.quad	131867328               # 0x7dc22c0
	.quad	131872216               # 0x7dc35d8
	.quad	131877104               # 0x7dc48f0
	.quad	131881992               # 0x7dc5c08
	.quad	131886880               # 0x7dc6f20
	.quad	131891768               # 0x7dc8238
	.quad	131896656               # 0x7dc9550
	.quad	131901544               # 0x7dca868
	.quad	131906432               # 0x7dcbb80
	.quad	131911320               # 0x7dcce98
	.quad	131916208               # 0x7dce1b0
	.quad	131921096               # 0x7dcf4c8
	.quad	131925984               # 0x7dd07e0
	.quad	131930872               # 0x7dd1af8
	.quad	133319856               # 0x7f24cb0

	.align	16                      # @ng1
ng1:
	.quad	48628552                # 0x2e60348
	.quad	48652896                # 0x2e66260

	.align	16                      # @ng2
ng2:
	.quad	48655296                # 0x2e66bc0
	.quad	48679640                # 0x2e6cad8

	.align	16                      # @ng3
ng3:
	.quad	48682040                # 0x2e6d438
	.quad	48706384                # 0x2e73350

	.align	16                      # @ng4
ng4:
	.quad	48708784                # 0x2e73cb0
	.quad	48733128                # 0x2e79bc8

	.align	16                      # @ng5
ng5:
	.quad	48735528                # 0x2e7a528
	.quad	48759872                # 0x2e80440

	.align	16                      # @ng6
ng6:
	.quad	48762272                # 0x2e80da0
	.quad	48786616                # 0x2e86cb8

	.align	16                      # @ng7
ng7:
	.quad	48789016                # 0x2e87618
	.quad	48813360                # 0x2e8d530

	.align	16                      # @ng8
ng8:
	.quad	48815760                # 0x2e8de90
	.quad	48840104                # 0x2e93da8

	.align	16                      # @ng9
ng9:
	.quad	48842504                # 0x2e94708
	.quad	48866848                # 0x2e9a620

	.align	16                      # @ng10
ng10:
	.quad	48869248                # 0x2e9af80
	.quad	48893592                # 0x2ea0e98

	.align	16                      # @ng11
ng11:
	.quad	49052328                # 0x2ec7aa8
	.quad	50612480                # 0x3044900
	.quad	50622536                # 0x3047048
	.quad	50625624                # 0x3047c58
	.quad	50798096                # 0x3071e10
	.quad	50805904                # 0x3073c90
	.quad	50813712                # 0x3075b10
	.quad	50821520                # 0x3077990
	.quad	50829328                # 0x3079810
	.quad	50837136                # 0x307b690
	.quad	50844944                # 0x307d510
	.quad	50852752                # 0x307f390
	.quad	50865320                # 0x30824a8
	.quad	50869784                # 0x3083618
	.quad	50877592                # 0x3085498
	.quad	50885400                # 0x3087318
	.quad	50893208                # 0x3089198
	.quad	50901016                # 0x308b018
	.quad	50908824                # 0x308ce98
	.quad	50916632                # 0x308ed18
	.quad	50924440                # 0x3090b98
	.quad	50932248                # 0x3092a18
	.quad	51027896                # 0x30a9fb8

	.align	16                      # @ng12
ng12:
	.quad	49062104                # 0x2eca0d8
	.quad	50559240                # 0x3037908
	.quad	50566872                # 0x30396d8
	.quad	50574504                # 0x303b4a8
	.quad	50582136                # 0x303d278
	.quad	50589768                # 0x303f048
	.quad	50597400                # 0x3040e18
	.quad	50605032                # 0x3042be8
	.quad	50618072                # 0x3045ed8
	.quad	50625960                # 0x3047da8
	.quad	50644592                # 0x304c670
	.quad	50652224                # 0x304e440
	.quad	50659856                # 0x3050210
	.quad	50667488                # 0x3051fe0
	.quad	50675120                # 0x3053db0
	.quad	50682752                # 0x3055b80
	.quad	50690384                # 0x3057950
	.quad	50698016                # 0x3059720
	.quad	50705648                # 0x305b4f0
	.quad	50855656                # 0x307fee8

	.align	16                      # @ng13
ng13:
	.quad	49066992                # 0x2ecb3f0
	.quad	50629424                # 0x3048b30
	.quad	50634736                # 0x3049ff0
	.quad	50637616                # 0x304ab30
	.quad	50801832                # 0x3072ca8
	.quad	50809640                # 0x3074b28
	.quad	50817448                # 0x30769a8
	.quad	50825256                # 0x3078828
	.quad	50833064                # 0x307a6a8
	.quad	50840872                # 0x307c528
	.quad	50848680                # 0x307e3a8
	.quad	50861896                # 0x3081748
	.quad	50865824                # 0x30826a0
	.quad	50873520                # 0x30844b0
	.quad	50881328                # 0x3086330
	.quad	50889136                # 0x30881b0
	.quad	50896944                # 0x308a030
	.quad	50904752                # 0x308beb0
	.quad	50912560                # 0x308dd30
	.quad	50920368                # 0x308fbb0
	.quad	50928176                # 0x3091a30
	.quad	50935984                # 0x30938b0

	.align	16                      # @ng14
ng14:
	.quad	49071880                # 0x2ecc708
	.quad	50629256                # 0x3048a88
	.quad	50634904                # 0x304a098
	.quad	50637784                # 0x304abd8
	.quad	50802336                # 0x3072ea0
	.quad	50810144                # 0x3074d20
	.quad	50817952                # 0x3076ba0
	.quad	50825760                # 0x3078a20
	.quad	50833568                # 0x307a8a0
	.quad	50841376                # 0x307c720
	.quad	50849184                # 0x307e5a0
	.quad	50862400                # 0x3081940
	.quad	50874024                # 0x30846a8
	.quad	50881832                # 0x3086528
	.quad	50889640                # 0x30883a8
	.quad	50897448                # 0x308a228
	.quad	50905256                # 0x308c0a8
	.quad	50913064                # 0x308df28
	.quad	50920872                # 0x308fda8
	.quad	50928680                # 0x3091c28
	.quad	50936488                # 0x3093aa8
	.quad	51027560                # 0x30a9e68

	.align	16                      # @ng15
ng15:
	.quad	49076768                # 0x2ecda20
	.quad	50559744                # 0x3037b00
	.quad	50567376                # 0x30398d0
	.quad	50575008                # 0x303b6a0
	.quad	50582640                # 0x303d470
	.quad	50590272                # 0x303f240
	.quad	50597904                # 0x3041010
	.quad	50605536                # 0x3042de0
	.quad	50618576                # 0x30460d0
	.quad	50635072                # 0x304a140
	.quad	50637952                # 0x304ac80
	.quad	50645096                # 0x304c868
	.quad	50652728                # 0x304e638
	.quad	50660360                # 0x3050408
	.quad	50667992                # 0x30521d8
	.quad	50675624                # 0x3053fa8
	.quad	50683256                # 0x3055d78
	.quad	50690888                # 0x3057b48
	.quad	50698520                # 0x3059918
	.quad	50706152                # 0x305b6e8
	.quad	50802168                # 0x3072df8
	.quad	50809976                # 0x3074c78
	.quad	50817784                # 0x3076af8
	.quad	50825592                # 0x3078978
	.quad	50833400                # 0x307a7f8
	.quad	50841208                # 0x307c678
	.quad	50849016                # 0x307e4f8
	.quad	50862232                # 0x3081898
	.quad	50873856                # 0x3084600
	.quad	50881664                # 0x3086480
	.quad	50889472                # 0x3088300
	.quad	50897280                # 0x308a180
	.quad	50905088                # 0x308c000
	.quad	50912896                # 0x308de80
	.quad	50920704                # 0x308fd00
	.quad	50928512                # 0x3091b80
	.quad	50936320                # 0x3093a00
	.quad	51027392                # 0x30a9dc0

	.align	16                      # @ng16
ng16:
	.quad	49091432                # 0x2ed1368
	.quad	49265408                # 0x2efbb00
	.quad	49270816                # 0x2efd020
	.quad	49276224                # 0x2efe540
	.quad	49281632                # 0x2effa60
	.quad	49287040                # 0x2f00f80
	.quad	49292448                # 0x2f024a0
	.quad	49297856                # 0x2f039c0
	.quad	49303264                # 0x2f04ee0
	.quad	49308672                # 0x2f06400
	.quad	49314080                # 0x2f07920
	.quad	49319488                # 0x2f08e40
	.quad	49324896                # 0x2f0a360
	.quad	49330304                # 0x2f0b880
	.quad	49335712                # 0x2f0cda0
	.quad	49341120                # 0x2f0e2c0
	.quad	49346528                # 0x2f0f7e0
	.quad	49351936                # 0x2f10d00
	.quad	49357344                # 0x2f12220
	.quad	49362752                # 0x2f13740
	.quad	49368160                # 0x2f14c60
	.quad	49373568                # 0x2f16180
	.quad	49378976                # 0x2f176a0
	.quad	49384384                # 0x2f18bc0
	.quad	49389792                # 0x2f1a0e0
	.quad	49395200                # 0x2f1b600
	.quad	49400608                # 0x2f1cb20
	.quad	49406016                # 0x2f1e040
	.quad	49411424                # 0x2f1f560
	.quad	49416832                # 0x2f20a80
	.quad	49422240                # 0x2f21fa0
	.quad	49427648                # 0x2f234c0
	.quad	49433056                # 0x2f249e0
	.quad	49438464                # 0x2f25f00
	.quad	49443872                # 0x2f27420
	.quad	49449280                # 0x2f28940
	.quad	49454688                # 0x2f29e60
	.quad	49460096                # 0x2f2b380
	.quad	49465504                # 0x2f2c8a0
	.quad	49470912                # 0x2f2ddc0
	.quad	49476320                # 0x2f2f2e0
	.quad	49481728                # 0x2f30800
	.quad	49487136                # 0x2f31d20
	.quad	49492544                # 0x2f33240
	.quad	49497952                # 0x2f34760
	.quad	49503360                # 0x2f35c80
	.quad	49508768                # 0x2f371a0
	.quad	49514176                # 0x2f386c0
	.quad	49519584                # 0x2f39be0
	.quad	49524992                # 0x2f3b100
	.quad	49530400                # 0x2f3c620
	.quad	49535808                # 0x2f3db40
	.quad	49541216                # 0x2f3f060
	.quad	49546624                # 0x2f40580
	.quad	49552032                # 0x2f41aa0
	.quad	49557440                # 0x2f42fc0
	.quad	49562848                # 0x2f444e0
	.quad	49568256                # 0x2f45a00
	.quad	49573664                # 0x2f46f20
	.quad	49579072                # 0x2f48440
	.quad	49584480                # 0x2f49960
	.quad	49589888                # 0x2f4ae80
	.quad	49595296                # 0x2f4c3a0
	.quad	49600704                # 0x2f4d8c0
	.quad	49606112                # 0x2f4ede0
	.quad	49611520                # 0x2f50300
	.quad	49616928                # 0x2f51820
	.quad	49622336                # 0x2f52d40
	.quad	49627744                # 0x2f54260
	.quad	49633152                # 0x2f55780
	.quad	49638560                # 0x2f56ca0

	.align	16                      # @ng17
ng17:
	.quad	50555424                # 0x3036a20
	.quad	50563056                # 0x30387f0
	.quad	50570688                # 0x303a5c0
	.quad	50578320                # 0x303c390
	.quad	50585952                # 0x303e160
	.quad	50593584                # 0x303ff30
	.quad	50601216                # 0x3041d00
	.quad	50608848                # 0x3043ad0
	.quad	50640776                # 0x304b788
	.quad	50648408                # 0x304d558
	.quad	50656040                # 0x304f328
	.quad	50663672                # 0x30510f8
	.quad	50671304                # 0x3052ec8
	.quad	50678936                # 0x3054c98
	.quad	50686568                # 0x3056a68
	.quad	50694200                # 0x3058838
	.quad	50701832                # 0x305a608

	.align	16                      # @ng18
ng18:
	.quad	50559576                # 0x3037a58
	.quad	50567208                # 0x3039828
	.quad	50574840                # 0x303b5f8
	.quad	50582472                # 0x303d3c8
	.quad	50590104                # 0x303f198
	.quad	50597736                # 0x3040f68
	.quad	50605368                # 0x3042d38
	.quad	50612648                # 0x30449a8
	.quad	50618408                # 0x3046028
	.quad	50622704                # 0x30470f0
	.quad	50629592                # 0x3048bd8
	.quad	50644928                # 0x304c7c0
	.quad	50652560                # 0x304e590
	.quad	50660192                # 0x3050360
	.quad	50667824                # 0x3052130
	.quad	50675456                # 0x3053f00
	.quad	50683088                # 0x3055cd0
	.quad	50690720                # 0x3057aa0
	.quad	50698352                # 0x3059870
	.quad	50705984                # 0x305b640
	.quad	50797928                # 0x3071d68
	.quad	50802504                # 0x3072f48
	.quad	50805736                # 0x3073be8
	.quad	50810312                # 0x3074dc8
	.quad	50813544                # 0x3075a68
	.quad	50818120                # 0x3076c48
	.quad	50821352                # 0x30778e8
	.quad	50825928                # 0x3078ac8
	.quad	50829160                # 0x3079768
	.quad	50833736                # 0x307a948
	.quad	50836968                # 0x307b5e8
	.quad	50841544                # 0x307c7c8
	.quad	50844776                # 0x307d468
	.quad	50849352                # 0x307e648
	.quad	50852584                # 0x307f2e8
	.quad	50855992                # 0x3080038
	.quad	50862568                # 0x30819e8
	.quad	50865656                # 0x30825f8
	.quad	50869616                # 0x3083570
	.quad	50874192                # 0x3084750
	.quad	50877424                # 0x30853f0
	.quad	50882000                # 0x30865d0
	.quad	50885232                # 0x3087270
	.quad	50889808                # 0x3088450
	.quad	50893040                # 0x30890f0
	.quad	50897616                # 0x308a2d0
	.quad	50900848                # 0x308af70
	.quad	50905424                # 0x308c150
	.quad	50908656                # 0x308cdf0
	.quad	50913232                # 0x308dfd0
	.quad	50916464                # 0x308ec70
	.quad	50921040                # 0x308fe50
	.quad	50924272                # 0x3090af0
	.quad	50928848                # 0x3091cd0
	.quad	50932080                # 0x3092970
	.quad	50936656                # 0x3093b50

	.align	16                      # @ng19
ng19:
	.quad	50555592                # 0x3036ac8
	.quad	50563224                # 0x3038898
	.quad	50570856                # 0x303a668
	.quad	50578488                # 0x303c438
	.quad	50586120                # 0x303e208
	.quad	50593752                # 0x303ffd8
	.quad	50601384                # 0x3041da8
	.quad	50609016                # 0x3043b78
	.quad	50623040                # 0x3047240
	.quad	50640944                # 0x304b830
	.quad	50648576                # 0x304d600
	.quad	50656208                # 0x304f3d0
	.quad	50663840                # 0x30511a0
	.quad	50671472                # 0x3052f70
	.quad	50679104                # 0x3054d40
	.quad	50686736                # 0x3056b10
	.quad	50694368                # 0x30588e0
	.quad	50702000                # 0x305a6b0

	.align	16                      # @ng20
ng20:
	.quad	47741696                # 0x2d87b00
	.quad	47789088                # 0x2d93420

	.align	16                      # @ng21
ng21:
	.quad	50798264                # 0x3071eb8
	.quad	50806072                # 0x3073d38
	.quad	50813880                # 0x3075bb8
	.quad	50821688                # 0x3077a38
	.quad	50829496                # 0x30798b8
	.quad	50837304                # 0x307b738
	.quad	50845112                # 0x307d5b8
	.quad	50852920                # 0x307f438
	.quad	50869952                # 0x30836c0
	.quad	50877760                # 0x3085540
	.quad	50885568                # 0x30873c0
	.quad	50893376                # 0x3089240
	.quad	50901184                # 0x308b0c0
	.quad	50908992                # 0x308cf40
	.quad	50916800                # 0x308edc0
	.quad	50924608                # 0x3090c40
	.quad	50932416                # 0x3092ac0

	.align	16                      # @ng22
ng22:
	.quad	51588280                # 0x3132cb8
	.quad	51591160                # 0x31337f8
	.quad	51594040                # 0x3134338
	.quad	51596920                # 0x3134e78
	.quad	51599800                # 0x31359b8
	.quad	51602680                # 0x31364f8
	.quad	51605560                # 0x3137038
	.quad	51608440                # 0x3137b78
	.quad	51611320                # 0x31386b8
	.quad	51614200                # 0x31391f8
	.quad	51617080                # 0x3139d38
	.quad	51619960                # 0x313a878
	.quad	51622840                # 0x313b3b8
	.quad	51625720                # 0x313bef8
	.quad	51628600                # 0x313ca38
	.quad	51631480                # 0x313d578
	.quad	51634360                # 0x313e0b8
	.quad	51637240                # 0x313ebf8
	.quad	51640120                # 0x313f738
	.quad	51643000                # 0x3140278
	.quad	51645880                # 0x3140db8
	.quad	51648760                # 0x31418f8
	.quad	51651640                # 0x3142438
	.quad	51654520                # 0x3142f78
	.quad	51657400                # 0x3143ab8
	.quad	51660280                # 0x31445f8
	.quad	51663160                # 0x3145138
	.quad	51666040                # 0x3145c78
	.quad	51668920                # 0x31467b8
	.quad	51671800                # 0x31472f8
	.quad	51674680                # 0x3147e38
	.quad	51677560                # 0x3148978
	.quad	51680440                # 0x31494b8
	.quad	51683320                # 0x3149ff8
	.quad	51686200                # 0x314ab38
	.quad	51689080                # 0x314b678
	.quad	51691960                # 0x314c1b8
	.quad	51694840                # 0x314ccf8
	.quad	51697720                # 0x314d838
	.quad	51700600                # 0x314e378
	.quad	51703480                # 0x314eeb8
	.quad	51706360                # 0x314f9f8
	.quad	51709240                # 0x3150538
	.quad	51712120                # 0x3151078
	.quad	51715000                # 0x3151bb8
	.quad	51717880                # 0x31526f8
	.quad	51720760                # 0x3153238
	.quad	51723640                # 0x3153d78

	.lcomm	ng23,8,4                # @ng23
	.align	4                       # @ng24
ng24:
	.long	1                       # 0x1
	.long	0                       # 0x0

	.align	4                       # @ng25
ng25:
	.long	0                       # 0x0
	.long	1                       # 0x1

	.align	4                       # @ng26
ng26:
	.long	7                       # 0x7
	.long	0                       # 0x0

	.align	4                       # @ng27
ng27:
	.long	6                       # 0x6
	.long	0                       # 0x0

	.align	4                       # @ng28
ng28:
	.long	5                       # 0x5
	.long	0                       # 0x0

	.align	4                       # @ng29
ng29:
	.long	4                       # 0x4
	.long	0                       # 0x0

	.align	4                       # @ng30
ng30:
	.long	3                       # 0x3
	.long	0                       # 0x0

	.align	4                       # @ng31
ng31:
	.long	2                       # 0x2
	.long	0                       # 0x0

	.align	4                       # @ng32
ng32:
	.long	1                       # 0x1
	.long	0                       # 0x0

	.lcomm	ng33,8,4                # @ng33
	.align	4                       # @ng35
ng35:
	.long	15                      # 0xf
	.long	0                       # 0x0

	.align	4                       # @ng36
ng36:
	.long	8                       # 0x8
	.long	0                       # 0x0

	.align	4                       # @ng37
ng37:
	.long	23                      # 0x17
	.long	0                       # 0x0

	.align	4                       # @ng38
ng38:
	.long	16                      # 0x10
	.long	0                       # 0x0

	.align	4                       # @ng39
ng39:
	.long	31                      # 0x1f
	.long	0                       # 0x0

	.align	4                       # @ng40
ng40:
	.long	24                      # 0x18
	.long	0                       # 0x0

	.align	4                       # @ng42
ng42:
	.long	1                       # 0x1
	.long	1                       # 0x1

	.align	4                       # @ng44
ng44:
	.long	39                      # 0x27
	.long	0                       # 0x0

	.align	4                       # @ng45
ng45:
	.long	32                      # 0x20
	.long	0                       # 0x0

	.align	4                       # @ng46
ng46:
	.long	47                      # 0x2f
	.long	0                       # 0x0

	.align	4                       # @ng47
ng47:
	.long	40                      # 0x28
	.long	0                       # 0x0

	.align	4                       # @ng48
ng48:
	.long	55                      # 0x37
	.long	0                       # 0x0

	.align	4                       # @ng49
ng49:
	.long	48                      # 0x30
	.long	0                       # 0x0

	.align	4                       # @ng50
ng50:
	.long	63                      # 0x3f
	.long	0                       # 0x0

	.align	4                       # @ng51
ng51:
	.long	56                      # 0x38
	.long	0                       # 0x0

	.align	4                       # @ng53
ng53:
	.long	11                      # 0xb
	.long	0                       # 0x0

	.align	4                       # @ng54
ng54:
	.long	12                      # 0xc
	.long	0                       # 0x0


